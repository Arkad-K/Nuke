set cut_paste_input [stack 0]
version 15.0 v4
BackdropNode {
inputs 0
name BackdropNode56
tile_color 0x7171c600
label Displace/Particles
note_font_size 42
selected true
xpos 43637
ypos -3442
bdwidth 510
bdheight 1226
}
push $cut_paste_input
Axis4 {
name Axis1
selected true
xpos 43688
ypos -2682
}
Constant {
inputs 0
channels rgb
name Constant13
selected true
xpos 44007
ypos -3019
}
Noise {
center {2048 1152}
name Noise4
selected true
xpos 44007
ypos -2910
}
Dot {
name Dot131
selected true
xpos 43983
ypos -2906
}
set Nd8cb3e10 [stack 0]
Group {
name HeatWave
knobChanged "n = nuke.thisNode()\n\nif n.input(2) !=None :\n    n\['evolutionspeed'].setEnabled(False)\n    n\['Base'].setEnabled(False)\n    n\['Detail'].setEnabled(False)\n    n\['basesize'].setEnabled(False)\n    n\['basedistortion'].setEnabled(False)\n    n\['detailsize'].setEnabled(False)\n    n\['detaildistortion'].setEnabled(False)\n    n\['windstrength'].setEnabled(False)\nelse:\n    n\['evolutionspeed'].setEnabled(True)\n    n\['Base'].setEnabled(True)\n    n\['Detail'].setEnabled(True)\n    n\['basesize'].setEnabled(True)\n    n\['basedistortion'].setEnabled(True)\n    n\['detailsize'].setEnabled(True)\n    n\['detaildistortion'].setEnabled(True)\n    n\['windstrength'].setEnabled(True)"
tile_color 0xe0000ff
gl_color 0xff5b5bff
note_font_color 0xe24a4aff
selected true
xpos 43734
ypos -3297
addUserKnob {20 User l HeatWave}
addUserKnob {41 channels l Channels T STMap1.channels}
addUserKnob {41 POS l Position T Ramp1.POS}
addUserKnob {41 WIND l "Wind Angle" T Ramp1.WIND}
addUserKnob {26 __________________________ l "<b><span style=\"color:#E44747;\">Distortion"}
addUserKnob {7 globaldistortion l "Global Distortion" R 0 100}
globaldistortion 50
addUserKnob {7 distortionresponse l Response R 0 2}
distortionresponse 1
addUserKnob {7 evolutionspeed l "Turbulence Speed" t "Noise Z offset speed over time." R 0 100}
evolutionspeed 50
addUserKnob {20 Base l BASE n 1}
addUserKnob {7 basesize l "Base Size" R 0 100}
basesize 50
addUserKnob {7 basedistortion l "Base Distortion" R 0 100}
basedistortion 50
addUserKnob {20 endGroup n -1}
addUserKnob {20 Detail l DETAIL n 1}
addUserKnob {7 detailsize l "Detail Size" R 0 100}
detailsize 50
addUserKnob {7 detaildistortion l "Detail Distortion" R 0 100}
detaildistortion 50
addUserKnob {20 endGroup_1 l endGroup n -1}
addUserKnob {26 ________________________________ l "<b><span style=\"color:#E44747;\">Haze Blur"}
addUserKnob {7 hazeamount l "Blur Size" R 0 100}
hazeamount 50
addUserKnob {7 hazeresponse l Response R 0 2}
hazeresponse 1
addUserKnob {26 ___________________________ l "<b><span style=\"color:#E44747;\">Wind"}
addUserKnob {41 useslider l "Use slider instead of point" T Ramp1.useslider}
addUserKnob {41 rotation l "Wind Angle" T Ramp1.rotation}
addUserKnob {7 windstrength l Strength R 0 100}
windstrength 50
addUserKnob {26 ""}
addUserKnob {7 mix l Mix}
mix 1
addUserKnob {6 limittobb l "Limit to Bounding Box    " t "Limits distortion and blur calculations to 'Mask' or 'Custom' inputs bounding boxes." +STARTLINE}
limittobb true
addUserKnob {6 fillframeedges l "Fill Frame Edges   " t "Adds a fake overscan to avoid black borders around the frame.\n\nEnable this if your input image has no overscan.\n\nOverscan size can be adjusted with the Overscan slider located in the \"Extras\" tab.\n\nIf a Roto is being used for the Mask input, remember to set it to \"no clip\" in the Roto's \"clip to\" knob to avoid bounding box cropping." -STARTLINE}
addUserKnob {6 previewnoisemap l "Preview Noise Map         " -STARTLINE}
addUserKnob {26 credits l " " T "<font size=\"5\"><span style=\"color:#575757;\">HeatWave <font size=\"2\"><span style=\"color:#5a5a5a;\"> v4.0 &nbsp; â”‚ &nbsp; <font size=\"1\">B Y &nbsp; D A M I A N &nbsp; B I N D E R"}
addUserKnob {20 Extras}
addUserKnob {26 ______________________ l <b>Extras}
addUserKnob {7 ca l "Chromatic Aberration" R -1 1}
addUserKnob {7 detailwindmult l "Detail Wind Strength Mult" t "Wind strength multiplier that affects only the DETAIL noise. Can be used to reduce flickering or add parallax between BASE and DETAIL noise." R 0 2}
detailwindmult 1
addUserKnob {7 overscan l Overscan t "Check \"Fill Frame Edges\" in the main tab." R 0 400}
overscan 200
}
Ramp {
inputs 0
output none
p0 {{POS} {POS}}
p1 {{"parent.useslider==0 ? WIND : p0.x + (p0.x - p0.x) * cos(rotation*pi/-180) - ((p0.y+(Image.width/8)) - p0.y) * sin(rotation*pi/-180)"} {"parent.useslider==0 ? WIND : p0.y + (p0.x - p0.x) * sin(rotation*pi/-180) + ((p0.y+(Image.width/8)*Image.pixel_aspect) - p0.y) * cos(rotation*pi/-180)"}}
name Ramp1
knobChanged "n = nuke.thisNode()\n\nif n\['useslider'].getValue() == 1:\n    n\['WIND'].setEnabled(False)\n    n\['rotation'].setEnabled(True)\nelse:\n    n\['WIND'].setEnabled(True)\n    n\['rotation'].setEnabled(False)\n    \nn.knob('p0').setEnabled(False)\nn.knob('p1').setEnabled(False)"
gl_color 0xff5b5bff
xpos 1770
ypos 175
hide_input true
addUserKnob {20 User}
addUserKnob {12 POS}
POS {500 300}
addUserKnob {12 WIND}
WIND {500 800}
addUserKnob {7 rotation +DISABLED R -360 360}
addUserKnob {6 useslider +STARTLINE}
}
Input {
inputs 0
name Mask
xpos 2292
ypos -456
number 1
}
BlackOutside {
name BlackOutside5
xpos 2292
ypos -428
}
AdjBBox {
numpixels 24
name AdjBBox1
xpos 2292
ypos -402
}
Input {
inputs 0
name Image
xpos 82
ypos -464
}
Dot {
name Dot14
xpos 116
ypos -401
}
set N6e2c8d40 [stack 0]
Crop {
box {0 0 {width} {height}}
crop false
name Crop2
xpos 82
ypos -370
disable {{!fillframeedges}}
}
set N6e2ce6c0 [stack 0]
Crop {
box {{-parent.overscan} {-parent.overscan} {width+parent.overscan} {height+parent.overscan}}
name Crop3
xpos 190
ypos -370
disable {{!fillframeedges}}
}
Dot {
name Dot15
xpos 224
ypos -137
}
set N6e2e5560 [stack 0]
Remove {
name Remove2
xpos 1929
ypos -147
}
set N6e2eae20 [stack 0]
Merge2 {
inputs 2
bbox intersection
name Merge10
xpos 2292
ypos -141
}
Dot {
name Dot10
xpos 2326
ypos -13
}
set N6e306340 [stack 0]
Dot {
name Dot13
xpos 2326
ypos 651
}
set N6e30bbd0 [stack 0]
Dot {
name Dot34
xpos 2326
ypos 798
}
set N6e311560 [stack 0]
Dot {
name Dot33
xpos 2327
ypos 1720
}
set N6e316ef0 [stack 0]
push $N6e2e5560
Dot {
name Dot51
xpos 224
ypos 51
}
Input {
inputs 0
name Custom
xpos 765
ypos -457
number 2
}
AdjBBox {
numpixels 24
name AdjBBox2
xpos 765
ypos -431
}
Merge2 {
inputs 2
bbox A
output none
name Merge11
xpos 765
ypos 41
disable {{parent.limittobb}}
}
Dot {
name Dot40
xpos 799
ypos 158
}
set N6e342500 [stack 0]
Dot {
name Dot42
xpos 1061
ypos 158
}
set N6e347da0 [stack 0]
Multiply {
value 0.1
name Multiply6
xpos 1027
ypos 402
}
Gamma {
value {{parent.distortionresponse}}
name Gamma1
xpos 1027
ypos 440
}
Dot {
name Dot41
xpos 1061
ypos 723
}
push $N6e306340
push $N6e2eae20
CopyBBox {
inputs 2
name CopyBBox1
xpos 1929
ypos -17
disable {{"!parent.limittobb+!\[exists parent.input1]*!\[exists parent.input2]"}}
}
AdjBBox {
numpixels 1
name AdjBBox3
xpos 1929
ypos 55
}
Dot {
name Dot5
xpos 1963
ypos 133
}
set N6e37ee10 [stack 0]
Dot {
name Dot3
xpos 1637
ypos 133
}
Noise {
cliptype bbox
size 1000
zoffset {{(frame-root.first_frame)*(evolutionspeed/400)}}
octaves 1
gain 0.1
translate {{(frame-root.first_frame)*(windstrength*4)+Ramp1.p0} {Ramp1.p0}}
rotate {{atan2((Ramp1.p1.y/pixel_aspect)-Ramp1.p0.y/pixel_aspect,(Ramp1.p1.x)-Ramp1.p0.x)*(180/pi)}}
scale {{parent.basesize/32} {parent.basesize/32*pixel_aspect}}
center {{Ramp1.p0.x-translate} {Ramp1.p0.y-translate}}
name Noise10
xpos 1603
ypos 181
}
Clamp {
maximum_enable false
name Clamp2
xpos 1603
ypos 207
}
Dot {
name Dot8
xpos 1637
ypos 275
}
set N6e3b1660 [stack 0]
Gamma {
value {{parent.distortionresponse}}
name Gamma2
xpos 1603
ypos 407
}
set N6e3b7370 [stack 0]
push $N6e37ee10
Noise {
cliptype bbox
size {{parent.detailsize*20}}
zoffset {{(frame-root.first_frame)*evolutionspeed/20000}}
octaves 8
gain 0.55
translate {{(frame-root.first_frame)*(windstrength*detailwindmult)+Ramp1.p0} {Ramp1.p0}}
rotate {{atan2((Ramp1.p1.y/pixel_aspect)-Ramp1.p0.y/pixel_aspect,(Ramp1.p1.x)-Ramp1.p0.x)*(180/pi)}}
scale {1 {pixel_aspect}}
center {{Ramp1.p0.x-translate} {Ramp1.p0.y-translate}}
name Noise3
xpos 1929
ypos 181
}
Clamp {
maximum_enable false
name Clamp1
xpos 1929
ypos 209
}
Multiply {
value {{(parent.detailsize/100)*(parent.detaildistortion/100*2)}}
name Multiply4
xpos 1929
ypos 355
}
Merge2 {
inputs 2
operation multiply
name Merge5
xpos 1929
ypos 413
}
Dot {
name Dot6
xpos 1963
ypos 510
}
push $N6e3b7370
Multiply {
value {{(parent.basedistortion/2)*pow(parent.basesize/100,1.5)}}
name Multiply3
xpos 1603
ypos 455
}
Merge2 {
inputs 2
operation plus
name Merge3
xpos 1603
ypos 506
}
BlackOutside {
name BlackOutside6
xpos 1603
ypos 549
}
Switch {
inputs 2
which {{"\[exists parent.input2]"}}
name Switch4
xpos 1603
ypos 719
}
Dot {
name Dot7
xpos 1637
ypos 937
}
set N6e241170 [stack 0]
Multiply {
value 0.08
name Multiply2
xpos 1374
ypos 927
disable {{"\[exists parent.input2]"}}
}
Dot {
name Dot30
xpos 1188
ypos 937
}
Merge2 {
inputs 2
operation mask
name Merge9
xpos 1154
ypos 1716
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot29
xpos 1188
ypos 3060
}
Shuffle {
in alpha
name Shuffle1
xpos 249
ypos 3056
}
push $N6e347da0
Dot {
name Dot9
xpos 1275
ypos 158
}
push $N6e311560
Merge2 {
inputs 2
name Merge2
xpos 1241
ypos 794
}
Dot {
name Dot35
xpos 1004
ypos 798
}
set N6e299480 [stack 0]
Dot {
name Dot37
xpos 1004
ypos 2940
}
Expression {
channel0 {-rgba.red -rgba.green -rgba.blue none}
channel1 {-rgba.red -rgba.green -rgba.blue none}
channel2 {-rgba.red -rgba.green -rgba.blue none}
expr3 !a>0
name Expression2
xpos 247
ypos 2936
}
push $N6e2e5560
push $N6e2ce6c0
Mirror {
Horizontal true
Vertical true
name Mirror1
xpos 82
ypos -344
disable {{!fillframeedges}}
}
Reformat {
type scale
scale 3
filter impulse
name Reformat11
xpos 82
ypos -318
disable {{!fillframeedges}}
}
Tile {
rows 3
mirrorRows true
columns 3
mirrorCols true
filter impulse
name Tile2
xpos 82
ypos -292
disable {{!fillframeedges}}
}
Reformat {
type "to box"
box_width {{Image.width}}
box_height {{Image.height}}
box_fixed true
box_pixel_aspect {{Image.pixel_aspect}}
filter impulse
name Reformat12
xpos 82
ypos -266
disable {{!fillframeedges}}
}
Transform {
translate {-1 -1}
scale 3
center {{"width / 2"} {"height / 2"}}
filter impulse
black_outside false
name Transform4
xpos 82
ypos -240
disable {{!fillframeedges}}
}
push $N6e2c8d40
Dot {
name Dot22
xpos 36
ypos -401
}
Dot {
name Dot24
xpos 36
ypos -189
}
Dissolve {
inputs 2
which 1
name Dissolve3
xpos 82
ypos -199
disable {{!fillframeedges}}
}
CopyBBox {
inputs 2
name CopyBBox3
xpos 82
ypos -141
disable {{!fillframeedges}}
}
Dot {
name Dot39
xpos 116
ypos 575
}
set N6e11db40 [stack 0]
Dot {
name Dot38
xpos -191
ypos 575
}
Dot {
name Dot36
xpos -191
ypos 2940
}
push $N6e316ef0
Dot {
name Dot12
xpos 2327
ypos 1876
}
push $N6e241170
Dot {
name Dot11
xpos 1637
ypos 1247
}
set N6e1343e0 [stack 0]
Position {
translate {0 1}
name Position2
xpos 1715
ypos 1243
}
push $N6e1343e0
Merge2 {
inputs 2
operation from
name Merge6
xpos 1656
ypos 1303
}
Multiply {
value {{pixel_aspect**2}}
name Multiply8
xpos 1656
ypos 1345
}
Dot {
name Dot60
xpos 1690
ypos 1407
}
push $N6e1343e0
Position {
translate {1 0}
name Position1
xpos 1491
ypos 1243
}
push $N6e1343e0
Merge2 {
inputs 2
operation from
name Merge4
xpos 1548
ypos 1303
}
Dot {
name Dot61
xpos 1582
ypos 1407
}
ShuffleCopy {
inputs 2
red alpha2
green alpha
blue black
alpha black
name ShuffleCopy1
xpos 1604
ypos 1403
}
Multiply {
value {{2*(globaldistortion/50)*parent.mix}}
name Multiply1
xpos 1604
ypos 1438
}
Merge2 {
inputs 2
operation mask
name Merge7
xpos 1604
ypos 1872
disable {{"!\[exists parent.input1]"}}
}
set N6e1a6550 [stack 0]
Dot {
name Dot50
xpos 1097
ypos 1876
}
Dot {
name Dot49
xpos 1097
ypos 2327
}
Multiply {
value {{parent.ca>0?parent.ca:-parent.ca}}
name Multiply5
xpos 852
ypos 2317
}
Dot {
name Dot52
xpos 732
ypos 2327
}
set N6dfd1050 [stack 0]
Dot {
name Dot48
xpos 642
ypos 2327
}
push $N6e299480
push $N6e11db40
CopyBBox {
inputs 2
name CopyBBox5
xpos 82
ypos 794
disable {{"!parent.limittobb+!\[exists parent.input1]*!\[exists parent.input2]"}}
}
Dot {
name Dot27
xpos 116
ypos 1388
}
set N6dfe4e60 [stack 0]
Dot {
name Dot31
xpos 763
ypos 1388
}
Dot {
name Dot32
xpos 763
ypos 2076
}
set N6dff0120 [stack 0]
Remove {
name Remove1
xpos 1294
ypos 2066
}
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
channel2 {-rgba.red -rgba.green -rgba.blue none}
name Expression1
xpos 1447
ypos 2049
postage_stamp true
}
push $N6e1a6550
Merge2 {
inputs 2
operation plus
bbox B
name Merge1
xpos 1604
ypos 2072
}
BlackOutside {
name BlackOutside4
xpos 1604
ypos 2139
}
Dot {
name Dot28
xpos 1638
ypos 2499
}
Dot {
name Dot45
xpos 923
ypos 2499
}
set N6e02ec70 [stack 0]
Dot {
name Dot47
xpos 923
ypos 2440
}
Merge2 {
inputs 2
operation from
name Merge12
xpos 608
ypos 2436
}
push $N6dff0120
push $N6e30bbd0
push $N6e342500
push $N6e3b1660
Switch {
inputs 2
which {{"\[exists parent.input2]"}}
name Switch3
xpos 765
ypos 271
}
Dot {
name Dot4
xpos 569
ypos 275
}
BlackOutside {
name BlackOutside2
xpos 535
ypos 407
}
Gamma {
value {{parent.hazeresponse}}
name Gamma3
xpos 535
ypos 433
}
Merge2 {
inputs 2
operation mask
name Merge8
xpos 535
ypos 647
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot2
xpos 569
ypos 1525
}
set N6e0834e0 [stack 0]
Dot {
name Dot16
xpos 569
ypos 1570
}
set N6e088ce0 [stack 0]
Dot {
name Dot17
xpos 569
ypos 1617
}
set N6e08e670 [stack 0]
Dot {
name Dot18
xpos 569
ypos 1664
}
set N6e094000 [stack 0]
Dot {
name Dot19
xpos 569
ypos 1709
}
set N6e099990 [stack 0]
Dot {
name Dot20
xpos 569
ypos 1754
}
set N6e09f320 [stack 0]
Dot {
name Dot21
xpos 569
ypos 1801
}
set N6e0a4cb0 [stack 0]
Dot {
name Dot23
xpos 569
ypos 1847
}
set N6e0aa640 [stack 0]
Dot {
name Dot25
xpos 569
ypos 1896
}
set N6e0affd0 [stack 0]
Dot {
name Dot26
xpos 569
ypos 1946
}
Grade {
channels alpha
blackpoint 0.9
white_clamp true
name Grade12
xpos 312
ypos 1936
}
push $N6e0affd0
Grade {
channels alpha
blackpoint 0.7
whitepoint 0.9
white_clamp true
name Grade11
xpos 312
ypos 1886
}
push $N6e0aa640
Grade {
channels alpha
blackpoint 0.5
whitepoint 0.7
white_clamp true
name Grade8
xpos 312
ypos 1837
}
push $N6e0a4cb0
Grade {
channels alpha
blackpoint 0.3
whitepoint 0.5
white_clamp true
name Grade6
xpos 312
ypos 1791
}
push $N6e09f320
Grade {
channels alpha
blackpoint 0.25
whitepoint 0.3
white_clamp true
name Grade5
xpos 312
ypos 1744
}
push $N6e099990
Grade {
channels alpha
blackpoint 0.2
whitepoint 0.25
white_clamp true
name Grade15
xpos 312
ypos 1699
}
push $N6e094000
Grade {
channels alpha
blackpoint 0.15
whitepoint 0.2
white_clamp true
name Grade10
xpos 312
ypos 1654
}
push $N6e08e670
Grade {
channels alpha
blackpoint 0.1
whitepoint 0.15
white_clamp true
name Grade18
xpos 311
ypos 1607
}
push $N6e088ce0
Grade {
channels alpha
blackpoint 0.05
whitepoint 0.1
white_clamp true
name Grade17
xpos 311
ypos 1560
}
push $N6e0834e0
Grade {
channels alpha
whitepoint 0.05
white_clamp true
name Grade14
xpos 311
ypos 1515
}
push $N6dfe4e60
Blur {
inputs 1+1
channels {{{STMap1.channels}}}
size {{parent.hazeamount*parent.mix*0.05}}
name Blur2
xpos 82
ypos 1521
}
Blur {
inputs 1+1
channels {{{STMap1.channels}}}
size {{parent.hazeamount*parent.mix*0.1}}
name Blur3
xpos 82
ypos 1566
}
Blur {
inputs 1+1
channels {{{STMap1.channels}}}
size {{parent.hazeamount*parent.mix*0.15}}
name Blur4
xpos 82
ypos 1613
}
Blur {
inputs 1+1
channels {{{STMap1.channels}}}
size {{parent.hazeamount*parent.mix*0.2}}
name Blur5
xpos 82
ypos 1660
}
Blur {
inputs 1+1
channels {{{STMap1.channels}}}
size {{parent.hazeamount*parent.mix*0.25}}
quality 8
name Blur6
xpos 82
ypos 1705
}
Blur {
inputs 1+1
channels {{{STMap1.channels}}}
size {{parent.hazeamount*parent.mix*0.3}}
quality 8
name Blur7
xpos 82
ypos 1750
}
Blur {
inputs 1+1
channels {{{STMap1.channels}}}
size {{parent.hazeamount*parent.mix*0.4}}
quality 8
name Blur8
xpos 82
ypos 1797
}
Blur {
inputs 1+1
channels {{{STMap1.channels}}}
size {{parent.hazeamount*parent.mix*0.6}}
quality 8
name Blur10
xpos 82
ypos 1843
}
Blur {
inputs 1+1
channels {{{STMap1.channels}}}
size {{parent.hazeamount*parent.mix*0.8}}
quality 8
name Blur12
xpos 82
ypos 1892
}
Blur {
inputs 1+1
channels {{{STMap1.channels}}}
size {{parent.hazeamount*parent.mix*0.9}}
quality 8
name Blur13
xpos 82
ypos 1942
}
CopyBBox {
inputs 2
name CopyBBox4
xpos 82
ypos 2072
}
BlackOutside {
name BlackOutside3
xpos 82
ypos 2147
}
Dot {
name Dot59
xpos 116
ypos 2261
}
set N6de17bc0 [stack 0]
Dot {
name Dot56
xpos 381
ypos 2261
}
Dot {
name Dot1
xpos 381
ypos 2327
}
set N6de22ec0 [stack 0]
Dot {
name Dot44
xpos 508
ypos 2327
}
Remove {
operation keep
channels {-rgba.red -rgba.green rgba.blue none}
name Remove5
xpos 474
ypos 2377
}
STMap {
inputs 2
channels {{{STMap1.channels}}}
uv rgb
name STMap3
xpos 474
ypos 2436
}
Dot {
name Dot54
xpos 508
ypos 2613
}
push 0
push $N6dfd1050
Multiply {
value 0.5
name Multiply7
xpos 698
ypos 2374
}
set N6de48fb0 [stack 0]
Dot {
name Dot58
xpos 834
ypos 2384
}
push $N6e02ec70
Dot {
name Dot46
xpos 923
ypos 2556
}
set N6de5bb20 [stack 0]
Merge2 {
inputs 2
operation from
name Merge15
xpos 800
ypos 2552
disable {{-parent.ca<0}}
}
push $N6de22ec0
Dot {
name Dot43
xpos 248
ypos 2327
}
Remove {
operation keep
channels {rgba.red -rgba.green -rgba.blue none}
name Remove3
xpos 214
ypos 2377
}
STMap {
inputs 2
channels {{{STMap1.channels}}}
uv rgb
name STMap2
xpos 214
ypos 2552
}
Dot {
name Dot53
xpos 248
ypos 2613
}
push $N6de48fb0
push $N6e02ec70
Merge2 {
inputs 2
operation from
name Merge13
xpos 698
ypos 2495
disable {{parent.ca<0}}
}
push $N6de22ec0
Remove {
operation keep
channels {-rgba.red rgba.green -rgba.blue none}
name Remove4
xpos 347
ypos 2378
}
STMap {
inputs 2
channels {{{STMap1.channels}}}
uv rgb
name STMap4
xpos 347
ypos 2495
}
Merge2 {
inputs 3+1
operation plus
name Merge14
xpos 347
ypos 2609
}
Dot {
name Dot55
xpos 381
ypos 2768
}
push $N6de5bb20
Dot {
name Dot57
xpos 923
ypos 2665
}
push $N6de17bc0
STMap {
inputs 2
channels rgb
uv rgb
name STMap1
xpos 82
ypos 2661
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
from1 rgba.green
to1 rgba.green
from2 rgba.blue
to2 rgba.blue
name Copy1
xpos 82
ypos 2745
disable {{parent.ca==0}}
}
Keymix {
inputs 3
name Keymix1
xpos 82
ypos 2930
disable {{"!parent.limittobb+!\[exists parent.input1]*!\[exists parent.input2]"}}
}
Switch {
inputs 2
which {{parent.previewnoisemap}}
name Switch2
xpos 82
ypos 3056
}
Output {
name Output1
xpos 82
ypos 3184
}
end_group
push $Nd8cb3e10
Group {
name X_Distort
help "Create distortion with great control and flexibility."
knobChanged "n = nuke.thisNode()\nif n.input(2):\n    n\[\"mask\"].setEnabled(True)\nelse:\n    n\[\"mask\"].setEnabled(False)\n    \n    \nif n\[\"distort_from\"].value() == \"Noise\":\n    n\[\"noise_size\"].setVisible(True)\n    n\[\"noise_z\"].setVisible(True)\nelse:\n    n\[\"noise_size\"].setVisible(False)\n    n\[\"noise_z\"].setVisible(False)\n\nif n\[\"enable_chroma\"].value() == 1:\n    n\[\"aberration\"].setVisible(True)\n    n\[\"blur_aberration\"].setVisible(True)\nelse:\n    n\[\"aberration\"].setVisible(False)\n    n\[\"blur_aberration\"].setVisible(False)\n    \nn\[\"mix\"].setValue(min(max(0,n\[\"mix\"].value()),1))\nn\[\"blur_map\"].setValue(max(0,n\[\"blur_map\"].value()))\nn\[\"max_blur\"].setValue(max(0,n\[\"max_blur\"].value()))\n"
tile_color 0xa57aaaff
note_font_color 0xffffffff
selected true
xpos 43740
ypos -3212
addUserKnob {20 X_Distort}
addUserKnob {6 aberration_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
aberration_panelDropped true
addUserKnob {41 "Local GPU: " T BlinkScript.gpuName}
addUserKnob {41 "Use GPU if Available" T BlinkScript.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {7 distort t "The amount of displacement going to be applied." R -100 100}
distort -22.5
addUserKnob {7 blur t "The amount of smoothing going to be applied." R -100 100}
blur 11
addUserKnob {3 max_blur l max t "Limit the vector blur to this number of samples.\nVector Blur can be expensive, this limits the time it takes to render, but sometimes artifacts can appear.\n\nSetting this parameter to 0 will disable the limit." -STARTLINE}
max_blur 50
addUserKnob {7 direction t "The direction of the generated vector map:\n\n  <b>At 0:</b> Pixels will be attracted to the brighter areas.\n  <b>At 0.5:</b> Pixels will be attracted to the darker areas.\n  <b>At 0.25 or .75:</b> Pixels will spin around the bright ans dark areas.\n\nThis pattern repeats, so a value of 1 will produce the same result as a value of 0 and a value of 0.5 will produce the same result as a value of 1.5."}
direction 0.5
addUserKnob {4 filter t "<b>impulse</b> very fast but can sometimes show pixelation or moire patterns.\n<b>bilinear</b> slower but smoothes out  most artifacts or unwanted patterns." M {impulse bilinear}}
filter bilinear
addUserKnob {26 ""}
addUserKnob {4 distort_from l "distortion from" t "Choose where do you want to create the distortion map from:\n\n<b>Â· Auto</b> will look at the inputs of the node and decid which one to use.\n<b>Â· Source</b> will distort the image using the information on the original image.\n<b>Â· Dist Map</b> will distort the image using the information on the secondary input of this node.\n<b>Â· Noise</b> will generate an animated fractal that will be used to create the distortion map." M {Auto Source Map Noise "" ""}}
distort_from Noise
addUserKnob {6 use_all_channels l "use all channels" t "By default the distortion map will be generated from the average of the rgb channel. If this setting is enabled the channels will be paired up.\nThe red from the source will be distorted with the red from the map, the green with the green and so on. This allows you to have different distortion maps per each channel." -STARTLINE}
addUserKnob {7 noise_size l size t "The relative frequency of the turbulence pattern. Big values will generate low frequency distortion." R 1 1000}
noise_size 100
addUserKnob {7 noise_z l z t "Use this to animate the noise pattern.\nFor instance you could try with the expression \"frame/100\".\n\nRight click --> Add expression" -STARTLINE}
noise_z 4.815162342
addUserKnob {7 blur_map l "blur map" t "Filter the map to make it smoother and get rid of the high frequency distortions. Increase this value to make a smoother distortion." R 0 100}
blur_map 50
addUserKnob {6 fast_blur_map l fast t "Uses a multipass blur that, altough not as accurate as a bruteforce blur, gets rid of the artifacts at a reduced cost. It is recommended to keep this on." -STARTLINE}
fast_blur_map true
addUserKnob {26 ""}
addUserKnob {6 enable_chroma l "chromatic aberration" t "Enable per-channel control on the distortion." +STARTLINE}
addUserKnob {19 aberration l distort t "This is a multiplier on the distortion for every channel. Use this to simulate light frequencies being separated." +HIDDEN R -2 2}
aberration {1.2 1 0.8 1}
addUserKnob {6 aberration_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 aberration_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {19 blur_aberration l blur t "This is a multiplier on the blur for every channel. Use this to simulate light frequencies being separated." +HIDDEN}
blur_aberration {1 1 1 1}
addUserKnob {6 blur_aberration_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 blur_aberration_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {4 output_form l output t "Choose what type of data you would like to output.\n\n<b>Result</b> will output the distorted and filtered input.\n<b>STMap</b> will output a UV map to be used in conjunction with the STMap node.\n<b>IDistort</b> will output a displacement map to be used in conjunction with the IDistort node." M {Result STMap IDistort ""}}
addUserKnob {41 mask l "  mask" t "This will mask the distortion map before the effect. Use this to limit the influence of the distortion to certain areas." -STARTLINE T Mask.maskChannelMask}
addUserKnob {6 invert_mask l invert t "invert the effect of the mask" -STARTLINE}
addUserKnob {41 fringe t "Limits the effect on the edges of the mask." -STARTLINE T Mask.fringe}
addUserKnob {7 mix t "Blend between the original source and the applied effect."}
mix 1
addUserKnob {20 Settings l "GPU Settings"}
addUserKnob {20 about l About}
addUserKnob {26 about_1 l "" t "A bunny:\n(\\(\\ \n( - -)\n((') (')" +STARTLINE T "<br>\n<b>Xavier MartÃ­n Â© 2017</b>"}
addUserKnob {26 ""}
addUserKnob {26 website l "" +STARTLINE T "<a href=\"http://www.xaviermartinvfx.com\"><span style=\"color:#C8C8C8;\">www.xaviermartinvfx.com</span></a>"}
addUserKnob {26 space4_1 l "" +STARTLINE T <br>}
addUserKnob {22 version l <center>version</center> T "nuke.message('X_Distort Gizmo <i>v4.1</i><br><b>Xavier MartÃ­n Â© 2017</b>')" +STARTLINE}
addUserKnob {22 help_documentation l <center>?</center> -STARTLINE T "nuke.message('You can find more documentation<br>on <a href=\"http://www.nukepedia.com/gizmos/transform/x_distort\"><span style=\"color:#BCBCBC;\">Nukepedia</span></a> or my <a href=\"http://www.xaviermartinvfx.com/x_distort/\"><span style=\"color:#BCBCBC;\">website</span></a>.')"}
}
Input {
inputs 0
name InputSrc
xpos -140
ypos -460
}
Dot {
name Dot3
xpos -106
ypos -406
}
set N6e54bcd0 [stack 0]
Dot {
name Dot2
xpos 94
ypos -406
}
set N6e550c90 [stack 0]
Dot {
name Dot1
xpos 94
ypos -356
}
set N6e556630 [stack 0]
Noise {
cliptype bbox
replace true
size {{parent.noise_size}}
zoffset {{parent.noise_z}}
gamma 1
center {1024 778}
name Noise1
xpos 60
ypos -310
}
Input {
inputs 0
name InputDist_Map
xpos 260
ypos -460
number 1
}
AdjBBox {
numpixels 1
name AdjBBox2
xpos 260
ypos -408
disable {{parent.input1}}
}
set N6e577f50 [stack 0]
push $N6e556630
push $N6e577f50
push $N6e550c90
Switch {
inputs 2
which {{parent.input1.name+1}}
name Auto
xpos 160
ypos -360
}
Switch {
inputs 4
which {{distort_from}}
name Switch1
xpos 260
ypos -310
}
Remove {
operation keep
channels rgba
name Remove1
xpos 260
ypos -258
}
Saturation {
saturation 0
mode Average
name Saturation1
xpos 260
ypos -210
disable {{use_all_channels}}
}
Remove {
operation keep
channels {rgba.red -rgba.green -rgba.blue -rgba.alpha}
name Remove2
xpos 260
ypos -160
disable {{use_all_channels}}
}
set N6e5a9d60 [stack 0]
Dot {
name Dot6
xpos 194
ypos -156
}
Dot {
name Dot7
xpos 194
ypos 144
}
Input {
inputs 0
name Inputmask
xpos 460
ypos -10
number 2
}
Dot {
name Dot9
xpos 494
ypos 94
}
push $N6e5a9d60
Blur {
size {{blur_map}}
quality {{parent.fast_blur_map?15:blur_map+1}}
crop false
name Blur1
xpos 260
ypos -116
disable {{size<1}}
}
Blur {
size {{blur_map/15}}
crop false
name Blur2
xpos 260
ypos -66
disable {{(size<1)+(1-parent.fast_blur_map)}}
}
Blur {
size {{blur_map/225}}
crop false
name Blur3
xpos 260
ypos -16
disable {{(size<1)+(1-parent.fast_blur_map)}}
}
Shuffle {
green red
blue red
alpha red
name Shuffle1
xpos 260
ypos 40
disable {{use_all_channels}}
}
Multiply {
inputs 1+1
value 0
invert_mask {{1-parent.invert_mask}}
name Mask
xpos 260
ypos 84
disable {{parent.inputs!=3}}
}
CopyBBox {
inputs 2
name CopyBBox1
xpos 260
ypos 140
}
Dot {
name Dot8
xpos 294
ypos 194
}
set N6e41ec50 [stack 0]
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"X_Distort\" iterate pixelWise c808228749d48a9f044958c8efc9a2b21aa668de9616076bf59cb1bcfcd28dcc 2 \"map\" Read Ranged2D \"dst\" Write Point 4 \"distortion\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"direction\" Float 1 AAAAAA== \"stmap\" Int 1 AAAAAA== \"format\" Int 2 AAAAAAAAAAA= 4 \"distortion\" 4 1 \"direction\" 1 1 \"stmap\" 1 1 \"format\" 2 1 4 \"maprangeMin\" Int 2 1 AAAAAAAAAAA= \"maprangeMax\" Int 2 1 AAAAAAAAAAA= \"mapconstEdgeColor\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA== \"rotate\" Float 2 1 AAAAAAAAAAA="
kernelSource "kernel X_Distort : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRanged2D, eEdgeConstant> map; // the distortion map image\n  Image<eWrite> dst; // the output image\n\n  param:\n    float4 distortion;\n    float direction;\n    int stmap;\n    int2 format;\n\n  local:\n    float2 rotate;\n\n  void init() \{\n    // Initialise trigonometric functions.\n    rotate = float2(sin(direction*6.28318f),\n                    cos(direction*6.28318f));\n    map.setRange(-1,-1,1,1);\n  \}\n\n  void process(int2 pos) \{\n\n    // Sample gradient\n    float2 distort;\n    distort = float2(map(1,0,0)-map(-1,0,0),\n                    map(0,1,0)-map(0,-1,0));\n\n    // Rotate vector\n    distort = float2(distort.x*rotate.y+distort.y*rotate.x,\n                    -distort.x*rotate.x+distort.y*rotate.y);\n    distort *= distortion.x;\n\n    if(stmap==1)\n      distort = (distort+float2(pos.x,pos.y))/float2(format.x,format.y);\n\n    dst() = float4(distort.x,distort.y,0,0);\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript.useGPUIfAvailable}}
rebuild ""
X_Distort_distortion {{parent.distort*(blur_map+1)*((aberration-1)*enable_chroma+1)*2} {parent.distort*(blur_map+1)*((aberration-1)*enable_chroma+1)*2} {parent.distort*(blur_map+1)*((aberration-1)*enable_chroma+1)*2} {parent.distort*(blur_map+1)*((aberration-1)*enable_chroma+1)*2}}
X_Distort_direction {{parent.direction+.5}}
X_Distort_stmap {{2-output_form}}
X_Distort_format {{width} {height}}
rebuild_finalise ""
name BlinkScript1
xpos 260
ypos 234
}
Dot {
name Dot11
xpos 294
ypos 344
}
push $N6e41ec50
push $N6e54bcd0
AdjBBox {
numpixels 1
name AdjBBox1
xpos -140
ypos -360
disable {{parent.input0}}
}
Dot {
name Dot10
xpos -106
ypos 144
}
BlinkScript {
inputs 2
ProgramGroup 1
KernelDescription "1 \"X_Distort\" iterate componentWise b9627c0324b2a89d1b941c7c64b5afb3310f15cfcf6b1f077dd0574498415168 3 \"src\" Read Random \"map\" Read Ranged2D \"dst\" Write Point 5 \"distortion\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"vector_blur\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"direction\" Float 1 AAAAAA== \"filter\" Int 1 AAAAAA== \"max_steps\" Int 1 AAAAAA=="
kernelSource "kernel X_Distort : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessRanged2D, eEdgeClamped> map; // the distortion map image\n  Image<eWrite> dst; // the output image\n\n  param:\n    float4 distortion;\n    float4 vector_blur;\n    float direction;\n    int filter;\n    int max_steps;\n\n  local:\n    float2 rotate;\n\n  void init() \{\n    // Initialise trigonometric functions.\n    rotate = float2(sin(direction*6.28318f),\n                    cos(direction*6.28318f));\n    map.setRange(-1,-1,1,1);\n  \}\n\n  void process(int3 pos) \{\n\n    // Sample gradient\n    float2 distort;\n    distort = float2(map(1,0)-map(-1,0),\n                    map(0,1)-map(0,-1));\n\n    // Rotate vector\n    distort = float2(distort.x*rotate.y+distort.y*rotate.x,\n                    -distort.x*rotate.x+distort.y*rotate.y);\n\n    // Sample source (no blur)\n    if(fabs(vector_blur\[pos.z])<0.01)\{\n      distort *= distortion\[pos.z];\n      distort += float2(pos.x,pos.y);\n      if(filter==0)\n        dst() = src(int(distort.x),int(distort.y));\n      else\n        dst() = bilinear(src,distort.x,distort.y);\n    \}\n\n    else \{\n\n    // If vector blur is enabled\n    // Create vector blur final coordiantes\n      float2 blur = distort;\n      blur *= distortion\[pos.z]+vector_blur\[pos.z];\n      blur += float2(pos.x,pos.y);\n      distort *= distortion\[pos.z];\n      distort += float2(pos.x,pos.y);\n\n    // Calculate length of the blur\n      int distance;\n      distance = ceil(length(distort-blur));\n      if(max_steps>0)\n        distance = min(distance,max_steps);\n\n\n    // Accumulate pixels through blur\n      if(filter==0)\{\n        float sum = src(int(distort.x),int(distort.y));\n        float step = 0.0f;\n        float2 dist_blur;\n        for(int i = 0; i < distance; i++)\{\n          step = float(i)/(distance);\n          dist_blur = distort*step+blur*(1.0-step);\n          sum += src(int(dist_blur.x),int(dist_blur.y));\n        \}\n        dst() = sum/(distance+1);\n      \}\n\n      else \{\n        float sum = bilinear(src,distort.x,distort.y);\n        float step = 0.0f;\n        float2 dist_blur;\n        for(int i = 0; i < distance; i++)\{\n          step = float(i)/(distance);\n          dist_blur = distort*step+blur*(1.0-step);\n          sum += bilinear(src,dist_blur.x,dist_blur.y);\n        \}\n        dst() = sum/(distance+1);\n      \}\n    \}\n  \}\n\};\n"
rebuild ""
X_Distort_distortion {{parent.distort*(blur_map+1)*((aberration-1)*enable_chroma+1)*2} {parent.distort*(blur_map+1)*((aberration-1)*enable_chroma+1)*2} {parent.distort*(blur_map+1)*((aberration-1)*enable_chroma+1)*2} {parent.distort*(blur_map+1)*((aberration-1)*enable_chroma+1)*2}}
X_Distort_vector_blur {{parent.blur*(blur_map+1)*((blur_aberration-1)*enable_chroma+1)*2} {parent.blur*(blur_map+1)*((blur_aberration-1)*enable_chroma+1)*2} {parent.blur*(blur_map+1)*((blur_aberration-1)*enable_chroma+1)*2} {parent.blur*(blur_map+1)*((blur_aberration-1)*enable_chroma+1)*2}}
X_Distort_direction {{parent.direction+.5}}
X_Distort_filter {{filter}}
X_Distort_max_steps {{max_blur}}
rebuild_finalise ""
name BlinkScript
selected true
xpos -140
ypos 184
}
push $N6e54bcd0
Dot {
name Dot5
xpos -206
ypos -406
}
Dot {
name Dot4
xpos -206
ypos 294
}
Dissolve {
inputs 2
channels rgba
which {{parent.mix}}
name Dissolve1
xpos -140
ypos 290
}
Switch {
inputs 2
which {{output_form}}
name Switch3
xpos -140
ypos 340
}
Output {
name Output1
xpos -140
ypos 440
}
end_group
push $Nd8cb3e10
Group {
name NST_X_Aton_Volumetrics
knobChanged "n = nuke.thisNode()\nif n\[\"use_3d\"].value()==1:\n    n\[\"center\"].setEnabled(False)\nelse:\n    n\[\"center\"].setEnabled(True)\nn\[\"iterations\"].setValue(int(n\[\"iterations\"].value()))\nif n\[\"mode\"].value()==\"Diffuse\":\n    n\[\"diffuse\"].setEnabled(True)\nelse:\n    n\[\"diffuse\"].setEnabled(False)\nn\[\"diffuse\"].setValue(max(n\[\"diffuse\"].value(),0))\nn\[\"iterations\"].setValue(max(n\[\"iterations\"].value(),1))"
tile_color 0xcc804eff
note_font_color 0xffffffff
selected true
xpos 43742
ypos -3118
addUserKnob {20 X_Aton}
addUserKnob {41 "Local GPU: " T BlinkScript1.gpuName}
addUserKnob {41 "Use GPU if Available" T BlinkScript1.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {12 center t "The point from which rays will be emitted."}
center {960 540}
addUserKnob {6 use_3d l "use 3d input" t "Use a <b>3D light</b> and a <b>3D camera</b> to calculate the center of the light. When enabled the <b>center</b> parameter will be disabled. Make sure both inputs (Light and Camera) are connected in order for this to work properly." -STARTLINE}
addUserKnob {7 length t "This controls zoom of the final iteration. A value of 0 won't have any effect. A value of -1 will converge all rays in the centre point. All positive values will create rays projected outwards." R 0 10}
length 2
addUserKnob {26 ""}
addUserKnob {4 mode t "- <b>Regular</b>, old school God Ray algorithm. All samples get added together. Fast and simple.\n- <b>Brighter</b>, samples only contribute to the ray if they are brighter than the ray at that step. This creates unshadowed rays.\n- <b>Darker</b>, samples only contribute to the ray if they are darker than the say at that step. This generate only shadow rays.\n- <b>Diffused</b>, different model of ray generation where rays can defocus as they travel further. This is more expensive but often generates more natural results." M {Regular Darkest Brightest Diffuse ""}}
addUserKnob {7 decay t "The rate by which rays loose intensity and become darker. At 0 rays intensity will remain constant. Values between 1 and 2 generate realistic results. Denser atmospheres create shorter rays (more decay)." R 0 10}
decay 1
addUserKnob {7 diffuse t "This parameter is only enabled when <b>Diffuse</b> is selected as the <b>mode</b>.<br>Controls the rate of dispersion of the ray of light. Higher values create softer results. <br>Keep in mind in the real world this value is dependent on the shape of the light source. Wide light sources (like a campfire) generate very diffused rays, whereas concentrated lights (like a cellphone light) cast very sharp light rays. <br>The speed of the algorithm is independent of the value of diffusion." +DISABLED R 0 100}
diffuse 50
addUserKnob {26 ""}
addUserKnob {18 multiply t "Makes everything brighter or darker in a linear fashion." R 0.2 4}
multiply 1
addUserKnob {6 multiply_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 gamma t "This works slightly different than just a regular gamma. This is both a pre-process and a post-process.\n\nFirst, the image gets applied the inverse of the gamma. After the rays have been generated, the value of gamma gets applied again.\n\nWith a little bit of practise this allows you to drive the colours of the rays as they decay." R 0.2 4}
gamma 1
addUserKnob {6 gamma_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {7 iterations t "The number of steps the light ray will take. The more <b>iterations</b>, the softer the ray will be. It is a good practice to raise this value to a high number (100-500) and gradually decreasing it until artifacts start to appear. Sometimes artifacts can be fixed in a more optimized way by keeping iterations low and enabling <b>bilinear interpolation</b>.<br>The more iterations, the slower the algorithm." R 1 100}
iterations 20
addUserKnob {6 bilinear_interpolation l "bilinear interpolation" t "By default each ray will sample the nearest pixel from the image. This often causes grid artifacts. Enabling this filtering should fix most of these issues. If it's not enough, you may need to increase the number of <b>iterations</b>. This is usually only needed when using <b>Diffuse</b> rays, altough the option is also available for the rest of modes." +STARTLINE}
addUserKnob {6 normalize l "normalize luma" t "Many settings can affect the final brightness of the rays: their length, their decay, the number of iterations,etc.\n\nThis tries to make the controls more intuitive by compensating those brightness changes. You can disable this to have a more direct control of the tool." -STARTLINE}
normalize true
addUserKnob {26 ""}
addUserKnob {20 GPU_Settings l "GPU Settings"}
addUserKnob {20 about l About}
addUserKnob {26 about_1 l "" t "A bunny:\n(\\(\\ \n( - -)\n((') (')" +STARTLINE T "<br>\n<b>Xavier MartÃ­n Â© 2017</b>"}
addUserKnob {26 ""}
addUserKnob {26 website l "" +STARTLINE T "<a href=\"http://www.xaviermartinvfx.com\"><span style=\"color:#C8C8C8;\">www.xaviermartinvfx.com</span></a>"}
addUserKnob {26 space4_1 l "" +STARTLINE T <br>}
addUserKnob {22 version l <center>version</center> T "nuke.message('X_Aton Gizmo <i>v1.1</i><br><b>Xavier MartÃ­n Â© 2017</b>')" +STARTLINE}
addUserKnob {22 help_documentation l <center>?</center> -STARTLINE T "nuke.message('You can find more documentation<br>on <a href=\"http://www.nukepedia.com/blink/filter/x_aton\"><span style=\"color:#BCBCBC;\">Nukepedia</span></a> or my <a href=\"http://www.xaviermartinvfx.com/x_aton/\"><span style=\"color:#BCBCBC;\">website</span></a>.')"}
}
Input {
inputs 0
name Input
xpos -740
ypos -558
}
Dot {
name Dot3
xpos -706
ypos -506
}
set N6e75ac70 [stack 0]
Remove {
operation keep
channels rgba
name Remove1
xpos -740
ypos -460
}
Gamma {
channels rgb
value {{1/parent.gamma} {1/parent.gamma} {1/parent.gamma} 1}
name Gamma1
xpos -740
ypos -410
}
set N6e769a10 [stack 0]
Dot {
name Dot2
xpos -706
ypos -356
}
set N6e776df0 [stack 0]
Dot {
name Dot1
xpos -706
ypos -306
}
set N6e77c710 [stack 0]
push $N6e776df0
Blur {
channels rgba
size {{diffuse*sqrt(length)}}
name Blur5
xpos -240
ypos -313
}
CopyBBox {
inputs 2
name CopyBBox2
xpos -240
ypos -258
}
Reformat {
type scale
scale 0.125
pbb true
name Reformat1
xpos -240
ypos -210
}
set N6e7996f0 [stack 0]
push $N6e77c710
push $N6e776df0
Blur {
channels rgba
size {{parent.Blur5.size/2}}
name Blur4
xpos -340
ypos -310
}
CopyBBox {
inputs 2
name CopyBBox3
xpos -340
ypos -258
}
Reformat {
type scale
scale 0.25
pbb true
name Reformat5
xpos -340
ypos -210
}
set N6e5c1890 [stack 0]
push $N6e77c710
push $N6e776df0
Blur {
channels rgba
size {{parent.Blur4.size/2}}
name Blur3
xpos -440
ypos -310
}
CopyBBox {
inputs 2
name CopyBBox4
xpos -440
ypos -258
}
Reformat {
type scale
scale 0.5
pbb true
name Reformat4
xpos -440
ypos -210
}
set N6e5e9cc0 [stack 0]
push $N6e77c710
push $N6e776df0
Blur {
channels rgba
size {{parent.Blur3.size/2}}
name Blur2
xpos -540
ypos -310
}
CopyBBox {
inputs 2
name CopyBBox5
xpos -540
ypos -258
}
Reformat {
type scale
scale 0.6
pbb true
name Reformat3
xpos -540
ypos -210
}
set N6e612170 [stack 0]
push $N6e77c710
push $N6e776df0
Blur {
channels rgb
size {{parent.Blur2.size/2}}
name Blur1
xpos -640
ypos -310
}
CopyBBox {
inputs 2
name CopyBBox1
xpos -640
ypos -258
}
Reformat {
type scale
scale 0.8
pbb true
name Reformat2
xpos -640
ypos -210
}
set N6e63a5a0 [stack 0]
push $N6e77c710
BlinkScript {
inputs 6
ProgramGroup 1
KernelDescription "2 \"X_Aton\" iterate componentWise 5140e5ada3150b5b17997b391784be72a8515242eff97b63a728e1d29924494f 7 \"src\" Read Random \"blr1\" Read Random \"blr2\" Read Random \"blr3\" Read Random \"blr4\" Read Random \"blr5\" Read Random \"dst\" Write Point 5 \"size\" Float 1 AAAAAA== \"center\" Float 2 AAAAAAAAAAA= \"iterations\" Int 1 AAAAAA== \"decay\" Float 1 AAAAAA== \"normalize_output\" Int 1 AAAAAA== 5 \"size\" 1 1 \"center\" 2 1 \"iterations\" 1 1 \"decay\" 1 1 \"normalize_output\" 1 1 1 \"normal\" Float 1 1 AAAAAA=="
kernelSource "kernel X_Aton : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr1; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr2; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr3; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr4; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr5; // the input image\n\n  Image<eWrite> dst; // the output image\n\n  param:\n    float size;\n    float2 center;\n    int iterations;\n    float decay;\n    int normalize_output;\n\n  local:\n    float normal = 0.0f;\n\n  void init() \{\n    if(normalize_output == 1) \{\n      normal =0.0;\n      for (int i = 0; i < iterations; i++) \{\n        normal += (pow(1.0f-float(i)/iterations,decay));\n      \}\n    \}\n    else \{\n      normal = iterations;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    float total = 0.0;\n    float scale = 0.0;\n    int posx = 0;\n    int posy = 0;\n    int2 currentpos = int2(pos.x-center.x,pos.y-center.y);\n \n    float step = 0.0;\n    for (int i = 0; i < iterations; i++) \{\n      step = float(i)/iterations;\n      scale = 1+size*step*step;\n      posx = ((currentpos.x)/scale+center.x);\n      posy = ((currentpos.y)/scale+center.y);\n      if (step < 0.1)\n        total += bilinear(src,posx,posy)*pow((1-step),decay);\n      else if (step < 0.2)\n        total += bilinear(blr1,posx*0.8,posy*0.8)*pow((1-step),decay);\n      else if (step < 0.4)\n        total += bilinear(blr2,posx*0.6,posy*0.6)*pow((1-step),decay);\n      else if (step < 0.6)\n        total += bilinear(blr3,posx*0.5,posy*0.5)*pow((1-step),decay);\n      else if (step < 0.8)\n        total += bilinear(blr4,posx*0.25,posy*0.25)*pow((1-step),decay);\n      else\n        total += bilinear(blr5,posx*0.125,posy*0.125)*pow((1-step),decay);\n    \}\n    dst() = total/normal;\n  \}\n\};"
useGPUIfAvailable {{parent.BlinkScript1.useGPUIfAvailable}}
rebuild ""
X_Aton_size {{parent.length}}
X_Aton_center {{parent.use_3d==1?Reconcile3D1.output:parent.center} {parent.use_3d==1?Reconcile3D1.output:parent.center}}
X_Aton_iterations {{parent.iterations}}
X_Aton_decay {{parent.decay}}
X_Aton_normalize_output {{parent.normalize}}
rebuild_finalise ""
name BlinkScript2
xpos -640
ypos -116
}
push $N6e7996f0
push $N6e5c1890
push $N6e5e9cc0
push $N6e612170
push $N6e63a5a0
push $N6e77c710
BlinkScript {
inputs 6
ProgramGroup 1
KernelDescription "2 \"X_Aton\" iterate componentWise e94f08f291fbc4837d066b1a66504220d926ab715f7f89378491e8b275e0f94c 7 \"src\" Read Random \"blr1\" Read Random \"blr2\" Read Random \"blr3\" Read Random \"blr4\" Read Random \"blr5\" Read Random \"dst\" Write Point 5 \"size\" Float 1 AAAAAA== \"center\" Float 2 AAAAAAAAAAA= \"iterations\" Int 1 AAAAAA== \"decay\" Float 1 AAAAAA== \"normalize_output\" Int 1 AAAAAA== 5 \"size\" 1 1 \"center\" 2 1 \"iterations\" 1 1 \"decay\" 1 1 \"normalize_output\" 1 1 1 \"normal\" Float 1 1 AAAAAA=="
kernelSource "kernel X_Aton : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr1; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr2; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr3; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr4; // the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> blr5; // the input image\n\n  Image<eWrite> dst; // the output image\n\n  param:\n    float size;\n    float2 center;\n    int iterations;\n    float decay;\n    int normalize_output;\n\n  local:\n    float normal = 0.0f;\n\n  void init() \{\n    if(normalize_output == 1) \{\n      normal =0.0;\n      for (int i = 0; i < iterations; i++) \{\n        normal += (pow(1.0f-float(i)/iterations,decay));\n      \}\n    \}\n    else \{\n      normal = iterations;\n    \}\n  \}\n\n  void process(int2 pos) \{\n    float total = 0.0;\n    float scale = 0.0;\n    int posx = 0;\n    int posy = 0;\n    int2 currentpos = int2(pos.x-center.x,pos.y-center.y);\n \n    float step = 0.0;\n    for (int i = 0; i < iterations; i++) \{\n      step = float(i)/iterations;\n      scale = 1+size*step*step;\n      posx = ((currentpos.x)/scale+center.x);\n      posy = ((currentpos.y)/scale+center.y);\n      if (step < 0.1)\n        total += src(posx,posy)*pow((1-step),decay);\n      else if (step < 0.2)\n        total += blr1((posx*0.8),(posy*0.8))*pow((1-step),decay);\n      else if (step < 0.4)\n        total += blr2((posx*0.6),(posy*0.6))*pow((1-step),decay);\n      else if (step < 0.6)\n        total += blr3((posx*0.5),(posy*0.5))*pow((1-step),decay);\n      else if (step < 0.8)\n        total += blr4((posx*0.25),(posy*0.25))*pow((1-step),decay);\n      else\n        total += blr5((posx*0.125),(posy*0.125))*pow((1-step),decay);\n    \}\n    dst() = total/normal;\n  \}\n\};"
rebuild ""
X_Aton_size {{length}}
X_Aton_center {{parent.use_3d==1?Reconcile3D1.output:parent.center} {parent.use_3d==1?Reconcile3D1.output:parent.center}}
X_Aton_iterations {{iterations}}
X_Aton_decay {{decay}}
X_Aton_normalize_output {{normalize}}
rebuild_finalise ""
name BlinkScript1
onCreate "n = nuke.thisNode()\nn\[\"X_Aton_center\"].setFlag(0x00008000)"
selected true
xpos -740
ypos -116
}
Switch {
inputs 2
which {{parent.bilinear_interpolation}}
name Switch2
xpos -740
ypos -60
}
push $N6e769a10
Dot {
name Dot6
xpos -806
ypos -406
}
Dot {
name Dot8
xpos -806
ypos -156
}
set N6e685090 [stack 0]
Dot {
name Dot7
xpos -906
ypos -156
}
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"X_Aton\" iterate componentWise 487f2268501f808ca51782f791e12713f7866399dc695919d23851a93187e87b 2 \"src\" Read Random \"dst\" Write Point 6 \"size\" Float 1 AAAAAA== \"center\" Float 2 AAAAAAAAAAA= \"iterations\" Int 1 AAAAAA== \"decay\" Float 1 AAAAAA== \"normalize_output\" Int 1 AAAAAA== \"mode\" Int 1 AAAAAA== 6 \"size\" 1 1 \"center\" 2 1 \"iterations\" 1 1 \"decay\" 1 1 \"normalize_output\" 1 1 \"mode\" 1 1 1 \"normal\" Float 1 1 AAAAAA=="
kernelSource "kernel X_Aton : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n\n\n  Image<eWrite> dst; // the output image\n\n  param:\n    float size;\n    float2 center;\n    int iterations;\n    float decay;\n    int normalize_output;\n    int mode;\n  local:\n    float normal = 0.0f;\n\n  void init() \{\n    if(mode==0) \{\n      if(normalize_output == 1) \{\n        normal =0.0;\n        for (int i = 0; i < iterations; i++) \{\n          normal += (pow(1.0f-float(i)/iterations,decay));\n        \}\n      \}\n      else \{\n        normal = iterations;\n      \}\n    \}\n  \}\n\n  void process(int2 pos) \{\n    float total = 0.0f;\n    float scale = 0.0f;\n    float posx = 0.0f;\n    float posy = 0.0f;\n    float2 currentpos = float2(pos.x-center.x,pos.y-center.y);\n\n    if(mode==0)\{\n      for (int i = 0; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        total += bilinear(src,posx,posy)*pow((1-float(i)/iterations),decay);\n      \}\n      dst() = total/normal;\n    \}\n    else if(mode==1)\{\n      float sample;\n      float norm = 1.0;\n      total += src(pos.x,pos.y);\n      for (int i = 1; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        sample = bilinear(src,posx,posy);\n        if(sample<total/norm) \{\n          total += sample*pow((1-float(i)/iterations),decay);\n        \}\n        else\n          total += (total/norm)*pow((1-float(i)/iterations),decay);\n        norm += 1.0*pow((1-float(i)/iterations),decay);\n      \}\n      if(normalize_output==0)\n        dst() = total/iterations;\n      else\n        dst() = total/norm;\n    \}\n    else \{\n      float sample;\n      float norm = 1.0;\n      total += src(pos.x,pos.y);\n      for (int i = 1; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        sample = bilinear(src,posx,posy);\n        if(sample>total/norm) \{\n          total += sample*pow((1-float(i)/iterations),decay);\n        \}\n        else\n          total += (total/norm)*pow((1-float(i)/iterations),decay);\n        norm += 1.0*pow((1-float(i)/iterations),decay);\n      \}\n      if(normalize_output==0)\n        dst() = total/iterations;\n      else\n        dst() = total/norm;\n    \}\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript1.useGPUIfAvailable}}
rebuild ""
X_Aton_size {{length}}
X_Aton_center {{parent.use_3d==1?Reconcile3D1.output:parent.center} {parent.use_3d==1?Reconcile3D1.output:parent.center}}
X_Aton_iterations {{iterations}}
X_Aton_decay {{decay}}
X_Aton_normalize_output {{normalize}}
X_Aton_mode {{(parent.mode!=3)?parent.mode:parent.mode*(parent.diffuse!=0)}}
rebuild_finalise ""
name BlinkScript4
xpos -940
ypos -116
}
push $N6e685090
BlinkScript {
ProgramGroup 1
KernelDescription "2 \"X_Aton\" iterate componentWise 8ab15b8bdd9694a8f64ba7270da748947d286719d2fadccab9e45b58ec1aa1dd 2 \"src\" Read Random \"dst\" Write Point 6 \"size\" Float 1 AAAAAA== \"center\" Float 2 AAAAAAAAAAA= \"iterations\" Int 1 AAAAAA== \"decay\" Float 1 AAAAAA== \"normalize_output\" Int 1 AAAAAA== \"mode\" Int 1 AAAAAA== 6 \"size\" 1 1 \"center\" 2 1 \"iterations\" 1 1 \"decay\" 1 1 \"normalize_output\" 1 1 \"mode\" 1 1 1 \"normal\" Float 1 1 AAAAAA=="
kernelSource "kernel X_Aton : ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n\n\n  Image<eWrite> dst; // the output image\n\n  param:\n    float size;\n    float2 center;\n    int iterations;\n    float decay;\n    int normalize_output;\n    int mode;\n  local:\n    float normal = 0.0f;\n\n  void init() \{\n    if(mode==0) \{\n      if(normalize_output == 1) \{\n        normal =0.0;\n        for (int i = 0; i < iterations; i++) \{\n          normal += (pow(1.0f-float(i)/iterations,decay));\n        \}\n      \}\n      else \{\n        normal = iterations;\n      \}\n    \}\n  \}\n\n  void process(int2 pos) \{\n    float total = 0.0;\n    float scale = 0.0;\n    int posx = 0;\n    int posy = 0;\n    int2 currentpos = int2(pos.x-center.x,pos.y-center.y);\n\n    if(mode==0)\{\n      for (int i = 0; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        total += src(posx,posy)*pow((1-float(i)/iterations),decay);\n      \}\n      dst() = total/normal;\n    \}\n    else if(mode==1)\{\n      float sample;\n      float norm = 1.0;\n      total += src(pos.x,pos.y);\n      for (int i = 1; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        sample = src(posx,posy);\n        if(sample<total/norm) \{\n          total += sample*pow((1-float(i)/iterations),decay);\n        \}\n        else\n          total += (total/norm)*pow((1-float(i)/iterations),decay);\n        norm += pow((1.0f-float(i)/iterations),decay);\n      \}\n      if(normalize_output==0)\n        dst() = total/iterations;\n      else\n        dst() = total/norm;\n    \}\n    else \{\n      float sample;\n      float norm = 1.0;\n      total += src(pos.x,pos.y);\n      for (int i = 1; i < iterations; i++) \{\n        scale = 1+size*i*i/iterations/iterations;\n        posx = ((currentpos.x)/scale+center.x);\n        posy = ((currentpos.y)/scale+center.y);\n        sample = src(posx,posy);\n        if(sample>total/norm) \{\n          total += sample*pow((1-float(i)/iterations),decay);\n        \}\n        else\n          total += (total/norm)*pow((1-float(i)/iterations),decay);\n        norm += pow((1.0f-float(i)/iterations),decay);\n      \}\n      if(normalize_output==0)\n        dst() = total/iterations;\n      else\n        dst() = total/norm;\n    \}\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript1.useGPUIfAvailable}}
rebuild ""
X_Aton_size {{length}}
X_Aton_center {{parent.use_3d==1?Reconcile3D1.output:parent.center} {parent.use_3d==1?Reconcile3D1.output:parent.center}}
X_Aton_iterations {{iterations}}
X_Aton_decay {{decay}}
X_Aton_normalize_output {{normalize}}
X_Aton_mode {{(parent.mode!=3)?parent.mode:parent.mode*(parent.diffuse!=0)}}
rebuild_finalise ""
name BlinkScript3
xpos -840
ypos -116
}
Switch {
inputs 2
which {{parent.bilinear_interpolation}}
name Switch3
xpos -840
ypos -60
}
Switch {
inputs 2
which {{(mode==3)*(diffuse!=0)}}
name Switch1
xpos -740
ypos -10
}
Grade {
multiply {{1/parent.multiply} {1/parent.multiply} {1/parent.multiply} 1}
gamma {{1/parent.gamma} {1/parent.gamma} {1/parent.gamma} 1}
reverse true
name Grade1
xpos -740
ypos 40
}
push $N6e75ac70
Dot {
name Dot5
xpos -1006
ypos -506
}
Dot {
name Dot4
xpos -1006
ypos 94
}
Merge2 {
inputs 2
operation copy
name Merge1
xpos -740
ypos 88
}
Output {
name Output1
xpos -740
ypos 140
}
Input {
inputs 0
name InputLight
xpos -540
ypos -560
number 1
}
Input {
inputs 0
name InputCamera
xpos -440
ypos -560
number 2
}
Dot {
name Dot11
xpos -406
ypos -456
}
push $N6e75ac70
Dot {
name Dot9
xpos -606
ypos -506
}
Dot {
name Dot10
xpos -606
ypos -456
}
Reconcile3D {
inputs 3
calc_output true
name Reconcile3D1
xpos -540
ypos -466
}
end_group
push $Nd8cb3e10
Group {
name bm_CameraShake
help "Gives more control than Nuke's built-in CameraShake gizmo.\n\nCamera float, shake & sub-frame jitter settings are defined independently, then all 3 curves are added together into a final, new expression so your output curve has plenty of detail (especially in the motion blur) & only filters your image once."
tile_color 0x222222ff
note_font Verdana
selected true
xpos 43746
ypos -3060
mapsize {0.15 0.15}
addUserKnob {20 Options}
addUserKnob {26 ""}
addUserKnob {6 switchCheckerboard l Test t "Replaces input image with checkerboard so you can see your camera shake uncontaminated." +STARTLINE}
addUserKnob {4 noiseType l "       Noise Type " t "Choose between 3 different noise functions to generate different types of camera shake." -STARTLINE M {fBm Turbulence Noise "" "" "" "" ""}}
addUserKnob {26 ""}
addUserKnob {7 refFrame l "Reference Frame" t "Setting a reference frame is handy for scaling a curve's frequency around a specific point in time.\n\nNote: must be set prior to tweaking any parameters, as changing reference frame will offset your curve." R 1000 1100}
refFrame 1001
addUserKnob {22 setRef l "Set to current Frame" t "Set the Reference Frame to the current frame in the Viewer." T nuke.thisNode().knob('refFrame').setValue(nuke.frame()) +STARTLINE}
addUserKnob {26 ""}
addUserKnob {7 globalAmt l "Global Amount" t "Control the overall amount of camera shake in one go." R 0 5}
globalAmt 1
addUserKnob {26 ""}
addUserKnob {20 fineControl l "    C O N T R O L S" n 1}
addUserKnob {26 spacer01 l "" +STARTLINE T " "}
addUserKnob {6 toggleJitter l Jitter t "Turn Camera Shake Jitter on/off." +STARTLINE}
toggleJitter true
addUserKnob {7 jitterAmt l "  " t "Adjust the contribution of the Jitter animation curve into the overall camera shake." -STARTLINE R 0 5}
jitterAmt 1
addUserKnob {6 toggleShake l Shake t "Turn Camera Shake Shake on/off." +STARTLINE}
toggleShake true
addUserKnob {7 shakeAmt l "" t "Adjust the contribution of the Shake animation curve into the overall camera shake." -STARTLINE R 0 5}
shakeAmt 1
addUserKnob {6 toggleFloat l Float t "Turn Camera Shake Float on/off." +STARTLINE}
toggleFloat true
addUserKnob {7 floatAmt l "  " t "Adjust the contribution of the Float animation curve into the overall camera shake." -STARTLINE R 0 5}
floatAmt 1
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 weightGroup l "    E D G E   C O M P E N S A T I O N    //    G L O B A L   T R A N S F O R M" n 1}
weightGroup 0
addUserKnob {26 unnames l "" +STARTLINE T " "}
addUserKnob {4 edgePulldown l "Edge Type" t "For larger camera shakes, you will see edge encroachment issues.\n\nSpread will \"pixel smear\" the outer-most pixels to the edge of your format.\n\nMirror will flip/flop the input image around it's edges for more detail." M {None Spread Mirror "" "" ""}}
addUserKnob {26 edgeSpacer l " "}
addUserKnob {12 edgeTranslate l Translate t "Manually translate the image."}
addUserKnob {7 edgeRotate l Rotate t "Manually rotate the image." R 0 360}
addUserKnob {14 edgeScale l Scale t "Manually scale the image to prevent edge encroachment." R 0 100}
edgeScale 1
addUserKnob {20 endGroup_2 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 moblurGroup l "    M O T I O N   B L U R" n 1}
moblurGroup 0
addUserKnob {26 spacer_02 l "" +STARTLINE T " "}
addUserKnob {6 toggleMoblur l "Motion Blur" t "Turn motion blur on/off." +STARTLINE}
toggleMoblur true
addUserKnob {26 spacer_03 l "" +STARTLINE T " "}
addUserKnob {41 filter T jitterCTRL_fBm.filter}
addUserKnob {26 spacer_misc l "" +STARTLINE T " "}
addUserKnob {7 moblurSamples l INVISIBLE +INVISIBLE}
moblurSamples 1
addUserKnob {3 GUISamples l "GUI Samples" t "How many motion blur samples to display in the GUI. (keep this low for Nuke Script interactivity.)"}
GUISamples 1
addUserKnob {3 RenderSamples l "    Render Samples" t "How many motion blur samples to use in the render. (the higher the number, the better your result!)" -STARTLINE}
RenderSamples 16
addUserKnob {26 spacer_misc2 l "" +STARTLINE T " "}
addUserKnob {41 shutter T jitterCTRL_fBm.shutter}
addUserKnob {41 shutteroffset l "shutter offset" T jitterCTRL_fBm.shutteroffset}
addUserKnob {41 shuttercustomoffset l "" -STARTLINE T jitterCTRL_fBm.shuttercustomoffset}
addUserKnob {20 endGroup_1 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {26 overallOutput l "" -STARTLINE T "Load these values into the curve editor to view the overall animation curve.\n"}
addUserKnob {12 outputOverallValue l " " t "The final animation curve of your camera shake."}
outputOverallValue {{(toggleJitter==1?jitterCTRL_fBm.translate.x:0)+(toggleShake==1?shakeCTRL_fBm.translate.x:0)+(toggleFloat==1?floatCTRL_fBm.translate.x:0)} {(toggleJitter==1?jitterCTRL_fBm.translate.y:0)+(toggleShake==1?shakeCTRL_fBm.translate.y:0)+(toggleFloat==1?floatCTRL_fBm.translate.y:0)}}
addUserKnob {26 ""}
addUserKnob {26 info_1 l "" +STARTLINE T "<font color='#777'><b>bm_CameraShake v4.0</b></font><font color='#555'> created by </font><b><a href=\"https://github.com/BenMcEwan/nuke_public\" style=\"color:#777;\">Ben McEwan</a></b>.<br>\n<font color='#555'>Thanks to</font> <a href=\"https://github.com/mileslauridsen\" style=\"color:#777;\">Miles Lauridsen</a><font color='#555'> &</font> <a href=\"https://www.linkedin.com/in/lukas-fabian-6a8184147/\" style=\"color:#777;\">Lukas Fabian</a><font color='#555'> for their contributions.<br>\n<b>Last updated:</b> 29th November, 2020.</font>"}
addUserKnob {20 jitterTab l Jitter}
addUserKnob {26 ""}
addUserKnob {14 jitterTranslate l Translate R 0 100}
jitterTranslate {4 3}
addUserKnob {7 jitterRotate l Rotate R 0 3}
addUserKnob {26 ""}
addUserKnob {3 jitterOctaves l Octaves}
jitterOctaves 3
addUserKnob {7 jitterSpeed l Frequency R 0 5}
jitterSpeed 3
addUserKnob {3 jitterSeed l Seed}
jitterSeed 71526
addUserKnob {22 jitterSeedRandomBtn l "  Random Seed  " -STARTLINE T "import random\nnuke.thisNode().knob('jitterSeed').setValue(random.randint(1,99999))"}
addUserKnob {26 ""}
addUserKnob {26 drg l "" +STARTLINE T "Load these values into the curve editor to view the jitter animation curve.\n"}
addUserKnob {12 outputJitterValue l " "}
outputJitterValue {{(jitterCTRL_fBm.translate.x)} {(jitterCTRL_fBm.translate.y)}}
addUserKnob {26 ""}
addUserKnob {20 shakeTab l Shake}
addUserKnob {26 ""}
addUserKnob {14 shakeTranslate l Translate R 0 100}
shakeTranslate {10 7}
addUserKnob {7 shakeRotate l Rotate R 0 3}
shakeRotate 0.2
addUserKnob {26 ""}
addUserKnob {3 shakeOctaves l Octaves}
shakeOctaves 2
addUserKnob {7 shakeSpeed l Frequency R 0 5}
shakeSpeed 1.5
addUserKnob {3 shakeSeed l Seed}
shakeSeed 16572
addUserKnob {22 shakeSeedRandomBtn l "  Random Seed  " -STARTLINE T "import random\nnuke.thisNode().knob('shakeSeed').setValue(random.randint(1,99999))"}
addUserKnob {26 ""}
addUserKnob {26 ehhkmlkjhg l "" +STARTLINE T "Load these values into the curve editor to view the shake animation curve.\n"}
addUserKnob {12 outputShakeValue l " "}
outputShakeValue {{(shakeCTRL_fBm.translate.x)} {(shakeCTRL_fBm.translate.y)}}
addUserKnob {26 ""}
addUserKnob {20 floatTab l Float}
addUserKnob {26 ""}
addUserKnob {14 floatTranslate l Translate R 0 100}
floatTranslate {40 32}
addUserKnob {7 floatRotate l Rotate R 0 3}
floatRotate 7
addUserKnob {26 ""}
addUserKnob {3 floatOctaves l Octaves}
floatOctaves 1
addUserKnob {7 floatSpeed l Frequency R 0 5}
floatSpeed 0.06
addUserKnob {3 floatSeed l Seed}
floatSeed 72424
addUserKnob {22 floatSeedRandomBtn l "  Random Seed  " -STARTLINE T "import random\nnuke.thisNode().knob('floatSeed').setValue(random.randint(1,99999))"}
addUserKnob {26 ""}
addUserKnob {26 wd l "" +STARTLINE T "Load these values into the curve editor to view the float animation curve.\n"}
addUserKnob {12 outputFloatValue l " "}
outputFloatValue {{(floatCTRL_fBm.translate.x)} {(floatCTRL_fBm.translate.y)}}
addUserKnob {26 ""}
}
CheckerBoard2 {
inputs 0
linecolor 0
linewidth 60
name CheckerBoard1
xpos -144
ypos -391
}
Reformat {
type "to box"
box_width {{Input.width}}
box_height {{Input.height}}
box_fixed true
black_outside true
name Reformat1
xpos -144
ypos -319
}
Dot {
name Dot2
xpos -110
ypos -273
}
Input {
inputs 0
name Input
xpos 17
ypos -374
}
Switch {
inputs 2
which {{switchCheckerboard i}}
name Switch1
xpos 17
ypos -277
}
set N6886ab90 [stack 0]
Dot {
name Dot11
label "  "
note_font "Arial Black"
note_font_size 16
xpos 298
ypos -219
}
Dot {
name Dot12
label "  "
note_font "Arial Black"
note_font_size 16
xpos 298
ypos 365
}
push $N6886ab90
Dot {
name Dot10
label "  "
note_font "Arial Black"
note_font_size 16
xpos -87
ypos -151
}
set N6887efd0 [stack 0]
Mirror {
Horizontal true
name Mirror8
xpos -121
ypos -133
}
Transform {
translate {{-input.format.w} 0}
center {1075 860}
shutteroffset centred
name Transform8
xpos -121
ypos -107
}
push $N6887efd0
Dot {
name Dot9
label "  "
note_font "Arial Black"
note_font_size 16
xpos -197
ypos -151
}
set N6889c910 [stack 0]
Mirror {
Horizontal true
Vertical true
name Mirror7
xpos -228
ypos -131
}
Transform {
translate {{-input.format.w} {input.format.h}}
center {1075 860}
shutteroffset centred
name Transform7
xpos -228
ypos -105
}
push $N6889c910
Dot {
name Dot8
label "  "
note_font "Arial Black"
note_font_size 16
xpos -315
ypos -151
}
set N688bab70 [stack 0]
Dot {
name Dot7
label "  "
note_font "Arial Black"
note_font_size 16
xpos -425
ypos -151
}
set N688c0360 [stack 0]
Dot {
name Dot6
label "  "
note_font "Arial Black"
note_font_size 16
xpos -535
ypos -151
}
set N688c5da0 [stack 0]
Dot {
name Dot5
label "  "
note_font "Arial Black"
note_font_size 16
xpos -645
ypos -151
}
set N688cb7e0 [stack 0]
Dot {
name Dot4
label "  "
note_font "Arial Black"
note_font_size 16
xpos -748
ypos -151
}
set N688d1220 [stack 0]
Mirror {
Vertical true
name Mirror2
xpos -782
ypos -134
}
Transform {
translate {0 {-input.format.h}}
center {1075 860}
shutteroffset centred
name Transform2
xpos -782
ypos -108
}
push $N688cb7e0
Mirror {
Horizontal true
Vertical true
name Mirror3
xpos -679
ypos -133
}
Transform {
translate {{input.format.w} {-input.format.h}}
center {1075 860}
shutteroffset centred
name Transform3
xpos -679
ypos -107
}
push $N688c5da0
Mirror {
Horizontal true
name Mirror4
xpos -569
ypos -134
}
Transform {
translate {{input.format.w} 0}
center {1075 860}
shutteroffset centred
name Transform4
xpos -569
ypos -108
}
push $N688c0360
Mirror {
Horizontal true
Vertical true
name Mirror5
xpos -459
ypos -133
}
Transform {
translate {{input.format.w} {input.format.h}}
center {1075 860}
shutteroffset centred
name Transform5
xpos -459
ypos -107
}
push 0
push $N688bab70
Mirror {
Vertical true
name Mirror6
xpos -349
ypos -133
}
Transform {
translate {0 {input.format.h}}
center {1075 860}
shutteroffset centred
name Transform6
xpos -349
ypos -107
}
push $N688d1220
Dot {
name Dot3
label "  "
note_font "Arial Black"
note_font_size 16
xpos -851
ypos -151
}
Mirror {
Horizontal true
Vertical true
name Mirror1
xpos -885
ypos -133
}
Transform {
translate {{-input.format.w} {-input.format.h}}
center {1075 860}
shutteroffset centred
name Transform1
xpos -885
ypos -107
}
Merge2 {
inputs 8+1
name Merge1
xpos -459
ypos -49
}
push $N6886ab90
Merge2 {
inputs 2
name Merge2
xpos 17
ypos -49
disable {{edgePulldown==2?0:1}}
}
Dot {
name Dot1
label "  "
note_font "Arial Black"
note_font_size 16
xpos 51
ypos 50
}
set N68793140 [stack 0]
Transform {
translate {{noise((base-base(refFrame))*(jitterSpeed/bfreq)+base(refFrame),2.5,3.5)*jitterTranslate.w*globalAmt*jitterAmt} {noise(2.5,(base2-base2(refFrame))*(jitterSpeed/bfreq)+base2(refFrame),3.5)*jitterTranslate.h*globalAmt*jitterAmt}}
rotate {{noise((base-base(refFrame))*(jitterSpeed/bfreq)+base(refFrame),jitterOctaves,.5)*jitterRotate*globalAmt*jitterAmt}}
scale {1 1}
center {{toggleJitter==1?((noise(noise((base-base(refFrame))*(jitterSpeed/bfreq)+base(refFrame),2.5,3.5))*input.width)+input.width/2):(input.width/2)*globalAmt*jitterAmt} {toggleJitter==1?((noise(noise((base2-base2(refFrame))*(jitterSpeed/bfreq)+base2(refFrame),2.5,3.5))*input.height)+input.height/2):(input.height/2)*globalAmt*jitterAmt}}
filter {{jitterCTRL_fBm.filter}}
clamp {{jitterCTRL_fBm.clamp}}
black_outside {{jitterCTRL_fBm.black_outside}}
motionblur {{jitterCTRL_fBm.motionblur}}
shutter {{jitterCTRL_fBm.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_fBm.shuttercustomoffset}}
name jitterCTRL_noise
xpos 169
ypos 108
disable {{!toggleJitter}}
addUserKnob {20 User}
addUserKnob {7 base}
base {{parent.jitterCTRL_fBm.base}}
addUserKnob {7 base2}
base2 {{parent.jitterCTRL_fBm.base2}}
addUserKnob {7 bfreq l "base frequancy"}
bfreq {{parent.jitterCTRL_fBm.bfreq}}
}
Transform {
translate {{noise((base-base(refFrame))*(shakeSpeed/bfreq)+base(refFrame),2.5,3.5)*jitterTranslate.w*globalAmt*jitterAmt} {noise(2.5,(base2-base2(refFrame))*(shakeSpeed/bfreq)+base2(refFrame),3.5)*jitterTranslate.h*globalAmt*jitterAmt}}
rotate {{noise(((frame-refFrame)*shakeSpeed)+shakeSeed+refFrame,shakeOctaves,.5)*shakeRotate*globalAmt*shakeAmt}}
scale {1 1}
center {{toggleShake==1?((noise(noise((base-base(refFrame))*(shakeSpeed/bfreq)+base(refFrame),2.5,3.5))*input.width)+input.width/2):(input.width/2)*globalAmt*shakeAmt} {toggleShake==1?((noise(noise((base-base(refFrame))*(shakeSpeed/bfreq)+base(refFrame),2.5,3.5))*input.height)+input.height/2):(input.height/2)*globalAmt*shakeAmt}}
filter {{jitterCTRL_fBm.filter}}
clamp {{jitterCTRL_fBm.clamp}}
black_outside {{jitterCTRL_fBm.black_outside}}
motionblur {{jitterCTRL_fBm.motionblur}}
shutter {{jitterCTRL_fBm.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_fBm.shuttercustomoffset}}
name shakeCTRL_noise
xpos 169
ypos 134
disable {{!toggleShake}}
addUserKnob {20 User}
addUserKnob {7 base}
base {{parent.shakeCTRL_fBm.base}}
addUserKnob {7 base2}
base2 {{parent.shakeCTRL_fBm.base2}}
addUserKnob {7 bfreq l "base frequency"}
bfreq {{parent.shakeCTRL_fBm.bfreq}}
}
Transform {
translate {{noise((base-base(refFrame))*(floatSpeed/bfreq)+base(refFrame),2.5,3.5)*jitterTranslate.w*globalAmt*jitterAmt} {noise(2.5,(base2-base2(refFrame))*(floatSpeed/bfreq)+base2(refFrame),3.5)*jitterTranslate.h*globalAmt*jitterAmt}}
rotate {{noise((base-base(refFrame))*(floatSpeed/bfreq)+base(refFrame),floatOctaves,.5)*floatRotate*globalAmt*floatAmt}}
scale {1 1}
center {{toggleFloat==1?((noise(noise((base-base(refFrame))*(floatSpeed/bfreq)+base(refFrame),2.5,3.5))*input.width)+input.width/2):(input.width/2)*globalAmt*floatAmt} {toggleFloat==1?((noise(noise((base-base(refFrame))*(floatSpeed/bfreq)+base(refFrame),2.5,3.5))*input.height)+input.height/2):(input.height/2)*globalAmt*floatAmt}}
filter {{jitterCTRL_fBm.filter}}
clamp {{jitterCTRL_fBm.clamp}}
black_outside {{jitterCTRL_fBm.black_outside}}
motionblur {{jitterCTRL_fBm.motionblur}}
shutter {{jitterCTRL_fBm.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_fBm.shuttercustomoffset}}
name floatCTRL_noise
xpos 169
ypos 158
disable {{!toggleFloat}}
addUserKnob {20 User}
addUserKnob {7 base}
base {{parent.floatCTRL_fBm.base}}
addUserKnob {7 base2}
base2 {{parent.floatCTRL_fBm.base2}}
addUserKnob {7 bfreq l "base frequency"}
bfreq {{parent.floatCTRL_fBm.bfreq}}
}
Transform {
translate {{edgeTranslate.x} {edgeTranslate.y}}
rotate {{edgeRotate}}
scale {{edgeScale} {edgeScale}}
center {{"width/2 - translate"} {"height/2 - translate"}}
filter {{jitterCTRL_fBm.filter}}
black_outside {{edgePulldown==0?1:0}}
motionblur {{"toggleMoblur==0?0:\$gui?GUISamples:RenderSamples"}}
shutter {{jitterCTRL_fBm.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_fBm.shuttercustomoffset}}
name edgeScale3
xpos 169
ypos 200
}
push $N68793140
Transform {
translate {{turbulence((base-base(refFrame))*(jitterSpeed/bfreq)+base(refFrame),2.5,3.5,jitterOctaves,2,.5)*jitterTranslate.w*globalAmt*jitterAmt} {turbulence((base2-base2(refFrame))*(jitterSpeed/bfreq)+base2(refFrame),10.5,11.5,jitterOctaves,2,.5)*jitterTranslate.h*globalAmt*jitterAmt}}
rotate {{turbulence((base-base(refFrame))*(jitterSpeed/bfreq)+base(refFrame),20.5,21.5,jitterOctaves,2,.5)*jitterRotate*globalAmt*jitterAmt}}
scale {1 1}
center {{toggleJitter==1?((turbulence((base-base(refFrame))*(jitterSpeed/bfreq)+base(refFrame),2.5,3.5,jitterOctaves,2,.5)*input.width)+input.width/2):(input.width/2)*globalAmt*jitterAmt} {toggleJitter==1?((turbulence((base2-base2(refFrame))*(jitterSpeed/bfreq)+base2(refFrame),10.5,11.5,jitterOctaves,2,.5)*input.height)+input.height/2):(input.height/2)*globalAmt*jitterAmt}}
filter {{jitterCTRL_fBm.filter x1 0}}
clamp {{jitterCTRL_fBm.clamp}}
black_outside {{jitterCTRL_fBm.black_outside}}
motionblur {{jitterCTRL_fBm.motionblur}}
shutter {{jitterCTRL_fBm.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_fBm.shuttercustomoffset}}
name jitterCTRL_turbulence
xpos 17
ypos 109
disable {{!toggleJitter}}
addUserKnob {20 User}
addUserKnob {7 base}
base {{parent.jitterCTRL_fBm.base}}
addUserKnob {7 base2}
base2 {{parent.jitterCTRL_fBm.base2}}
addUserKnob {7 bfreq l "base frequency"}
bfreq {{parent.jitterCTRL_fBm.bfreq}}
}
Transform {
translate {{turbulence((base-base(refFrame))*(shakeSpeed/bfreq)+base(refFrame),2.5,3.5,shakeOctaves,2,.5)*shakeTranslate.w*globalAmt*shakeAmt} {turbulence((base2-base2(refFrame))*(shakeSpeed/bfreq)+base2(refFrame),10.5,11.5,shakeOctaves,2,.5)*shakeTranslate.h*globalAmt*shakeAmt}}
rotate {{turbulence((base-base(refFrame))*(shakeSpeed/bfreq)+base(refFrame),20.5,21.5,shakeOctaves,2,.5)*shakeRotate*globalAmt*shakeAmt x7 70}}
scale {1 1}
center {{toggleShake==1?((turbulence((base-base(refFrame))*(shakeSpeed/bfreq)+base(refFrame),2.5,3.5,shakeOctaves,2,.5)*input.width)+input.width/2):(input.width/2)*globalAmt*shakeAmt} {toggleShake==1?((turbulence((base2-base2(refFrame))*(shakeSpeed/bfreq)+base2(refFrame),10.5,11.5,shakeOctaves,2,.5)*input.height)+input.height/2):(input.height/2)*globalAmt*shakeAmt}}
filter {{jitterCTRL_fBm.filter x14 2}}
clamp {{jitterCTRL_fBm.clamp}}
black_outside {{jitterCTRL_fBm.black_outside}}
motionblur {{jitterCTRL_fBm.motionblur}}
shutter {{jitterCTRL_turbulence.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_turbulence.shuttercustomoffset}}
name shakeCTRL_turbulence
xpos 17
ypos 135
disable {{!toggleShake}}
addUserKnob {20 User}
addUserKnob {7 base}
base {{parent.shakeCTRL_fBm.base}}
addUserKnob {7 base2}
base2 {{parent.shakeCTRL_fBm.base2}}
addUserKnob {7 bfreq l "base frequency"}
bfreq {{parent.shakeCTRL_fBm.bfreq}}
}
Transform {
translate {{turbulence((base-base(refFrame))*(floatSpeed/bfreq)+base(refFrame),2.5,3.5,floatOctaves,2,.5)*floatTranslate.w*globalAmt*floatAmt} {turbulence((base2-base2(refFrame))*(floatSpeed/bfreq)+base2(refFrame),10.5,11.5,floatOctaves,2,.5)*floatTranslate.h*globalAmt*floatAmt}}
rotate {{turbulence((base-base(refFrame))*(floatSpeed/bfreq)+base(refFrame),20.5,21.5,floatOctaves,2,.5)*floatRotate*globalAmt*floatAmt}}
scale {1 1}
center {{toggleFloat==1?((turbulence((base-base(refFrame))*(floatSpeed/bfreq)+base(refFrame),2.5,3.5,floatOctaves,2,.5)*input.width)+input.width/2):(input.width/2)*globalAmt*floatAmt} {toggleFloat==1?((turbulence((base2-base2(refFrame))*(floatSpeed/bfreq)+base2(refFrame),10.5,11.5,floatOctaves,2,.5)*input.height)+input.height/2):(input.height/2)*globalAmt*floatAmt}}
filter {{jitterCTRL_fBm.filter x14 2}}
clamp {{jitterCTRL_fBm.clamp}}
black_outside {{jitterCTRL_fBm.black_outside}}
motionblur {{jitterCTRL_fBm.motionblur}}
shutter {{jitterCTRL_fBm.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_fBm.shuttercustomoffset}}
name floatCTRL_turbulence
xpos 17
ypos 159
disable {{!toggleFloat}}
addUserKnob {20 User}
addUserKnob {7 base}
base {{parent.floatCTRL_fBm.base}}
addUserKnob {7 base2}
base2 {{parent.floatCTRL_fBm.base2}}
addUserKnob {7 bfreq l "base frequency"}
bfreq {{parent.floatCTRL_fBm.bfreq}}
}
Transform {
translate {{edgeTranslate.x} {edgeTranslate.y}}
rotate {{edgeRotate}}
scale {{edgeScale} {edgeScale}}
center {{"width/2 - translate"} {"height/2 - translate"}}
filter {{jitterCTRL_fBm.filter}}
black_outside {{edgePulldown==0?1:0}}
motionblur {{"toggleMoblur==0?0:\$gui?GUISamples:RenderSamples"}}
shutter {{jitterCTRL_fBm.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_fBm.shuttercustomoffset}}
name edgeScale2
xpos 17
ypos 204
}
push $N68793140
Transform {
translate {{fBm((base-base(refFrame))*(jitterSpeed/bfreq)+base(refFrame),2.5,3.5,jitterOctaves,2,.5)*jitterTranslate.w*globalAmt*jitterAmt} {fBm((base2-base2(refFrame))*(jitterSpeed/bfreq)+base2(refFrame),10.5,11.5,jitterOctaves,2,.5)*jitterTranslate.h*globalAmt*jitterAmt}}
rotate {{fBm((base-base(refFrame))*(jitterSpeed/bfreq)+base(refFrame),20.5,21.5,jitterOctaves,2,.5)*jitterRotate*globalAmt*jitterAmt}}
scale {1 1}
center {{toggleJitter==1?((fBm((base-base(refFrame))*(jitterSpeed/bfreq)+base(refFrame),2.5,3.5,jitterOctaves,2,.5)*input.width)+input.width/2):(input.width/2)*globalAmt*jitterAmt} {toggleJitter==1?((fBm((base2-base2(refFrame))*(jitterSpeed/bfreq)+base2(refFrame),10.5,11.5,jitterOctaves,2,.5)*input.height)+input.height/2):(input.height/2)*globalAmt*jitterAmt}}
black_outside {{edgePulldown==0?1:0}}
motionblur {{"toggleMoblur==0?0:\$gui?GUISamples:RenderSamples"}}
shutteroffset centred
name jitterCTRL_fBm
selected true
xpos -128
ypos 103
disable {{!toggleJitter}}
addUserKnob {20 User}
addUserKnob {7 base}
base {{frame*bfreq+jitterSeed}}
addUserKnob {7 base2}
base2 {{frame*bfreq+jitterSeed+100}}
addUserKnob {7 bfreq l "base frequency"}
bfreq 3
}
Transform {
translate {{fBm((base-base(refFrame))*(shakeSpeed/bfreq)+base(refFrame),2.5,3.5,shakeOctaves,2,.5)*shakeTranslate.w*globalAmt*shakeAmt} {fBm((base2-base2(refFrame))*(shakeSpeed/bfreq)+base2(refFrame),10.5,11.5,shakeOctaves,2,.5)*shakeTranslate.h*globalAmt*shakeAmt}}
rotate {{fBm((base-base(refFrame))*(shakeSpeed/bfreq)+base(refFrame),20.5,21.5,shakeOctaves,2,.5)*shakeRotate*globalAmt*shakeAmt x7 70}}
scale {1 1}
center {{toggleShake==1?((fBm((base-base(refFrame))*(shakeSpeed/bfreq)+base(refFrame),2.5,3.5,shakeOctaves,2,.5)*input.width)+input.width/2):(input.width/2)*globalAmt*shakeAmt} {toggleShake==1?((fBm((base2-base2(refFrame))*(shakeSpeed/bfreq)+base2(refFrame),10.5,11.5,shakeOctaves,2,.5)*input.height)+input.height/2):(input.height/2)*globalAmt*shakeAmt}}
filter {{jitterCTRL_fBm.filter x14 2}}
clamp {{jitterCTRL_fBm.clamp}}
black_outside {{jitterCTRL_fBm.black_outside}}
motionblur {{jitterCTRL_fBm.motionblur}}
shutter {{jitterCTRL_fBm.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_fBm.shuttercustomoffset}}
name shakeCTRL_fBm
xpos -128
ypos 127
disable {{!toggleShake}}
addUserKnob {20 User}
addUserKnob {7 base}
base {{frame*bfreq+shakeSeed}}
addUserKnob {7 base2}
base2 {{frame*bfreq+shakeSeed+100}}
addUserKnob {7 bfreq l "base frequancy"}
bfreq 1.5
}
Transform {
translate {{fBm((base-base(refFrame))*(floatSpeed/bfreq)+base(refFrame),2.5,3.5,floatOctaves,2,.5)*floatTranslate.w*globalAmt*floatAmt} {fBm((base2-base2(refFrame))*(floatSpeed/bfreq)+base2(refFrame),10.5,11.5,floatOctaves,2,.5)*floatTranslate.h*globalAmt*floatAmt}}
rotate {{fBm((base-base(refFrame))*(floatSpeed/bfreq)+base(refFrame),20.5,21.5,floatOctaves,2,.5)*floatRotate*globalAmt*floatAmt}}
scale {1 1}
center {{toggleFloat==1?((fBm((base-base(refFrame))*(floatSpeed/bfreq)+base(refFrame),2.5,3.5,floatOctaves,2,.5)*input.width)+input.width/2):(input.width/2)*globalAmt*floatAmt} {toggleFloat==1?((fBm((base2-base2(refFrame))*(floatSpeed/bfreq)+base2(refFrame),10.5,11.5,floatOctaves,2,.5)*input.height)+input.height/2):(input.height/2)*globalAmt*floatAmt}}
filter {{jitterCTRL_fBm.filter x14 2}}
clamp {{jitterCTRL_fBm.clamp}}
black_outside {{jitterCTRL_fBm.black_outside}}
motionblur {{jitterCTRL_fBm.motionblur}}
shutter {{jitterCTRL_fBm.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_fBm.shuttercustomoffset}}
name floatCTRL_fBm
xpos -128
ypos 151
disable {{!toggleFloat}}
addUserKnob {20 User}
addUserKnob {7 base}
base {{frame*bfreq+floatSeed}}
addUserKnob {7 base2}
base2 {{frame*bfreq+floatSeed+100}}
addUserKnob {7 bfreq l "base frequency"}
bfreq 0.06
}
Transform {
translate {{edgeTranslate.x} {edgeTranslate.y}}
rotate {{edgeRotate}}
scale {{edgeScale} {edgeScale}}
center {{"width/2 - translate"} {"height/2 - translate"}}
filter {{jitterCTRL_fBm.filter}}
black_outside {{edgePulldown==0?1:0}}
motionblur {{"toggleMoblur==0?0:\$gui?GUISamples:RenderSamples"}}
shutter {{jitterCTRL_fBm.shutter}}
shutteroffset {{jitterCTRL_fBm.shutteroffset}}
shuttercustomoffset {{jitterCTRL_fBm.shuttercustomoffset}}
name edgeScale1
xpos -128
ypos 206
}
Switch {
inputs 3
which {{noiseType i}}
name Switch4
xpos 17
ypos 242
}
CopyBBox {
inputs 2
name CopyBBox1
xpos 17
ypos 362
}
Output {
name Output1
xpos 17
ypos 460
}
end_group
push $Nd8cb3e10
Group {
name MorphDissolve
help "Allows to morph between two moving plates automatically, or can be used to improve manual Morphs."
tile_color 0x890074ff
label "(Plate \[value morph])"
selected true
xpos 43751
ypos -3006
addUserKnob {20 MorphDissolve}
addUserKnob {7 morph l Morph t "Morphs between input 0 and input 1"}
addUserKnob {26 ""}
addUserKnob {4 method l "Morph Method" t "Pick which method to use. They may both display artifacts in different areas, try both to see which one produces the best results for your specific morph." M {iDistort Kronos ""}}
addUserKnob {4 direction l Direction -STARTLINE M {In-Between "0 --> 1" "1 --> 0" ""}}
addUserKnob {4 result l Result -STARTLINE M {Morph STmap "" "" "" ""}}
addUserKnob {7 vectorDetail l "Vector Detail" t "Use this to adjust the density of the calculated motion vector field. Higher details capture finer movements, but take will longer to calculate." R 0.01 1}
vectorDetail 0.75
addUserKnob {7 strength l Strength t "Match Strength : Stonger values will match larger differences between the two plates." R 0 1.5}
strength 1.5
addUserKnob {26 ""}
addUserKnob {26 copyright l "" +STARTLINE T "v1.0 - by Erwan Leroy - 2017"}
}
BackdropNode {
inputs 0
name Backdrop1
tile_color 0x5b4e5658
label Zipping
note_font_size 40
xpos 600
ypos -55
bdwidth 180
bdheight 241
}
Input {
inputs 0
name Input1
xpos 1355
ypos -123
number 1
}
Dot {
name Dot3
tile_color 0xcccccc00
xpos 1389
ypos -72
}
set N686a7d10 [stack 0]
Dot {
name Dot8
tile_color 0xcccccc00
xpos 1389
ypos 1115
}
push $N686a7d10
Dot {
name Dot13
tile_color 0xcccccc00
xpos 1247
ypos -72
}
NoTimeBlur {
rounding floor
single false
name NoTimeBlur2
xpos 1213
ypos -15
}
Retime {
input.first 1001
input.first_lock true
output.first 1001
output.last 1002
speed 0.5
before continue
after continue
filter none
time ""
name Retime2
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 1213
ypos 23
}
Input {
inputs 0
name Input0
xpos -24
ypos -121
}
Dot {
name Dot4
tile_color 0xcccccc00
xpos 10
ypos -75
}
set N686d6180 [stack 0]
Dot {
name Dot14
tile_color 0xcccccc00
xpos 155
ypos -75
}
NoTimeBlur {
rounding floor
single false
name NoTimeBlur1
xpos 121
ypos -13
}
Retime {
input.first 1001
input.first_lock true
input.last 1218
output.first 1001
output.last 1436
speed 0.5
before continue
after continue
filter none
time ""
name Retime1
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 121
ypos 23
}
Switch {
inputs 2
which {{(frame-1001)%2}}
name Switch1
xpos 650
ypos 35
}
Dot {
name Dot9
tile_color 0xcccccc00
xpos 684
ypos 124
}
set N68502c00 [stack 0]
Dot {
name Dot2
tile_color 0xcccccc00
xpos 985
ypos 124
}
Kronos {
retimedChannels all
timing2 Frame
timingFrame2 {{(frame-1001)*2+1001+parent.morph}}
motionEstimation Regularized
vectorDetailReg {{parent.vectorDetail}}
strengthReg {{parent.strength}}
name Kronos1
xpos 951
ypos 273
}
Dot {
name Dot12
tile_color 0xcccccc00
xpos 985
ypos 903
}
push $N68502c00
Dot {
name Dot10
tile_color 0xcccccc00
xpos 415
ypos 124
}
VectorGenerator {
motionEstimation Regularized
vectorDetailReg {{parent.vectorDetail}}
strengthReg {{parent.strength}}
name VectorGenerator1
xpos 381
ypos 277
}
Dot {
name Dot1
tile_color 0xcccccc00
xpos 415
ypos 350
}
set N6854f990 [stack 0]
Shuffle {
in backward
blue black
alpha black
name Shuffle2
label "in \[value in]-->out \[value out]"
xpos 217
ypos 340
}
TimeOffset {
time_offset -1
time ""
name TimeOffset2
label "\[value time_offset]"
xpos 217
ypos 484
}
push $N6854f990
Shuffle {
in forward
blue black
alpha black
name Shuffle1
label "in \[value in]-->out \[value out]"
xpos 560
ypos 340
}
TimeOffset {
time_offset 1
time ""
name TimeOffset1
label "\[value time_offset]"
xpos 560
ypos 414
}
push $N6854f990
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
bbox B
name Copy1
xpos 381
ypos 408
}
Copy {
inputs 2
from0 backward.u
to0 backward.u
from1 backward.v
to1 backward.v
bbox B
name Copy2
xpos 381
ypos 478
}
Group {
name UV_Map
help "Create an uvmap from the input format or the selected format that can be used for example for baking transformations and applying them through a STmap node.\nUse the overscan to create values outside of the viewing window and the 0-1 range."
tile_color 0x578100ff
note_font "Bitstream Vera Sans"
note_font_color 0xffffffff
xpos 381
ypos 549
disable {{!result}}
mapsize {0.15 0.15}
addUserKnob {20 tab l "UV Map"}
addUserKnob {41 format T Constant1.format}
addUserKnob {41 scale l overscan T Reformat1.scale}
addUserKnob {6 alpha l "alpha 1" +STARTLINE}
addUserKnob {41 black_outside l "black outside" -STARTLINE T Reformat2.black_outside}
}
Input {
inputs 0
name Input
xpos 620
ypos -370
}
Shuffle {
red black
green black
blue black
alpha black
name Shuffle1
xpos 620
ypos -309
}
Constant {
inputs 0
name Constant1
xpos 479
ypos -214
}
Switch {
inputs 2
which {{"\[exists parent.input0]"}}
name Switch1
xpos 620
ypos -190
}
Reformat {
type scale
pbb true
name Reformat1
xpos 620
ypos -71
}
Reformat {
type scale
scale {{1/Reformat1.scale} {1/Reformat1.scale}}
resize none
black_outside true
pbb true
name Reformat2
xpos 620
ypos -37
}
Shuffle {
alpha white
name Shuffle13
tile_color 0xffffff00
label "\[value in]"
xpos 620
ypos 12
disable {{!parent.alpha}}
}
Expression {
expr0 (x+0.5)/width
expr1 (y+0.5)/height
name Expression2
xpos 620
ypos 75
}
Output {
name Output1
xpos 620
ypos 127
}
end_group
Dot {
name Dot5
note_font_size 41
xpos 415
ypos 601
}
set N62125930 [stack 0]
Retime {
input.first 1000
input.first_lock true
input.last 1002
output.first 1000
output.last 1001
speed 2
before continue
after continue
filter none
time ""
name Retime4
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 459
ypos 672
}
IDistort {
uv forward
uv_scale {{1-parent.morph}}
name IDistort2
xpos 459
ypos 741
}
set N6213a600 [stack 0]
push $N62125930
Retime {
input.first 1001
input.first_lock true
input.last 1436
output.first 1001
output.last 1218
speed 2
before continue
after continue
filter none
time ""
name Retime3
label "x\[value input.first]-->x\[value output.first]\n\[if \{\[value speed] == 1\} then \{return \"\"\} else \{return \"spd \[value speed]\"\}]"
xpos 308
ypos 673
}
IDistort {
uv backward
uv_scale {{parent.morph}}
name IDistort1
xpos 308
ypos 738
}
set N62156870 [stack 0]
push $N6213a600
push $N62156870
Dissolve {
inputs 2
which {{parent.morph}}
name Dissolve1
xpos 379
ypos 823
}
Dot {
name Dot11
tile_color 0xcccccc00
xpos 413
ypos 903
}
Switch {
inputs 3
which {{direction}}
name Switch4
label "\[value which]"
xpos 491
ypos 893
}
Switch {
inputs 2
which {{parent.method}}
name Switch3
xpos 627
ypos 899
}
set N6217f280 [stack 0]
push $N686d6180
Dot {
name Dot7
tile_color 0xcccccc00
xpos 10
ypos 1115
}
Switch {
inputs 3
which {{"parent.morph<=0?0:parent.morph>=1  ?2:1"}}
name Switch2
xpos 547
ypos 1111
}
set N6218dbc0 [stack 0]
push $N6217f280
push $N6217f280
push $N6218dbc0
Switch {
inputs 3
which {{"result + direction"}}
name Switch5
label "\[value which]"
xpos 627
ypos 1181
}
Switch {
inputs 2
which {{method}}
name Switch6
label "\[value which]"
xpos 627
ypos 1257
}
Output {
name Output1
xpos 627
ypos 1333
}
end_group
push $cut_paste_input
Group {
name STMapInverse
tile_color 0x196654ff
selected true
xpos 43746
ypos -2942
addUserKnob {20 InverseSTMap}
addUserKnob {41 in l channels T Shuffle1.in}
addUserKnob {41 in2 l "UV channels" T Shuffle1.in2}
addUserKnob {41 box_width l "UV size" T Reformat1.box_width}
addUserKnob {6 fill_gap l "Fill Gap" +STARTLINE}
fill_gap true
addUserKnob {41 size -STARTLINE T Blur1.size}
addUserKnob {26 ""}
addUserKnob {41 detail l "point detail" T PositionToPoints1.detail}
addUserKnob {41 pointSize l "point size" T PositionToPoints1.pointSize}
addUserKnob {26 ""}
addUserKnob {32 Lookin T "start http://www.lookinvfx.com/tools/" +STARTLINE}
addUserKnob {26 text l "" -STARTLINE T "   in_inverseSTMap v1.0 | Luca Mignardi | 2014"}
}
Camera2 {
inputs 0
translate {0.5 0.5 1}
projection_mode orthographic
focal 25
haperture 25
vaperture 25
near 0.5
far 1.5
name Camera1
xpos 93
ypos 157
}
Input {
inputs 0
name Input1
xpos -58
ypos -118
}
Shuffle {
in2 forward
red red2
green green2
black red
white green
red2 blue
green2 alpha
out forward
out2 rgba
name Shuffle1
xpos -58
ypos -64
}
Unpremult {
name Unpremult2
xpos -58
ypos -12
}
Unpremult {
channels forward
name Unpremult3
xpos -58
ypos 37
}
set N621f6500 [stack 0]
push $N621f6500
Shuffle {
in forward
blue black
alpha black
name Shuffle2
label "\[value in]"
xpos 64
ypos 37
}
PositionToPoints {
inputs 2
render_mode textured
detail 1
pointSize 10
name PositionToPoints1
xpos -58
ypos 108
}
Reformat {
inputs 0
type "to box"
format "1024 1024 0 0 1024 1024 1 square_1K"
box_width 1024
box_height {{box_width i}}
box_fixed true
name Reformat1
selected true
xpos -196
ypos 177
}
ScanlineRender {
inputs 3
max_tessellation 1
motion_vectors_type off
MB_channel none
name ScanlineRender1
xpos -58
ypos 177
}
Premult {
name Premult1
xpos -58
ypos 220
}
Dot {
name Dot1
xpos -24
ypos 276
}
set N62057770 [stack 0]
Blur {
size 1.6
name Blur1
xpos 49
ypos 266
}
Unpremult {
name Unpremult1
xpos 49
ypos 316
}
push $N62057770
Merge2 {
inputs 2
operation under
name Merge1
xpos -58
ypos 316
disable {{1-fill_gap}}
}
Output {
name Output1
xpos -58
ypos 375
}
end_group
push $Nd8cb3e10
Group {
name GodRaysProjector
tile_color 0xcc804eff
selected true
xpos 43754
ypos -2870
addUserKnob {20 User}
addUserKnob {41 "Local GPU: " T "GetGPUName.Local GPU: "}
addUserKnob {41 useGPUIfAvailable l "GPU Preview" -STARTLINE T BlinkScript1.useGPUIfAvailable}
addUserKnob {41 vectorize l "Vectorize on CPU" -STARTLINE T BlinkScript1.vectorize}
addUserKnob {26 ""}
addUserKnob {4 outputMode l "output mode" t "2D: just the RGBA projection\nDeep: RGBA projection, with deep data, output as a deep stream\nShadow: just the shadow mask" M {2D Deep Shadow "" "" ""}}
addUserKnob {26 ""}
addUserKnob {20 _3 l Projection n 1}
_3 0
addUserKnob {41 scale l "input resolution scale" t "pre-scales the input image(s) and then performs an inverse scale to return the same format.\n\nthis will either speed up performance, or decrease the powderiness depending on increased or decreased resolution." T Reformat1.scale}
addUserKnob {41 GodRaysProjectorVolumeKernel_iterations l steps t "the number of projected planes used to create the volume" T BlinkScript1.GodRaysProjectorVolumeKernel_iterations}
addUserKnob {41 GodRaysProjectorVolumeKernel_depthMin l "project near" t "the closest plane used to create the volume" T BlinkScript1.GodRaysProjectorVolumeKernel_depthMin}
addUserKnob {41 GodRaysProjectorVolumeKernel_depthMax l "project far" t "the farthest plane used to create the volume" T BlinkScript1.GodRaysProjectorVolumeKernel_depthMax}
addUserKnob {41 GodRaysProjectorVolumeKernel_projDistSkew l "near/far weight" t "this skews the projection plane placement nearer or further from the first and last planes" T BlinkScript1.GodRaysProjectorVolumeKernel_projDistSkew}
addUserKnob {20 endGroup n -1}
addUserKnob {20 projectionNoise l "3D Noise" n 1}
projectionNoise 0
addUserKnob {41 GodRaysProjectorVolumeKernel_EnableNoise l "enable noise" T BlinkScript1.GodRaysProjectorVolumeKernel_EnableNoise}
addUserKnob {41 GodRaysProjectorVolumeKernel_NoiseOctaves l octaves t "the complexity of the 4D noise" T BlinkScript1.GodRaysProjectorVolumeKernel_NoiseOctaves}
addUserKnob {41 GodRaysProjectorVolumeKernel_NoisePersistence l persistence t "how much each level of complexity contributes to the final noise" T BlinkScript1.GodRaysProjectorVolumeKernel_NoisePersistence}
addUserKnob {41 GodRaysProjectorVolumeKernel_NoiseScale l scale t "scaling the noise at generation level" T BlinkScript1.GodRaysProjectorVolumeKernel_NoiseScale}
addUserKnob {41 GodRaysProjectorVolumeKernel_NoiseSeed l seed t "this is the 4th dimention of the 4D noise, this is relative to the scale of the postion data" T BlinkScript1.GodRaysProjectorVolumeKernel_NoiseSeed}
addUserKnob {41 GodRaysProjectorVolumeKernel_NoiseGamma l gamma T BlinkScript1.GodRaysProjectorVolumeKernel_NoiseGamma}
addUserKnob {41 GodRaysProjectorVolumeKernel_NoiseMix l mix T BlinkScript1.GodRaysProjectorVolumeKernel_NoiseMix}
addUserKnob {26 ""}
addUserKnob {41 xform_order l "transform order" T Axis1.xform_order}
addUserKnob {41 rot_order l "rotation order" T Axis1.rot_order}
addUserKnob {41 translate T Axis1.translate}
addUserKnob {41 rotate T Axis1.rotate}
addUserKnob {41 scaling l scale T Axis1.scaling}
addUserKnob {41 uniform_scale l "shadow length scale" T Axis1.uniform_scale}
addUserKnob {41 skew T Axis1.skew}
addUserKnob {41 pivot +INVISIBLE T Axis1.pivot}
addUserKnob {20 endGroup_1 l endGroup n -1}
addUserKnob {20 colourTweaks l Image n 1}
colourTweaks 0
addUserKnob {41 GodRaysProjectorVolumeKernel_EnableSourceDarken l "darken at source" t "this exponentially darkens the planes at the source, this is useful for when bunched up planes/pixels cause very bright values\n" T BlinkScript1.GodRaysProjectorVolumeKernel_EnableSourceDarken}
addUserKnob {41 clampAlpha l "clamp alpha" -STARTLINE T Clamp1.clampAlpha}
addUserKnob {41 GodRaysProjectorVolumeKernel_fromColour l "from colour" T BlinkScript1.GodRaysProjectorVolumeKernel_fromColour}
addUserKnob {41 GodRaysProjectorVolumeKernel_toColour l "to colour" T BlinkScript1.GodRaysProjectorVolumeKernel_toColour}
addUserKnob {41 GodRaysProjectorVolumeKernel_toFromGamma l gamma T BlinkScript1.GodRaysProjectorVolumeKernel_toFromGamma}
addUserKnob {26 ""}
addUserKnob {41 size l "gaussian blur size" T Blur1.size}
addUserKnob {41 blurShadow l "blur shadow" -STARTLINE T Blur1.blurShadow}
addUserKnob {41 parallelScaleBlur l "parallel scale blur" T GodRays1.parallelScaleBlur}
addUserKnob {41 bidirectional -STARTLINE T GodRays1.bidirectional}
addUserKnob {20 endGroup_2 l endGroup n -1}
addUserKnob {20 shadowSettings l Shadow n 1}
shadowSettings 0
addUserKnob {41 in l "position data" T Shuffle1.in}
addUserKnob {41 in_1 l "normals data" T Shuffle2.in}
addUserKnob {41 enableShadow l "enable shadow" T Merge1.enableShadow}
addUserKnob {41 useCustomShadowMask l "use custom shadow mask" t "this bypasses the position and normals processing and intead uses the alpha channel straight from the shadow input" -STARTLINE T Switch3.useCustomShadowMask}
addUserKnob {41 mix l "stencil amount" T Merge1.mix}
addUserKnob {41 scale_1 l scale T GodRays5.scale}
addUserKnob {41 from_color l "from color" T GodRays5.from_color}
addUserKnob {41 to_color l "to color" T GodRays5.to_color}
addUserKnob {41 gamma T GodRays5.gamma}
addUserKnob {41 steps T GodRays5.steps}
addUserKnob {41 max -STARTLINE T GodRays5.max}
addUserKnob {41 size_1 l "shadow blur size" T Blur4.size}
addUserKnob {26 ""}
addUserKnob {41 blackpoint l "facing mask blackpoint" t "this controls the falloff of the mask created using the facing angle of an object to the camera" T Grade2.blackpoint}
addUserKnob {41 whitepoint l "facing mask whitepoint" t "this controls the falloff of the mask created using the facing angle of an object to the camera" T Grade2.whitepoint}
addUserKnob {26 ""}
addUserKnob {41 useVolumeDepth l "depth region override" t "this overrides the near/far values of the projection when selecting the region of the position data used to generate a shadow" T BlinkScript2.useVolumeDepth}
addUserKnob {41 nearDepth l "near depth" T BlinkScript2.nearDepth}
addUserKnob {41 farDepth l "far depth" T BlinkScript2.farDepth}
addUserKnob {20 endGroup_3 l endGroup n -1}
addUserKnob {26 _1 l "" +STARTLINE}
addUserKnob {26 credit l "" +STARTLINE T "Chris Fryer | 2021"}
addUserKnob {20 About}
addUserKnob {26 info l "" +STARTLINE T "v1.1 - 03.03.21\n\n- complete rebuild\n- 4 point approximation no longer available\n- input scale option for speed/quality control\n- card placement math no longer breaks under certain angles or behind camera\n- shadow functionality added\n- camera input now uses DummyCam, this allows for non-topnode compliant methods (Axis inputs etc..)\n- 3D noise transform, no longer inverted\n- labels on most knobs\n- code now commented for those learning Blinkscript\n- to/from now functions for RGBA\n- added weight option to skew virtual card placement\n- far card now matches far distance exactly\n- edge pixels no longer wrong"}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x191b8eff
label DEEP
note_font "Verdana Bold"
note_font_size 60
xpos -592
ypos 75
bdwidth 357
bdheight 812
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0xc69548ff
label "VOLUME PROJECTION"
note_font "Verdana Bold"
note_font_size 60
xpos 188
ypos -80
bdwidth 208
bdheight 621
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0x3f3f3fff
label SHADOW
note_font "Verdana Bold"
note_font_size 60
xpos 938
ypos -66
bdwidth 324
bdheight 717
}
BackdropNode {
inputs 0
name BackdropNode4
tile_color 0xaa1d1dff
label "CAMERA INPUTS"
note_font "Verdana Bold"
note_font_size 42
xpos -43
ypos -121
bdwidth 196
bdheight 195
}
Input {
inputs 0
name img
xpos 254
ypos 28
}
Reformat {
type scale
pbb true
name Reformat1
label "image scaling"
selected true
xpos 254
ypos 92
disable {{"scale == 1"}}
}
set N61f01de0 [stack 0]
Input {
inputs 0
name shadow
xpos 1039
ypos 21
number 3
}
Reformat {
type scale
box_width {{Reformat1.input0.width}}
box_height {{Reformat1.input0.height}}
scale {{parent.Reformat1.scale} {parent.Reformat1.scale}}
filter notch
name Reformat3
xpos 1039
ypos 58
disable {{parent.Reformat1.disable}}
}
CopyBBox {
inputs 2
name CopyBBox1
xpos 1039
ypos 98
}
Dot {
name Dot10
xpos 1073
ypos 155
}
set N61f311b0 [stack 0]
Dot {
name Dot14
xpos 996
ypos 155
}
set N61f36b10 [stack 0]
Dot {
name Dot18
xpos 951
ypos 155
}
GodRays {
channels alpha
scale 2
center {{parent.GodRays1.center} {parent.GodRays1.center}}
to_color 0
steps 10
max true
name GodRays6
xpos 917
ypos 462
disable {{scale==1}}
}
Dot {
name Dot17
xpos 951
ypos 568
}
push $N61f311b0
Shuffle {
in none
name Shuffle1
label "Position Data"
xpos 1039
ypos 184
}
Remove {
operation keep
channels rgba
name Remove2
xpos 1039
ypos 222
}
BlinkScript {
recompileCount 134
ProgramGroup 1
KernelDescription "2 \"PositionInFrustrumKernel\" iterate pixelWise 62c3f92d35daef6caeb6bf3bb07a8403333e7c6da2c2f19b3e5542cb00358efa 2 \"src\" Read Point \"dst\" Write Random 6 \"projCamMatrix\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"projCamFocal\" Float 1 AAAAAA== \"projCamHaperture\" Float 1 AAAAAA== \"projCamVaperture\" Float 1 AAAAAA== \"depthMin\" Float 1 AAAAAA== \"depthMax\" Float 1 AAAAAA== 6 \"projCamMatrix\" 16 1 \"projCamFocal\" 1 1 \"projCamHaperture\" 1 1 \"projCamVaperture\" 1 1 \"depthMin\" 1 1 \"depthMax\" 1 1 2 \"resolution\" Float 2 1 AAAAAAAAAAA= \"posData\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA=="
kernelSource "inline float4 matrixTransform(float4 image, float4x4 matrix)\{\n\n    float4 matrixTransformsOutput;\n\n    matrixTransformsOutput.x = image.x * matrix\[0]\[0] + image.y * matrix\[0]\[1] + image.z * matrix\[0]\[2] + matrix\[0]\[3];\n    matrixTransformsOutput.y = image.x * matrix\[1]\[0] + image.y * matrix\[1]\[1] + image.z * matrix\[1]\[2] + matrix\[1]\[3];\n    matrixTransformsOutput.z = image.x * matrix\[2]\[0] + image.y * matrix\[2]\[1] + image.z * matrix\[2]\[2] + matrix\[2]\[3];\n    matrixTransformsOutput.w = image.x * matrix\[3]\[0] + image.y * matrix\[3]\[1] + image.z * matrix\[3]\[2] + matrix\[3]\[3];\n\n\n    return matrixTransformsOutput;\n\n\}\n\ninline float4 matrixToScreenspace(float4 image, float focal, float haperture, float vaperture, int2 resolution)\{\n\n    image.x = 0.5f - ((image.x) * (focal/haperture))/image.z;\n    image.y = 0.5f - ((image.y) * (focal/vaperture))/image.z;\n    image.z = -image.z;\n\n    image.x = image.x*(resolution.x)-1.0f;\n    image.y = image.y*(resolution.y)-1.0f;\n\n\n    return image;\n\n\}\n\n\n\nkernel PositionInFrustrumKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src; // the input image\n  Image<eWrite, eAccessRandom> dst; // the output image\n\n  param:\n\n    //projection cam world matrix\n    float4x4 projCamMatrix;\n\n    //projection cam settings\n    float projCamFocal;\n    float projCamHaperture;\n    float projCamVaperture;\n\n    //distance of card from camera\n    float depthMin;\n    float depthMax;\n\n  local:\n\n    float2 resolution;\n    float4 posData;    \n\n  void define() \{\n    \n  \}\n\n  void init() \{\n\n    //defining resolution\n    resolution.x = src.bounds.width();\n    resolution.y = src.bounds.height();    \n    \n  \}\n\n  void process(int2 pos) \{ \n        \n\n    posData = src();\n\n    //transforming card using projection cam\n    posData = matrixTransform(posData, projCamMatrix.invert());\n    \n    //creating screenspace UV coordinates using projection cam data\n    posData = matrixToScreenspace(posData, projCamFocal, projCamHaperture, projCamVaperture, resolution);\n\n    posData.x = posData.x >= 0.0f     && posData.x <= resolution.x-1 ? 1 : 0;\n    posData.y = posData.y >= 0.0f     && posData.y <= resolution.y-1 ? 1 : 0;\n    posData.z = posData.z >= depthMin && posData.z <= depthMax       ? 1 : 0;\n\n    posData.w = posData.x * posData.y * posData.z;\n    \n    \n\n    dst(pos.x, pos.y) = posData;       \n\n\n    \n\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript1.useGPUIfAvailable}}
vectorize {{parent.BlinkScript1.vectorize}}
rebuild ""
PositionInFrustrumKernel_projCamMatrix {
    {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix}}
    {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix}}
    {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix}}
    {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix}}
  }
PositionInFrustrumKernel_projCamFocal {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamFocal}}
PositionInFrustrumKernel_projCamHaperture {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamHaperture}}
PositionInFrustrumKernel_projCamVaperture {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamVaperture}}
PositionInFrustrumKernel_depthMin {{"useVolumeDepth ? nearDepth : parent.BlinkScript1.GodRaysProjectorVolumeKernel_depthMin "}}
PositionInFrustrumKernel_depthMax {{"useVolumeDepth ? farDepth : parent.BlinkScript1.GodRaysProjectorVolumeKernel_depthMax"}}
rebuild_finalise ""
name BlinkScript2
xpos 1039
ypos 286
addUserKnob {20 User}
addUserKnob {7 nearDepth l "shadow region near" R 0 100}
nearDepth 1
addUserKnob {7 farDepth l "shadow region far" R 0 100}
farDepth 10
addUserKnob {6 useVolumeDepth l "shadow depth override" +STARTLINE}
}
Dot {
name Dot19
xpos 1073
ypos 342
}
set N61f719d0 [stack 0]
Dot {
name Dot21
xpos 1158
ypos 342
}
Dot {
name Dot20
xpos 1158
ypos 482
}
push $N61f311b0
Dot {
name Dot11
xpos 1202
ypos 155
}
Shuffle {
in none
name Shuffle2
label "Normals Data"
xpos 1168
ypos 185
}
Remove {
operation keep
channels rgba
name Remove3
xpos 1168
ypos 223
}
ColorMatrix {
matrix {
    {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix.0} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix.1} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix.2}}
    {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix.4} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix.5} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix.6}}
    {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix.8} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix.9} {parent.BlinkScript1.GodRaysProjectorVolumeKernel_projCamMatrix.10}}
  }
invert true
name ColorMatrix1
xpos 1168
ypos 262
}
Grade {
white_clamp true
name Grade2
xpos 1168
ypos 288
}
Dot {
name Dot12
xpos 1202
ypos 517
}
push $N61f36b10
Dot {
name Dot13
xpos 996
ypos 411
}
push $N61f719d0
ChannelMerge {
inputs 2
operation multiply
name ChannelMerge2
xpos 1039
ypos 394
}
GodRays {
channels alpha
scale 2
center {{parent.GodRays1.center} {parent.GodRays1.center}}
to_color 0
steps 10
max true
name GodRays5
xpos 1039
ypos 462
disable {{scale==1}}
}
ChannelMerge {
inputs 2+1
A rgba.blue
operation stencil
bbox A
name ChannelMerge1
xpos 1039
ypos 500
}
Switch {
inputs 2
which {{useCustomShadowMask}}
name Switch3
xpos 1039
ypos 564
addUserKnob {20 User}
addUserKnob {6 useCustomShadowMask l "use custom shadow mask" +STARTLINE}
}
Blur {
channels rgba
name Blur4
xpos 1039
ypos 590
disable {{"size == 0"}}
}
Blur {
channels rgba
size {{parent.Blur1.size}}
name Blur2
xpos 1039
ypos 616
disable {{"max(1-parent.Blur1.blurShadow, Blur1.disable )"}}
addUserKnob {20 User}
addUserKnob {6 blurShadow l "blur shadow" +STARTLINE}
}
Dot {
name Dot15
xpos 1073
ypos 660
}
set N61e3c260 [stack 0]
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle3
tile_color 0xffffff00
xpos 1039
ypos 745
}
Reformat {
type "to box"
box_width {{Reformat1.input0.width}}
box_height {{Reformat1.input0.height}}
box_fixed true
scale {{1/parent.Reformat1.scale} {1/parent.Reformat1.scale}}
filter notch
name Reformat4
xpos 1039
ypos 822
disable {{parent.Reformat1.disable}}
}
Dot {
name Dot16
xpos 1073
ypos 965
}
push $N61e3c260
push $N61f01de0
Dot {
name Dot4
xpos 288
ypos 155
}
set N61e69f30 [stack 0]
BlinkScript {
recompileCount 199
ProgramGroup 1
KernelDescription "2 \"GodRaysProjectorVolumeKernel\" iterate pixelWise c90547bcdf11f7b781348ba43735748059cb3e7f197f04c35f90a8e587e83036 2 \"src\" Read Point \"dst\" Write Random 24 \"renderCamMatrix\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"renderCamFocal\" Float 1 AAAAAA== \"renderCamHaperture\" Float 1 AAAAAA== \"renderCamVaperture\" Float 1 AAAAAA== \"projCamMatrix\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"projCamFocal\" Float 1 AAAAAA== \"projCamHaperture\" Float 1 AAAAAA== \"projCamVaperture\" Float 1 AAAAAA== \"depthMin\" Float 1 AAAAAA== \"depthMax\" Float 1 AAAAAA== \"iterations\" Int 1 AAAAAA== \"projDistSkew\" Float 1 AAAAAA== \"EnableSourceDarken\" Bool 1 AA== \"NoiseOctaves\" Float 1 AAAAAA== \"NoisePersistence\" Float 1 AAAAAA== \"NoiseScale\" Float 1 AAAAAA== \"NoiseSeed\" Float 1 AAAAAA== \"NoiseGamma\" Float 1 AAAAAA== \"axisMatrix\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"EnableNoise\" Bool 1 AA== \"NoiseMix\" Float 1 AAAAAA== \"toColour\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"fromColour\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== \"toFromGamma\" Float 4 AAAAAAAAAAAAAAAAAAAAAA== 24 \"renderCamMatrix\" 16 1 \"renderCamFocal\" 1 1 \"renderCamHaperture\" 1 1 \"renderCamVaperture\" 1 1 \"projCamMatrix\" 16 1 \"projCamFocal\" 1 1 \"projCamHaperture\" 1 1 \"projCamVaperture\" 1 1 \"depthMin\" 1 1 \"depthMax\" 1 1 \"iterations\" 1 1 \"projDistSkew\" 1 1 \"EnableSourceDarken\" 1 1 \"NoiseOctaves\" 1 1 \"NoisePersistence\" 1 1 \"NoiseScale\" 1 1 \"NoiseSeed\" 1 1 \"NoiseGamma\" 1 1 \"axisMatrix\" 16 1 \"EnableNoise\" 1 1 \"NoiseMix\" 1 1 \"toColour\" 4 1 \"fromColour\" 4 1 \"toFromGamma\" 4 1 7 \"resolution\" Float 2 1 AAAAAAAAAAA= \"nearPosData\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA== \"farPosData\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA== \"posData\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA== \"imageMult\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA== \"NoisePosData\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA== \"cardInfo\" Float 2 1 AAAAAAAAAAA="
kernelSource "inline float4 matrixTransform(float4 image, float4x4 matrix)\{\n\n    float4 matrixTransformsOutput;\n\n    matrixTransformsOutput.x = image.x * matrix\[0]\[0] + image.y * matrix\[0]\[1] + image.z * matrix\[0]\[2] + matrix\[0]\[3];\n    matrixTransformsOutput.y = image.x * matrix\[1]\[0] + image.y * matrix\[1]\[1] + image.z * matrix\[1]\[2] + matrix\[1]\[3];\n    matrixTransformsOutput.z = image.x * matrix\[2]\[0] + image.y * matrix\[2]\[1] + image.z * matrix\[2]\[2] + matrix\[2]\[3];\n    matrixTransformsOutput.w = image.x * matrix\[3]\[0] + image.y * matrix\[3]\[1] + image.z * matrix\[3]\[2] + matrix\[3]\[3];\n\n\n    return matrixTransformsOutput;\n\n\}\n\ninline float4 matrixToScreenspace(float4 image, float focal, float haperture, float vaperture, int2 resolution)\{\n\n    image.x = 0.5f - ((image.x) * (focal/haperture))/image.z;\n    image.y = 0.5f - ((image.y) * (focal/vaperture))/image.z;\n    image.z = -image.z;\n\n    image.x = image.x * (resolution.x) - 1.0f;\n    image.y = image.y * (resolution.y) - 1.0f;\n\n    return image;\n\n\}\n\n//Based on https://github.com/Draradech/csworldgen/blob/master/simplexnoise.cpp\n//Ported by Mads Hagbarth Lund 2014\n\n/* Copyright (c) 2007-2012 Eliot Eshelman\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License as published by\n * the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program. If not, see <http://www.gnu.org/licenses/>.\n *\n */\n\n\nint fastfloor( const float x ) \{ return x > 0 ? (int) x : (int) x - 1; \}\ninline float raw_noise_4d( const float x, const float y, const float z, const float w ) \n\{\nint simplex\[64]\[4] = \{\n    \{0,1,2,3\},\{0,1,3,2\},\{0,0,0,0\},\{0,2,3,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,2,3,0\},\n    \{0,2,1,3\},\{0,0,0,0\},\{0,3,1,2\},\{0,3,2,1\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{1,3,2,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{1,2,0,3\},\{0,0,0,0\},\{1,3,0,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,3,0,1\},\{2,3,1,0\},\n    \{1,0,2,3\},\{1,0,3,2\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{2,0,3,1\},\{0,0,0,0\},\{2,1,3,0\},\n    \{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\n    \{2,0,1,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,0,1,2\},\{3,0,2,1\},\{0,0,0,0\},\{3,1,2,0\},\n    \{2,1,0,3\},\{0,0,0,0\},\{0,0,0,0\},\{0,0,0,0\},\{3,1,0,2\},\{0,0,0,0\},\{3,2,0,1\},\{3,2,1,0\}\n\};\n    int perm\[512] = \{\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180,\n\n        151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,\n        8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,\n        35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,\n        134,139,48,27,166,77,146,158,231,83,111,229,122,60,211,133,230,220,105,92,41,\n        55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208, 89,\n        18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,\n        250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,\n        189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,\n        172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,\n        228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,\n        107,49,192,214,31,181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,\n        138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180\n    \};\n   int grad4\[32]\[4]= \{\n    \{0,1,1,1\},  \{0,1,1,-1\},  \{0,1,-1,1\},  \{0,1,-1,-1\},\n    \{0,-1,1,1\}, \{0,-1,1,-1\}, \{0,-1,-1,1\}, \{0,-1,-1,-1\},\n    \{1,0,1,1\},  \{1,0,1,-1\},  \{1,0,-1,1\},  \{1,0,-1,-1\},\n    \{-1,0,1,1\}, \{-1,0,1,-1\}, \{-1,0,-1,1\}, \{-1,0,-1,-1\},\n    \{1,1,0,1\},  \{1,1,0,-1\},  \{1,-1,0,1\},  \{1,-1,0,-1\},\n    \{-1,1,0,1\}, \{-1,1,0,-1\}, \{-1,-1,0,1\}, \{-1,-1,0,-1\},\n    \{1,1,1,0\},  \{1,1,-1,0\},  \{1,-1,1,0\},  \{1,-1,-1,0\},\n    \{-1,1,1,0\}, \{-1,1,-1,0\}, \{-1,-1,1,0\}, \{-1,-1,-1,0\}\n   \};\n    float F4 = (sqrt(5.0f)-1.0)/4.0;\n    float G4 = (5.0-sqrt(5.0f))/20.0;\n    float n0, n1, n2, n3, n4;\n    float s = (x + y + z + w) * F4;\n    int i = fastfloor(x + s);\n    int j = fastfloor(y + s);\n    int k = fastfloor(z + s);\n    int l = fastfloor(w + s);\n    float t = (i + j + k + l) * G4;\n    float X0 = i - t;\n    float Y0 = j - t;\n    float Z0 = k - t;\n    float W0 = l - t;\n\n    float x0 = x - X0;\n    float y0 = y - Y0;\n    float z0 = z - Z0;\n    float w0 = w - W0;\n    int c1 = (x0 > y0) ? 32 : 0;\n    int c2 = (x0 > z0) ? 16 : 0;\n    int c3 = (y0 > z0) ? 8 : 0;\n    int c4 = (x0 > w0) ? 4 : 0;\n    int c5 = (y0 > w0) ? 2 : 0;\n    int c6 = (z0 > w0) ? 1 : 0;\n    int c = c1 + c2 + c3 + c4 + c5 + c6;\n\n    int i1, j1, k1, l1;\n    int i2, j2, k2, l2;\n    int i3, j3, k3, l3;\n    i1 = simplex\[c]\[0]>=3 ? 1 : 0;\n    j1 = simplex\[c]\[1]>=3 ? 1 : 0;\n    k1 = simplex\[c]\[2]>=3 ? 1 : 0;\n    l1 = simplex\[c]\[3]>=3 ? 1 : 0;\n    i2 = simplex\[c]\[0]>=2 ? 1 : 0;\n    j2 = simplex\[c]\[1]>=2 ? 1 : 0;\n    k2 = simplex\[c]\[2]>=2 ? 1 : 0;\n    l2 = simplex\[c]\[3]>=2 ? 1 : 0;\n    i3 = simplex\[c]\[0]>=1 ? 1 : 0;\n    j3 = simplex\[c]\[1]>=1 ? 1 : 0;\n    k3 = simplex\[c]\[2]>=1 ? 1 : 0;\n    l3 = simplex\[c]\[3]>=1 ? 1 : 0;\n    float x1 = x0 - i1 + G4;\n    float y1 = y0 - j1 + G4;\n    float z1 = z0 - k1 + G4;\n    float w1 = w0 - l1 + G4;\n    float x2 = x0 - i2 + 2.0*G4;\n    float y2 = y0 - j2 + 2.0*G4;\n    float z2 = z0 - k2 + 2.0*G4;\n    float w2 = w0 - l2 + 2.0*G4;\n    float x3 = x0 - i3 + 3.0*G4;\n    float y3 = y0 - j3 + 3.0*G4;\n    float z3 = z0 - k3 + 3.0*G4;\n    float w3 = w0 - l3 + 3.0*G4;\n    float x4 = x0 - 1.0 + 4.0*G4;\n    float y4 = y0 - 1.0 + 4.0*G4;\n    float z4 = z0 - 1.0 + 4.0*G4;\n    float w4 = w0 - 1.0 + 4.0*G4;\n    int ii = i & 255;\n    int jj = j & 255;\n    int kk = k & 255;\n    int ll = l & 255;\n    int gi0 = perm\[ii+perm\[jj+perm\[kk+perm\[ll]]]] % 32;\n    int gi1 = perm\[ii+i1+perm\[jj+j1+perm\[kk+k1+perm\[ll+l1]]]] % 32;\n    int gi2 = perm\[ii+i2+perm\[jj+j2+perm\[kk+k2+perm\[ll+l2]]]] % 32;\n    int gi3 = perm\[ii+i3+perm\[jj+j3+perm\[kk+k3+perm\[ll+l3]]]] % 32;\n    int gi4 = perm\[ii+1+perm\[jj+1+perm\[kk+1+perm\[ll+1]]]] % 32;\n    float t0 = 0.6 - x0*x0 - y0*y0 - z0*z0 - w0*w0;\n    if(t0<0) n0 = 0.0;\n    else \{\n        t0 *= t0;\n        n0 = t0 * t0 * dot(float4(grad4\[gi0]\[0],grad4\[gi0]\[2],grad4\[gi0]\[3],grad4\[gi0]\[3]), float4(x0, y0, z0, w0));\n    \}\n    float t1 = 0.6 - x1*x1 - y1*y1 - z1*z1 - w1*w1;\n    if(t1<0) n1 = 0.0;\n    else \{\n        t1 *= t1;\n        n1 = t1 * t1 * dot(float4(grad4\[gi1]\[0],grad4\[gi1]\[2],grad4\[gi1]\[3],grad4\[gi1]\[3]), float4(x1, y1, z1, w1));\n    \}\n    float t2 = 0.6 - x2*x2 - y2*y2 - z2*z2 - w2*w2;\n    if(t2<0) n2 = 0.0;\n    else \{\n        t2 *= t2;\n        n2 = t2 * t2 * dot(float4(grad4\[gi2]\[0],grad4\[gi2]\[2],grad4\[gi2]\[3],grad4\[gi2]\[3]), float4(x2, y2, z2, w2));\n    \}\n    float t3 = 0.6 - x3*x3 - y3*y3 - z3*z3 - w3*w3;\n    if(t3<0) n3 = 0.0;\n    else \{\n        t3 *= t3;\n        n3 = t3 * t3 * dot(float4(grad4\[gi3]\[0],grad4\[gi3]\[2],grad4\[gi3]\[3],grad4\[gi3]\[3]), float4(x3, y3, z3, w3));\n    \}\n    float t4 = 0.6 - x4*x4 - y4*y4 - z4*z4 - w4*w4;\n    if(t4<0) n4 = 0.0;\n    else \{\n        t4 *= t4;\n        n4 = t4 * t4 * dot(float4(grad4\[gi4]\[0],grad4\[gi4]\[2],grad4\[gi4]\[3],grad4\[gi4]\[3]), float4(x4, y4, z4, w4));\n    \}\n    return 27.0 * (n0 + n1 + n2 + n3 + n4);\n\}\n\ninline float octave_noise_4d( const float octaves, const float persistence, const float scale, const float x, const float y, const float z, const float w ) \n\{\n    float total = 0;\n    float frequency = scale;\n    float amplitude = 1;\n    float maxAmplitude = 0;\n    for( int i=0; i < octaves; i++ ) \{\n        total += (float)raw_noise_4d( x * frequency, y * frequency, z * frequency, w * frequency ) * amplitude;\n\n        frequency *= 2;\n        maxAmplitude += amplitude;\n        amplitude *= persistence;\n    \}\n    return float(total / maxAmplitude);\n\}\n\nkernel GodRaysProjectorVolumeKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src; // the input image\n  Image<eWrite, eAccessRandom, eEdgeNone> dst; // the output image\n\n  param:\n\n    //projection cam world matrix\n    float4x4 renderCamMatrix;\n\n    //projection cam settings\n    float renderCamFocal;\n    float renderCamHaperture;\n    float renderCamVaperture;\n\n\n    //projection cam world matrix\n    float4x4 projCamMatrix;\n\n    //projection cam settings\n    float projCamFocal;\n    float projCamHaperture;\n    float projCamVaperture;\n\n    //distance of card from camera\n    float depthMin;\n    float depthMax;\n\n    //number of samples\n    int iterations;\n    float projDistSkew;\n\n    //darken at source\n    bool EnableSourceDarken;\n\n    //4D noise settings\n    float NoiseOctaves;\n    float NoisePersistence; \n    float NoiseScale; \n    float NoiseSeed;\n    float NoiseGamma;\n    float4x4 axisMatrix;\n    bool EnableNoise;\n    float NoiseMix;\n\n    //to, from, gamma\n    float4 toColour;\n    float4 fromColour;\n    float4 toFromGamma;\n\n\n  local:\n\n    float2 resolution;\n    \n    float4 nearPosData;\n    float4 farPosData;\n    float4 posData;\n\n    float4 imageMult;\n    float4 NoisePosData;\n    float2 cardInfo;\n    \n\n  void define() \{\n    \n  \}\n\n  void init() \{\n\n    //defining resolution\n    resolution.x = src.bounds.width();\n    resolution.y = src.bounds.height();      \n    \n  \}\n\n  void process(int2 pos) \{\n    \n    float NoiseOutput;\n\n    //uses camera information to create virtual card\n    cardInfo.x = ((((pos.x+.5f))/resolution.x-.5f)*projCamHaperture/projCamFocal);\n    cardInfo.y = ((((pos.y+.5f))/resolution.y-.5f)*(resolution.y/resolution.x)*projCamHaperture/projCamFocal);\n\n    //creating near virtual card\n    nearPosData.x = cardInfo.x*depthMin;\n    nearPosData.y = cardInfo.y*depthMin;\n    nearPosData.z = -depthMin;  \n\n    //creating far virtual card\n    farPosData.x = cardInfo.x*depthMax;\n    farPosData.y = cardInfo.y*depthMax;\n    farPosData.z = -depthMax; \n\n\n    //looping for each iterations\n    for(int i = 0; i < iterations; i++)\{\n\n      //iterating from min to max deep over time\n      posData = iterations == 1 ? nearPosData : nearPosData + (farPosData - nearPosData)*pow(float(i)/(iterations-1.0f),projDistSkew);           \n\n      //transforming card using projection cam\n      posData = matrixTransform(posData, projCamMatrix);\n\n      //calculating 4D noise\n      if(EnableNoise == 1)\{\n        NoisePosData = matrixTransform(posData, axisMatrix.invert());\n\n        NoiseOutput = octave_noise_4d(NoiseOctaves, NoisePersistence, NoiseScale, NoisePosData.x, NoisePosData.y, NoisePosData.z, NoiseSeed); \n        NoiseOutput = (NoiseOutput+1.0f)/2.0f;\n      \}\n\n      //transforming card using render cam\n      posData = matrixTransform(posData, renderCamMatrix.invert());\n\n      //creating screenspace UV coordinates using render cam data\n      posData = matrixToScreenspace(posData, renderCamFocal, renderCamHaperture, renderCamVaperture, resolution);\n\n            \n      //multiplier for output image\n      imageMult = 1.0f;\n\n      //4DNoise\n      if(EnableNoise == 1)\{\n        imageMult *= 1.0f+(pow(((NoiseOutput+1.0f)/2.0f), 1.0f/NoiseGamma)-1.0f)*NoiseMix;\n      \}\n\n      //darken at source\n      if(EnableSourceDarken == 1)\{\n        imageMult *= pow((i+1.0f)/iterations,0.5f);\n      \}\n\n      //to-from colour\n      imageMult *= pow((fromColour + (toColour - fromColour)*float(i)/(iterations-1.0f)),1.0f/toFromGamma);\n\n      //iterations average\n      imageMult /= iterations;\n\n      //mults image with modifier \n      imageMult = src()*imageMult;\n\n      //assigns pixel values within image bounds\n      if(posData.x <= (resolution.x) && posData.x >= 0.0f && posData.y <= (resolution.y) && posData.y >= 0.0f) \{  \n        dst(posData.x, posData.y) += imageMult;\n      \}   \n      \n\n    \}\n\n  \}\n\};\n"
useGPUIfAvailable false
rebuild ""
GodRaysProjectorVolumeKernel_renderCamMatrix {
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
  }
GodRaysProjectorVolumeKernel_renderCamFocal {{parent.DummyRenderCam.focal}}
GodRaysProjectorVolumeKernel_renderCamHaperture {{parent.DummyRenderCam.haperture}}
GodRaysProjectorVolumeKernel_renderCamVaperture {{parent.DummyRenderCam.vaperture}}
GodRaysProjectorVolumeKernel_projCamMatrix {
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
  }
GodRaysProjectorVolumeKernel_projCamFocal {{parent.DummyProjCam.focal}}
GodRaysProjectorVolumeKernel_projCamHaperture {{parent.DummyProjCam.haperture x37 0.976}}
GodRaysProjectorVolumeKernel_projCamVaperture {{parent.DummyProjCam.vaperture}}
GodRaysProjectorVolumeKernel_depthMin 1
GodRaysProjectorVolumeKernel_depthMax 10
GodRaysProjectorVolumeKernel_iterations 10
GodRaysProjectorVolumeKernel_projDistSkew 1
GodRaysProjectorVolumeKernel_EnableSourceDarken true
GodRaysProjectorVolumeKernel_NoiseOctaves 1
GodRaysProjectorVolumeKernel_NoisePersistence 0.5
GodRaysProjectorVolumeKernel_NoiseScale 1
GodRaysProjectorVolumeKernel_NoiseGamma 0.25
GodRaysProjectorVolumeKernel_axisMatrix {
    {{parent.Axis1.world_matrix} {parent.Axis1.world_matrix} {parent.Axis1.world_matrix} {parent.Axis1.world_matrix}}
    {{parent.Axis1.world_matrix} {parent.Axis1.world_matrix} {parent.Axis1.world_matrix} {parent.Axis1.world_matrix}}
    {{parent.Axis1.world_matrix} {parent.Axis1.world_matrix} {parent.Axis1.world_matrix} {parent.Axis1.world_matrix}}
    {{parent.Axis1.world_matrix} {parent.Axis1.world_matrix} {parent.Axis1.world_matrix} {parent.Axis1.world_matrix}}
  }
GodRaysProjectorVolumeKernel_NoiseMix 1
GodRaysProjectorVolumeKernel_toColour 1
GodRaysProjectorVolumeKernel_fromColour 1
GodRaysProjectorVolumeKernel_toFromGamma 0.5
rebuild_finalise ""
name BlinkScript1
xpos 254
ypos 220
}
Multiply {
channels rgba
value 4
name Multiply1
xpos 254
ypos 280
disable {{1-parent.BlinkScript1.useGPUIfAvailable}}
}
Clamp {
channels alpha
minimum_enable false
name Clamp1
xpos 254
ypos 306
disable {{1-clampAlpha}}
addUserKnob {20 User}
addUserKnob {6 clampAlpha l "clamp alpha" +STARTLINE}
clampAlpha true
}
GodRays {
channels rgba
scale {{1+parallelScaleBlur}}
center {{parent.Reconcile3D1.output} {parent.Reconcile3D1.output}}
steps 8
name GodRays1
xpos 254
ypos 391
disable {{scale==1}}
addUserKnob {20 User}
addUserKnob {6 bidirectional +STARTLINE}
bidirectional true
addUserKnob {7 parallelScaleBlur l "parallel scale blur"}
}
GodRays {
channels rgba
scale {{1/parent.GodRays1.scale}}
center {{parent.GodRays1.center} {parent.GodRays1.center}}
steps 8
name GodRays2
xpos 254
ypos 417
disable {{"max(parent.GodRays1.disable, 1-GodRays1.bidirectional)" x5 1}}
}
Blur {
channels rgba
name Blur1
xpos 254
ypos 491
disable {{"size == 0"}}
addUserKnob {20 User}
addUserKnob {6 blurShadow l "blur shadow" +STARTLINE}
}
Merge2 {
inputs 2
operation stencil
bbox B
name Merge1
xpos 254
ypos 656
disable {{1-enableShadow}}
addUserKnob {20 User}
addUserKnob {6 enableShadow l "enable shadow" +STARTLINE}
}
Dot {
name Dot3
xpos 288
ypos 709
}
set N61eff970 [stack 0]
Dot {
name Dot2
xpos -291
ypos 709
}
push $N61e69f30
Dot {
name Dot7
xpos -410
ypos 155
}
set N61d0ac70 [stack 0]
Dot {
name Dot8
xpos -548
ypos 155
}
BlinkScript {
recompileCount 149
ProgramGroup 1
KernelDescription "2 \"GodRaysProjectorDeepBackKernel\" iterate pixelWise b2d9280d746340d99b0c7d6e1708f2c867926bf38e3e6d63f84aa6bfe80deed0 2 \"src\" Read Point \"dst\" Write Random 12 \"renderCamMatrix\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"renderCamFocal\" Float 1 AAAAAA== \"renderCamHaperture\" Float 1 AAAAAA== \"renderCamVaperture\" Float 1 AAAAAA== \"projCamMatrix\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"projCamFocal\" Float 1 AAAAAA== \"projCamHaperture\" Float 1 AAAAAA== \"projCamVaperture\" Float 1 AAAAAA== \"depthMin\" Float 1 AAAAAA== \"depthMax\" Float 1 AAAAAA== \"iterations\" Int 1 AAAAAA== \"projDistSkew\" Float 1 AAAAAA== 12 \"renderCamMatrix\" 16 1 \"renderCamFocal\" 1 1 \"renderCamHaperture\" 1 1 \"renderCamVaperture\" 1 1 \"projCamMatrix\" 16 1 \"projCamFocal\" 1 1 \"projCamHaperture\" 1 1 \"projCamVaperture\" 1 1 \"depthMin\" 1 1 \"depthMax\" 1 1 \"iterations\" 1 1 \"projDistSkew\" 1 1 2 \"resolution\" Float 2 1 AAAAAAAAAAA= \"posData\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA=="
kernelSource "inline float4 matrixTransform(float4 image, float4x4 matrix)\{\n\n    float4 matrixTransformsOutput;\n\n    matrixTransformsOutput.x = image.x * matrix\[0]\[0] + image.y * matrix\[0]\[1] + image.z * matrix\[0]\[2] + matrix\[0]\[3];\n    matrixTransformsOutput.y = image.x * matrix\[1]\[0] + image.y * matrix\[1]\[1] + image.z * matrix\[1]\[2] + matrix\[1]\[3];\n    matrixTransformsOutput.z = image.x * matrix\[2]\[0] + image.y * matrix\[2]\[1] + image.z * matrix\[2]\[2] + matrix\[2]\[3];\n    matrixTransformsOutput.w = image.x * matrix\[3]\[0] + image.y * matrix\[3]\[1] + image.z * matrix\[3]\[2] + matrix\[3]\[3];\n\n\n    return matrixTransformsOutput;\n\n\}\n\ninline float4 matrixToScreenspace(float4 image, float focal, float haperture, float vaperture, int2 resolution)\{\n\n    image.x = 0.5f - ((image.x) * (focal/haperture))/image.z;\n    image.y = 0.5f - ((image.y) * (focal/vaperture))/image.z;\n    image.z = -image.z;\n\n    image.x = image.x * (resolution.x) - 1.0f;\n    image.y = image.y * (resolution.y) - 1.0f;\n\n\n    return image;\n\n\}\n\nkernel GodRaysProjectorDeepBackKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src; // the input image\n  Image<eWrite, eAccessRandom> dst; // the output image\n\n  param:\n\n    //projection cam world matrix\n    float4x4 renderCamMatrix;\n\n    //projection cam settings\n    float renderCamFocal;\n    float renderCamHaperture;\n    float renderCamVaperture;\n\n\n    //projection cam world matrix\n    float4x4 projCamMatrix;\n\n    //projection cam settings\n    float projCamFocal;\n    float projCamHaperture;\n    float projCamVaperture;\n\n    //distance of card from camera\n    float depthMin;\n    float depthMax;\n\n    //number of samples\n    int iterations;\n    float projDistSkew;\n\n  local:\n\n    float2 resolution;\n    float4 posData;\n\n  void define() \{\n    \n  \}\n\n  void init() \{\n\n    //defining resolution\n    resolution.x = src.bounds.width();\n    resolution.y = src.bounds.height();   \n    \n  \}\n\n  void process(int2 pos) \{\n    \n    float Z;\n    \n\n\n    //looping for each iterations\n    for(int i = 0; i < iterations; i++)\{\n\n      //iterating from min to max deep over time\n      Z = iterations == 1 ? depthMin : depthMin + (depthMax - depthMin)*pow(float(i)/(iterations-1.0f),projDistSkew);    \n\n      //creating virtual card\n      posData.x = ((((pos.x+.5f))/resolution.x-.5f)*projCamHaperture/projCamFocal)*Z;\n      posData.y = ((((pos.y+.5f))/resolution.y-.5f)*(resolution.y/resolution.x)*projCamHaperture/projCamFocal)*Z;\n      posData.z = -Z;  \n\n      //transforming card using projection cam\n      posData = matrixTransform(posData, projCamMatrix);      \n\n      //transforming card using render cam\n      posData = matrixTransform(posData, renderCamMatrix.invert());\n\n      //creating screenspace UV coordinates using render cam data\n      posData = matrixToScreenspace(posData, renderCamFocal, renderCamHaperture, renderCamVaperture, resolution);        \n\n      //assigns depth data if it is closer than current value\n      if(posData.x <= (resolution.x) && posData.x >= 0.0f && posData.y <= (resolution.y) && posData.y >= 0.0f) \{\n        dst(posData.x, posData.y) = dst(posData.x, posData.y).x == 0.0f || dst(posData.x, posData.y).x < posData.z ? posData.z : dst(posData.x, posData.y).x;  \n      \}\n\n    \}\n\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript1.useGPUIfAvailable}}
vectorize {{parent.BlinkScript1.vectorize}}
rebuild ""
GodRaysProjectorDeepBackKernel_renderCamMatrix {
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
  }
GodRaysProjectorDeepBackKernel_renderCamFocal {{parent.DummyRenderCam.focal}}
GodRaysProjectorDeepBackKernel_renderCamHaperture {{parent.DummyRenderCam.haperture}}
GodRaysProjectorDeepBackKernel_renderCamVaperture {{parent.DummyRenderCam.vaperture}}
GodRaysProjectorDeepBackKernel_projCamMatrix {
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
  }
GodRaysProjectorDeepBackKernel_projCamFocal {{parent.DummyProjCam.focal}}
GodRaysProjectorDeepBackKernel_projCamHaperture {{parent.DummyProjCam.haperture}}
GodRaysProjectorDeepBackKernel_projCamVaperture {{parent.DummyProjCam.vaperture}}
GodRaysProjectorDeepBackKernel_depthMin {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_depthMin}}
GodRaysProjectorDeepBackKernel_depthMax {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_depthMax}}
GodRaysProjectorDeepBackKernel_iterations {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_iterations}}
GodRaysProjectorDeepBackKernel_projDistSkew {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projDistSkew}}
rebuild_finalise ""
name BlinkScript4
label "deep back"
xpos -582
ypos 246
}
Dot {
name Dot6
xpos -548
ypos 362
}
push $N61d0ac70
BlinkScript {
recompileCount 150
ProgramGroup 1
KernelDescription "2 \"GodRaysProjectorDeepFrontKernel\" iterate pixelWise db8732d7db620ffee3a5d75c1843aeeff690d4bc4ef2286e6d3285d82ce4d06f 2 \"src\" Read Point \"dst\" Write Random 12 \"renderCamMatrix\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"renderCamFocal\" Float 1 AAAAAA== \"renderCamHaperture\" Float 1 AAAAAA== \"renderCamVaperture\" Float 1 AAAAAA== \"projCamMatrix\" Float 16 AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA== \"projCamFocal\" Float 1 AAAAAA== \"projCamHaperture\" Float 1 AAAAAA== \"projCamVaperture\" Float 1 AAAAAA== \"depthMin\" Float 1 AAAAAA== \"depthMax\" Float 1 AAAAAA== \"iterations\" Int 1 AAAAAA== \"projDistSkew\" Float 1 AAAAAA== 12 \"renderCamMatrix\" 16 1 \"renderCamFocal\" 1 1 \"renderCamHaperture\" 1 1 \"renderCamVaperture\" 1 1 \"projCamMatrix\" 16 1 \"projCamFocal\" 1 1 \"projCamHaperture\" 1 1 \"projCamVaperture\" 1 1 \"depthMin\" 1 1 \"depthMax\" 1 1 \"iterations\" 1 1 \"projDistSkew\" 1 1 2 \"resolution\" Float 2 1 AAAAAAAAAAA= \"posData\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA=="
kernelSource "inline float4 matrixTransform(float4 image, float4x4 matrix)\{\n\n    float4 matrixTransformsOutput;\n\n    matrixTransformsOutput.x = image.x * matrix\[0]\[0] + image.y * matrix\[0]\[1] + image.z * matrix\[0]\[2] + matrix\[0]\[3];\n    matrixTransformsOutput.y = image.x * matrix\[1]\[0] + image.y * matrix\[1]\[1] + image.z * matrix\[1]\[2] + matrix\[1]\[3];\n    matrixTransformsOutput.z = image.x * matrix\[2]\[0] + image.y * matrix\[2]\[1] + image.z * matrix\[2]\[2] + matrix\[2]\[3];\n    matrixTransformsOutput.w = image.x * matrix\[3]\[0] + image.y * matrix\[3]\[1] + image.z * matrix\[3]\[2] + matrix\[3]\[3];\n\n\n    return matrixTransformsOutput;\n\n\}\n\ninline float4 matrixToScreenspace(float4 image, float focal, float haperture, float vaperture, int2 resolution)\{\n\n    image.x = 0.5f - ((image.x) * (focal/haperture))/image.z;\n    image.y = 0.5f - ((image.y) * (focal/vaperture))/image.z;\n    image.z = -image.z;\n\n    image.x = image.x * (resolution.x) - 1.0f;\n    image.y = image.y * (resolution.y) - 1.0f;\n\n\n    return image;\n\n\}\n\nkernel GodRaysProjectorDeepFrontKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeNone> src; // the input image\n  Image<eWrite, eAccessRandom> dst; // the output image\n\n  param:\n\n    //projection cam world matrix\n    float4x4 renderCamMatrix;\n\n    //projection cam settings\n    float renderCamFocal;\n    float renderCamHaperture;\n    float renderCamVaperture;\n\n\n    //projection cam world matrix\n    float4x4 projCamMatrix;\n\n    //projection cam settings\n    float projCamFocal;\n    float projCamHaperture;\n    float projCamVaperture;\n\n    //distance of card from camera\n    float depthMin;\n    float depthMax;\n\n    //number of samples\n    int iterations;\n    float projDistSkew;\n\n  local:\n\n    float2 resolution;\n    float4 posData;\n\n  void define() \{\n    \n  \}\n\n  void init() \{\n\n    //defining resolution\n    resolution.x = src.bounds.width();\n    resolution.y = src.bounds.height();   \n    \n  \}\n\n  void process(int2 pos) \{\n    \n    float Z;\n    \n\n\n    //looping for each iterations\n    for(int i = 0; i < iterations; i++)\{\n\n      //iterating from min to max deep over time\n      Z = iterations == 1 ? depthMin : depthMin + (depthMax - depthMin)*pow(float(i)/(iterations-1.0f),projDistSkew);    \n\n      //creating virtual card\n      posData.x = ((((pos.x+.5f))/resolution.x-.5f)*projCamHaperture/projCamFocal)*Z;\n      posData.y = ((((pos.y+.5f))/resolution.y-.5f)*(resolution.y/resolution.x)*projCamHaperture/projCamFocal)*Z;\n      posData.z = -Z;  \n\n      //transforming card using projection cam\n      posData = matrixTransform(posData, projCamMatrix);      \n\n      //transforming card using render cam\n      posData = matrixTransform(posData, renderCamMatrix.invert());\n\n      //creating screenspace UV coordinates using render cam data\n      posData = matrixToScreenspace(posData, renderCamFocal, renderCamHaperture, renderCamVaperture, resolution);        \n\n      //assigns depth data if it is closer than current value\n      if(posData.x <= (resolution.x) && posData.x >= 0.0f && posData.y <= (resolution.y) && posData.y >= 0.0f) \{\n        dst(posData.x, posData.y) = dst(posData.x, posData.y).x == 0.0f || dst(posData.x, posData.y).x > posData.z ? posData.z : dst(posData.x, posData.y).x;  \n      \}\n\n    \}\n\n  \}\n\};\n"
useGPUIfAvailable {{parent.BlinkScript1.useGPUIfAvailable}}
vectorize {{parent.BlinkScript1.vectorize}}
rebuild ""
GodRaysProjectorDeepFrontKernel_renderCamMatrix {
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
    {{parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix} {parent.DummyRenderCam.world_matrix}}
  }
GodRaysProjectorDeepFrontKernel_renderCamFocal {{parent.DummyRenderCam.focal}}
GodRaysProjectorDeepFrontKernel_renderCamHaperture {{parent.DummyRenderCam.haperture}}
GodRaysProjectorDeepFrontKernel_renderCamVaperture {{parent.DummyRenderCam.vaperture}}
GodRaysProjectorDeepFrontKernel_projCamMatrix {
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
    {{parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix} {parent.DummyProjCam.world_matrix}}
  }
GodRaysProjectorDeepFrontKernel_projCamFocal {{parent.DummyProjCam.focal}}
GodRaysProjectorDeepFrontKernel_projCamHaperture {{parent.DummyProjCam.haperture}}
GodRaysProjectorDeepFrontKernel_projCamVaperture {{parent.DummyProjCam.vaperture}}
GodRaysProjectorDeepFrontKernel_depthMin {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_depthMin}}
GodRaysProjectorDeepFrontKernel_depthMax {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_depthMax}}
GodRaysProjectorDeepFrontKernel_iterations {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_iterations}}
GodRaysProjectorDeepFrontKernel_projDistSkew {{parent.BlinkScript1.GodRaysProjectorVolumeKernel_projDistSkew}}
rebuild_finalise ""
name BlinkScript3
label "deep front"
xpos -444
ypos 248
}
Expression {
channel0 none
channel1 none
channel2 none
channel3 alpha
expr3 "r != 0 || g != 0"
name Expression1
xpos -444
ypos 300
}
Copy {
inputs 2
from0 rgba.green
to0 rgba.green
name Copy1
xpos -444
ypos 352
}
Remove {
operation keep
channels {rgba.red rgba.green -rgba.blue rgba.alpha}
name Remove1
xpos -444
ypos 390
}
FilterErode {
channels rgba
size -3
name FilterErode1
xpos -444
ypos 468
disable {{parent.GodRays1.disable x5 1}}
}
GodRays {
channels {rgba.red rgba.green -rgba.blue rgba.alpha}
scale {{parent.GodRays1.scale}}
center {{parent.GodRays1.center} {parent.GodRays1.center}}
steps 8
max true
name GodRays3
xpos -444
ypos 494
disable {{scale==1}}
}
GodRays {
channels {rgba.red rgba.green -rgba.blue rgba.alpha}
scale {{1/parent.GodRays3.scale}}
center {{parent.GodRays1.center} {parent.GodRays1.center}}
steps 8
max true
name GodRays4
xpos -444
ypos 532
disable {{parent.GodRays2.disable x5 1}}
}
Blur {
channels rgba
size {{parent.Blur1.size}}
name Blur3
xpos -444
ypos 588
disable {{parent.Blur1.disable}}
addUserKnob {20 User}
addUserKnob {6 blurShadow l "blur shadow" +STARTLINE}
}
Unpremult {
channels {rgba.red rgba.green -rgba.blue none}
name Unpremult1
xpos -444
ypos 614
disable {{"Blur1.size == 0 "}}
}
DeepFromImage {
premult true
name DeepFromImage1
xpos -444
ypos 661
}
DeepExpression {
chans1 deep
deep.front r
deep.back g
name DeepExpression1
xpos -444
ypos 687
}
Dot {
name Dot5
xpos -410
ypos 793
}
DeepRecolor {
inputs 2
targetInputAlpha true
name DeepRecolor1
xpos -325
ypos 789
}
DeepReformat {
type "to box"
box_width {{Reformat1.input0.width}}
box_height {{Reformat1.input0.height}}
box_fixed true
scale {{1/parent.Reformat1.scale} {1/parent.Reformat1.scale}}
pbb true
name DeepReformat1
xpos -325
ypos 815
disable {{parent.Reformat1.disable}}
}
Dot {
name Dot1
xpos -291
ypos 863
}
push $N61eff970
Reformat {
type "to box"
box_width {{Reformat1.input0.width}}
box_height {{Reformat1.input0.height}}
box_fixed true
scale {{1/parent.Reformat1.scale} {1/parent.Reformat1.scale}}
filter notch
name Reformat2
xpos 254
ypos 782
disable {{parent.Reformat1.disable}}
}
Switch {
inputs 2
which {{"parent.outputMode == 1"}}
name Switch1
label "deep output switch"
xpos 254
ypos 853
}
Switch {
inputs 2
which {{"parent.outputMode == 2"}}
name Switch2
label "shadow only switch"
xpos 254
ypos 961
}
Output {
name Output1
xpos 254
ypos 1101
}
Group {
inputs 0
name GetGPUName
label "This just grabs the GPU name"
xpos 529
ypos 28
disable true
addUserKnob {20 GodRaysProjectorVolumeKernel}
addUserKnob {41 "Local GPU: " T BlinkScript1.gpuName}
addUserKnob {41 "Use GPU if Available" T BlinkScript1.useGPUIfAvailable}
}
Input {
inputs 0
name Input1
xpos 84
ypos 418
}
BlinkScript {
recompileCount 201
ProgramGroup 1
KernelDescription "2 \"BlankKernel\" iterate pixelWise 555f8bedff5787bfff38741a5cf42e9ba1f3e68c81d54c15322b81680fbf2e6e 2 \"src\" Read Point \"dst\" Write Point 0 0 0"
kernelSource "\nkernel BlankKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src; // the input image\n  Image<eWrite> dst; // the output image\n  void process() \{\n    \n    // Write the result to the output image\n    dst() = src();\n  \}\n\};\n"
useGPUIfAvailable false
rebuild ""
rebuild_finalise ""
name BlinkScript1
xpos 84
ypos 478
disable true
}
Output {
name Output1
xpos 84
ypos 558
}
end_group
Axis2 {
inputs 0
name Axis1
label "4D Noise Transform"
xpos 522
ypos 189
}
Input {
inputs 0
name projectionCam
xpos -33
ypos -40
number 2
}
Camera {
projection_mode {{"\[expression \[value the_cam]projection_mode(\[value the_frame])]"}}
focal {{"\[expression \[value the_cam]focal(\[value the_frame])]"}}
haperture {{"\[expression \[value the_cam]haperture(\[value the_frame])]"}}
vaperture {{"\[expression \[value the_cam]vaperture(\[value the_frame])]"}}
near {{"\[expression \[value the_cam]near(\[value the_frame])]"}}
far {{"\[expression \[value the_cam]far(\[value the_frame])]"}}
win_translate {{"\[expression \[value the_cam]win_translate.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_translate.v(\[value the_frame])]"}}
win_scale {{"\[expression \[value the_cam]win_scale.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_scale.v(\[value the_frame])]"}}
winroll {{"\[expression \[value the_cam]winroll(\[value the_frame])]"}}
focal_point {{"\[expression \[value the_cam]focal_point(\[value the_frame])]"}}
fstop {{"\[expression \[value the_cam]fstop(\[value the_frame])]"}}
name DummyProjCam
help "DummyCam by Adrian Pueyo\n\nCamera that apart from the matrices also grabs all the \"Projection\" values from the upstream camera that it's connected to. Turns into a default Camera if no Camera connected. Can also be used inside of groups and gizmos, as many levels deep as you want :D All using live and super fast TCL.\n\nUpdated v1.1: Now grabs the correct frame too (thanks Erwan Leroy for the idea).\n\nadrianpueyo.com, 2019-2020"
onCreate "n = nuke.thisNode()\nfor k in \[\"projection_mode\",\"focal\",\"haperture\",\"vaperture\",\"near\",\"far\",\"win_translate\",\"win_scale\",\"winroll\",\"focal_point\",\"fstop\"]:\n    n\[k].setFlag(0x0000000010000000)"
label projCam
xpos -23
ypos 3
addUserKnob {20 DummyCam l Defaults}
addUserKnob {43 the_cam +INVISIBLE}
the_cam "\[\n#DummyCam v1.1. Updated 5 April 2020.\nset starting_point \"this.input0\"\nset default \"this.d_\"\n\n# If cam has no inputs, return the default.\nif \{\[exists \$starting_point]\} \{\n    set x \[node \$starting_point]\n\} \{ \n    return \$default\n\}\n\nset finished 0\nwhile \{\$finished != 1\} \{\n\n    # First look for a Cam or Input or topnode.\n    while \{\[class \$x] != \"Camera2\" && \[class \$x] != \"Camera\" && \[class \$x] != \"Input\" && \$x != \[topnode \$x]\} \{\n        set x \[node \$x.input0]\n    \}\n\n    # Then, check if node is a cam (and return), and otherwise, if it's an input, see if the parent exists and move to it.\n    if \{\[class \$x]==\"Camera2\"||\[class \$x]==\"Camera\"\} \{\n        set x \[append x \".\"]\n        return \$x\n    \} \{ \n        if \{ \[class \$x]==\"Input\" \} \{ \n            set inp \"\$x.parent.input\"\n            set inputNum \[value \$x.number]\n            set inp \[append inp \$inputNum]\n            if \{ \[exists \$inp] \} \{\n                set x \[node \$inp]\n            \} \{ \n                set finished 1\n            \}\n        \} \{ \n            set finished 1\n        \}\n    \}\n\}\nreturn \$default\n]"
addUserKnob {43 the_frame +INVISIBLE}
the_frame "\[\nset the_camera \[string trimright \[value the_cam] .]\nif \{\[exists \$the_camera]\} \{\n    return \[value \$the_camera.frame]\n\} \{ \n    return \[frame]\n\}\n]"
addUserKnob {4 d_projection_mode l projection M {perspective orthographic uv spherical ""}}
addUserKnob {7 d_focal l "focal length" R 0 100}
d_focal 50
addUserKnob {7 d_haperture l "horiz aperture" R 0 50}
d_haperture 24.576
addUserKnob {7 d_vaperture l "vert aperture" R 0 50}
d_vaperture 18.672
addUserKnob {7 d_near l near R 0 10}
d_near 0.1
addUserKnob {7 d_far l far R 0 10000}
d_far 10000
addUserKnob {30 d_win_translate l "window translate"}
addUserKnob {30 d_win_scale l "window scale"}
d_win_scale {1 1}
addUserKnob {7 d_winroll l "window roll" R 0 45}
addUserKnob {7 d_focal_point l "focal distance" R 0 10}
d_focal_point 2
addUserKnob {7 d_fstop l fstop R 0 30}
d_fstop 16
addUserKnob {26 version l " " t "Updated 5 April 2020" T "<span style=\"color:#666\"><br/><b>DummyCam v1.1</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2019-2020</span>"}
}
Dot {
name Dot9
xpos 1
ypos 324
}
Input {
inputs 0
name renderCam
xpos 63
ypos -41
number 1
}
Camera {
projection_mode {{"\[expression \[value the_cam]projection_mode(\[value the_frame])]"}}
focal {{"\[expression \[value the_cam]focal(\[value the_frame])]"}}
haperture {{"\[expression \[value the_cam]haperture(\[value the_frame])]"}}
vaperture {{"\[expression \[value the_cam]vaperture(\[value the_frame])]"}}
near {{"\[expression \[value the_cam]near(\[value the_frame])]"}}
far {{"\[expression \[value the_cam]far(\[value the_frame])]"}}
win_translate {{"\[expression \[value the_cam]win_translate.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_translate.v(\[value the_frame])]"}}
win_scale {{"\[expression \[value the_cam]win_scale.u(\[value the_frame])]"} {"\[expression \[value the_cam]win_scale.v(\[value the_frame])]"}}
winroll {{"\[expression \[value the_cam]winroll(\[value the_frame])]"}}
focal_point {{"\[expression \[value the_cam]focal_point(\[value the_frame])]"}}
fstop {{"\[expression \[value the_cam]fstop(\[value the_frame])]"}}
name DummyRenderCam
help "DummyCam by Adrian Pueyo\n\nCamera that apart from the matrices also grabs all the \"Projection\" values from the upstream camera that it's connected to. Turns into a default Camera if no Camera connected. Can also be used inside of groups and gizmos, as many levels deep as you want :D All using live and super fast TCL.\n\nUpdated v1.1: Now grabs the correct frame too (thanks Erwan Leroy for the idea).\n\nadrianpueyo.com, 2019-2020"
onCreate "n = nuke.thisNode()\nfor k in \[\"projection_mode\",\"focal\",\"haperture\",\"vaperture\",\"near\",\"far\",\"win_translate\",\"win_scale\",\"winroll\",\"focal_point\",\"fstop\"]:\n    n\[k].setFlag(0x0000000010000000)"
label renderCam
xpos 73
ypos 4
addUserKnob {20 DummyCam l Defaults}
addUserKnob {43 the_cam +INVISIBLE}
the_cam "\[\n#DummyCam v1.1. Updated 5 April 2020.\nset starting_point \"this.input0\"\nset default \"this.d_\"\n\n# If cam has no inputs, return the default.\nif \{\[exists \$starting_point]\} \{\n    set x \[node \$starting_point]\n\} \{ \n    return \$default\n\}\n\nset finished 0\nwhile \{\$finished != 1\} \{\n\n    # First look for a Cam or Input or topnode.\n    while \{\[class \$x] != \"Camera2\" && \[class \$x] != \"Camera\" && \[class \$x] != \"Input\" && \$x != \[topnode \$x]\} \{\n        set x \[node \$x.input0]\n    \}\n\n    # Then, check if node is a cam (and return), and otherwise, if it's an input, see if the parent exists and move to it.\n    if \{\[class \$x]==\"Camera2\"||\[class \$x]==\"Camera\"\} \{\n        set x \[append x \".\"]\n        return \$x\n    \} \{ \n        if \{ \[class \$x]==\"Input\" \} \{ \n            set inp \"\$x.parent.input\"\n            set inputNum \[value \$x.number]\n            set inp \[append inp \$inputNum]\n            if \{ \[exists \$inp] \} \{\n                set x \[node \$inp]\n            \} \{ \n                set finished 1\n            \}\n        \} \{ \n            set finished 1\n        \}\n    \}\n\}\nreturn \$default\n]"
addUserKnob {43 the_frame +INVISIBLE}
the_frame "\[\nset the_camera \[string trimright \[value the_cam] .]\nif \{\[exists \$the_camera]\} \{\n    return \[value \$the_camera.frame]\n\} \{ \n    return \[frame]\n\}\n]"
addUserKnob {4 d_projection_mode l projection M {perspective orthographic uv spherical ""}}
addUserKnob {7 d_focal l "focal length" R 0 100}
d_focal 50
addUserKnob {7 d_haperture l "horiz aperture" R 0 50}
d_haperture 24.576
addUserKnob {7 d_vaperture l "vert aperture" R 0 50}
d_vaperture 18.672
addUserKnob {7 d_near l near R 0 10}
d_near 0.1
addUserKnob {7 d_far l far R 0 10000}
d_far 10000
addUserKnob {30 d_win_translate l "window translate"}
addUserKnob {30 d_win_scale l "window scale"}
d_win_scale {1 1}
addUserKnob {7 d_winroll l "window roll" R 0 45}
addUserKnob {7 d_focal_point l "focal distance" R 0 10}
d_focal_point 2
addUserKnob {7 d_fstop l fstop R 0 30}
d_fstop 16
addUserKnob {26 version l " " t "Updated 5 April 2020" T "<span style=\"color:#666\"><br/><b>DummyCam v1.1</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2019-2020</span>"}
}
push $N61e69f30
Reconcile3D {
inputs 3
calc_output true
name Reconcile3D1
label "calculates the 2D screenspace coordinate of the projection cam"
xpos 63
ypos 307
disable {{parent.GodRays1.disable x1 1}}
}
push $N61f01de0
Viewer {
frame_range 1-100
name Viewer1
xpos 254
ypos 130
}
end_group
push $Nd8cb3e10
Group {
name waterSchmutz
tile_color 0x421010ff
selected true
xpos 43752
ypos -2803
addUserKnob {20 User l waterSchmutz}
addUserKnob {41 cube l boundaries T Cube1.cube}
addUserKnob {26 ""}
addUserKnob {41 translate T Cube1.translate}
addUserKnob {41 rotate T Cube1.rotate}
addUserKnob {26 ""}
addUserKnob {6 spriteView +STARTLINE}
addUserKnob {6 customSpriteSwitch l "custom sprite" -STARTLINE}
addUserKnob {41 start_frame l "start at" T ParticleEmitter3.start_frame}
addUserKnob {7 particleDensity l "particle density"}
particleDensity 1
addUserKnob {41 size T ParticleEmitter3.size}
addUserKnob {41 size_variation l "size range" T ParticleEmitter3.size_variation}
addUserKnob {22 update l "Refresh Particles" T "import random\nnuke.thisNode().knob('seed').setValue( random.randint(1,16384) )" +STARTLINE}
addUserKnob {3 seed -STARTLINE}
seed 12781
addUserKnob {41 to l "wind direction" T ParticleWind1.to}
addUserKnob {6 wrapPart l "wrap particles" +STARTLINE}
wrapPart true
addUserKnob {7 edgefade l "edge fade"}
edgefade 0.4
addUserKnob {26 ""}
addUserKnob {7 tScale l "turbulence scale" R 0 10}
tScale 8
addUserKnob {7 tStrength l "turbulence stregth"}
tStrength 1
addUserKnob {26 ""}
addUserKnob {26 lbl l "" +STARTLINE T "waterSchmutz v1.5"}
addUserKnob {22 btn l DerekVFX.ca T "import os\nimport sys\n\ntry:\n    import subprocess\n    def _run(cmd, shell, wait):\n        opener = subprocess.Popen(cmd, shell=shell)\n        if wait:\n            opener.wait()\n        return opener.pid\nexcept ImportError:\n    import popen2\n    def _run(cmd, shell, wait):\n        opener = popen2.Popen3(cmd)\n        if wait:\n            opener.wait()\n        return opener.pid\n\ndef _open(url, wait=0):\n    if sys.platform == \"darwin\":\n        cmd = \[\"open\", url]\n    elif hasattr(os, \"startfile\"):\n        return os.startfile(url)\n    elif os.environ.has_key(\"KDE_FULL_SESSION\") or os.environ.has_key(\"KDE_MULTIHEAD\") or \\\n        os.environ.has_key(\"GNOME_DESKTOP_SESSION_ID\") or os.environ.has_key(\"GNOME_KEYRING_SOCKET\"):\n        cmd = \[\"xdg-open\", url]\n    else:\n        raise OSError, \"Desktop not supported.\"\n\n    return _run(cmd, 0, wait)\n\n_open('http://www.derekvfx.ca/')" +STARTLINE}
addUserKnob {20 render l renderSettings}
addUserKnob {41 format l "output format" T Reformat3.format}
addUserKnob {41 antialiasing T ScanlineRender1.antialiasing}
addUserKnob {41 overscan T ScanlineRender1.overscan}
addUserKnob {6 proxyRender l "proxy mode" +STARTLINE}
proxyRender true
addUserKnob {6 guiDisable l "GUI Disable" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {41 samples T ScanlineRender1.samples}
addUserKnob {41 shutter T ScanlineRender1.shutter}
addUserKnob {41 stochastic_samples l "stochastic samples" T ScanlineRender1.stochastic_samples}
addUserKnob {20 particleSettings}
addUserKnob {41 format_1 l format T Constant1.format}
addUserKnob {41 first l "frame range" T Constant1.first}
addUserKnob {41 last l "" -STARTLINE T Constant1.last}
addUserKnob {41 start_frame_animation l "start at" T ParticleEmitter3.start_frame_animation}
addUserKnob {41 start_wrap l "limit to range" -STARTLINE T ParticleEmitter3.start_wrap}
addUserKnob {41 frame_advance l advance T ParticleEmitter3.frame_advance}
addUserKnob {41 max_clip_length l "max clip length" -STARTLINE T ParticleEmitter3.max_clip_length}
addUserKnob {26 div l "" +STARTLINE T " "}
addUserKnob {20 spriteSettings n 1}
addUserKnob {41 type T Noise1.type}
addUserKnob {41 size_1 l x/ysize T Noise1.size}
addUserKnob {41 zoffset l z T Noise1.zoffset}
addUserKnob {41 gain T Noise1.gain}
addUserKnob {20 endGroup n -1}
}
Cube {
inputs 0
display wireframe
render_mode wireframe
rows 1
columns 1
cube {-500 0 -500 500 500 500}
pivot_translate {{"abs(cube.x-cube.r)/2+((cube.x<cube.r) ? cube.x : cube.r)"} {"abs(cube.y-cube.t)/2+((cube.y<cube.t) ? cube.y : cube.t)"} {"abs(cube.n-cube.f)/2+((cube.n<cube.f) ? cube.n : cube.f)"}}
name Cube1
tile_color 0xffcc00ff
gl_color 0xff3b00ff
xpos -870
ypos 484
hide_input true
addUserKnob {20 User}
addUserKnob {7 volume}
volume {{abs(cube.x-cube.r)*abs(cube.y-cube.t)*abs(cube.n-cube.f)}}
}
Input {
inputs 0
name customSprite
xpos -879
ypos 210
}
Reformat {
format {{{parent.Constant1.format}}}
resize distort
name Reformat1
xpos -879
ypos 313
}
Constant {
inputs 0
channels rgb
format "128 128 0 0 128 128 1 texture"
last 100
name Constant1
xpos -714
ypos 8
}
Noise {
size 82
zoffset 3.12
gain 0.57
center {1024 576}
name Noise1
xpos -714
ypos 135
}
Roto {
output alpha
replace true
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44800000 x44100000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {px x4483e000
        {xc1db2587 0}
        {x42833332 x4179999c}
        {x41db2586 0}
        {0 xc1db2588}
        {x42e66664 x42826666}
        {0 x41db2588}
        {x41db2586 0}
        {x42833332 x42e59999}
        {xc1db2587 0}
        {0 x41db2588}
        {x417ffff4 x42826666}
        {0 xc1db2588}}}
      {cc
       {f 8192}
       {px x4483e000
        {xc1db2587 0}
        {0 0}
        {x41db2586 0}
        {0 xc1db2588}
        {0 0}
        {0 x41db2588}
        {x41db2586 0}
        {0 0}
        {xc1db2587 0}
        {0 x41db2588}
        {0 0}
        {0 xc1db2588}}}}
     {tx x4483e000 x4260cccc x4280cccd}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44100000 sb 1 ltn x4483e000 ltm x4483e000 tt x40e00000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {1024 576}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
lifetime_start 1055
lifetime_end 1055
motionblur_shutter_offset_type centred
source_black_outside true
name Roto1
xpos -714
ypos 169
}
Blur {
channels alpha
size 23.4
name Blur1
xpos -714
ypos 207
}
Premult {
name Premult2
xpos -714
ypos 245
}
Crop {
box {0 0 128 128}
softness 25.8
name Crop1
xpos -714
ypos 271
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
Switch {
inputs 2
which {{customSpriteSwitch}}
name Switch1
xpos -714
ypos 319
}
set N61a794b0 [stack 0]
Dot {
name Dot1
xpos -422
ypos 323
}
Dot {
name Dot2
xpos -422
ypos 928
}
Input {
inputs 0
name camera
xpos -886
ypos 802
number 1
}
push $N61a794b0
BlendMat {
operation plus
surfaceblend modulate
name BlendMat1
xpos -714
ypos 369
}
push 0
push 0
ParticleEmitter {
inputs 3
emit_from faces
rate {{"frame-start_frame > 0 & frame-start_frame < 2 ? ((Cube1.volume/1000000)*particleDensity) : 0"}}
lifetime inf
velocity 0
size 0.074
size_variation 4
start_wrap true
seed {{parent.seed}}
name ParticleEmitter3
knobChanged 5
xpos -714
ypos 461
disable {{"guiDisable ? \$gui : 0"}}
}
ParticleExpression {
temp_name1 c
temp_expr1 "v(\[value Cube1.cube.x],\[value Cube1.cube.y],\[value Cube1.cube.n])"
temp_name2 b
temp_expr2 "v(\[value Cube1.cube.r],\[value Cube1.cube.t],\[value Cube1.cube.f])"
posexpr v(random*abs(x(c)-x(b))+x(c),random*abs(y(c)-y(b))+y(c),random*abs(z(c)-z(b))+z(c))
posexpr_onlynew true
name spread
xpos -714
ypos 487
disable {{"guiDisable ? \$gui : 0"}}
}
ParticleTurbulence {
strength {{waterSchmutz.tStrength} {strength.x} {strength.x}}
scale {{waterSchmutz.tScale} {scale.x} {scale.x}}
name ParticleTurbulence1
xpos -714
ypos 525
disable {{"guiDisable ? \$gui : 0"}}
}
ParticleWind {
to {5 0 0}
name ParticleWind1
xpos -714
ypos 563
disable {{"guiDisable ? \$gui : 0"}}
}
ParticleExpression {
temp_name1 f
temp_expr1 "v(\[value Cube1.cube.x],\[value Cube1.cube.y],\[value Cube1.cube.n])"
temp_name2 b
temp_expr2 "v(\[value Cube1.cube.r],\[value Cube1.cube.t],\[value Cube1.cube.f])"
temp_name3 poz
temp_expr3 pos
posexpr v(x(poz)>x(b)?x(f):(x(poz)<x(f)?x(b):x(poz)),y(poz)>y(b)?y(f):(y(poz)<y(f)?y(b):y(poz)),z(poz)>z(b)?z(f):(z(poz)<z(f)?z(b):z(poz)))
name ParticleWrapper
xpos -714
ypos 601
disable {{"wrapPart == 0"}}
}
ParticleExpression {
temp_name0 f
temp_expr0 "v(\[value Cube1.cube.x],\[value Cube1.cube.y],\[value Cube1.cube.n])"
temp_name1 b
temp_expr1 "v(\[value Cube1.cube.r],\[value Cube1.cube.t],\[value Cube1.cube.f])"
temp_name2 m
temp_expr2 (abs((v(x(f),y(f),z(f))-v(x(b),y(b),z(b))))/2)+f
temp_name3 fade
temp_expr3 (1-(abs(x(pos)-x(m)))/abs(x(f)-x(m)))*(1-(abs(y(pos)-y(m)))/abs(y(f)-y(m)))*(1-(abs(z(pos)-z(m)))/abs(z(f)-z(m)))
opacityexpr "\[value edgefade] <=0 ? 1 : fade*(1/\[value edgefade])"
name ParticleExpression1
xpos -714
ypos 639
disable {{"edgefade == 0 "}}
}
TransformGeo {
translate {{parent.Cube1.translate} {parent.Cube1.translate} {parent.Cube1.translate}}
rotate {{parent.Cube1.rotate} {parent.Cube1.rotate} {parent.Cube1.rotate}}
pivot_translate {{parent.Cube1.pivot} {parent.Cube1.pivot} {parent.Cube1.pivot}}
name TransformGeo1
xpos -714
ypos 712
}
Constant {
inputs 0
channels rgb
format "128 128 0 0 128 128 1 128x128"
name Constant2
xpos -592
ypos 657
}
Reformat {
resize distort
name Reformat3
xpos -592
ypos 729
}
Reformat {
type scale
scale 0.5
name Reformat2
xpos -592
ypos 802
disable {{"proxyRender == 0"}}
}
add_layer {P P.red P.green P.blue P.alpha}
ScanlineRender {
inputs 3
conservative_shader_sampling false
antialiasing medium
motion_vectors_type distance
output_shader_vectors true
P_channel P
name ScanlineRender1
xpos -714
ypos 802
}
Reformat {
format {{{parent.Reformat3.format}}}
pbb true
name Reformat4
xpos -714
ypos 868
}
Switch {
inputs 2
which {{spriteView}}
name Switch2
xpos -714
ypos 924
}
Output {
name Output1
xpos -714
ypos 976
}
end_group
push $Nd8cb3e10
Group {
name RainMaker
selected true
xpos 43752
ypos -2749
addUserKnob {20 User l RainMaker}
addUserKnob {6 rainonly l "Rain only (No comp)" +STARTLINE}
addUserKnob {6 dropspass l "Use Pre-Rendered Drops input" t "If you have pre-rendered the \"Rain only?\" outpout, you can use this instead of re-siming at rendertime. " +STARTLINE}
addUserKnob {20 globals_1 l Globals n 1}
addUserKnob {7 emissionmulti l "Emission Multiplier"}
emissionmulti 1
addUserKnob {7 res l Resolution t "This controls the resolution for the render of the effect. The default value (0.5) works well in most cases." R 0.25 1}
res 0.5
addUserKnob {41 start_frame l "Big start frame" T ParticleEmitter1.start_frame}
addUserKnob {41 start_frame_1 l "Med start frame" T ParticleEmitter3.start_frame}
addUserKnob {41 start_frame_2 l "Small start frame" T ParticleEmitter2.start_frame}
addUserKnob {41 lifetime T ParticleEmitter1.lifetime}
addUserKnob {7 ygravity l "Y Gravity Component" R -1 1}
ygravity -1
addUserKnob {7 xgravity l "X Gravity Component" R -1 1}
addUserKnob {20 endGroup_2 l endGroup n -1}
addUserKnob {20 particles l Particles n 1}
particles 0
addUserKnob {6 bigenabled l Big? +STARTLINE}
bigenabled true
addUserKnob {6 medenabled l Medium? -STARTLINE}
medenabled true
addUserKnob {6 smalenabled l Small? -STARTLINE}
smalenabled true
addUserKnob {6 trailkill l "Disable trails" t "Turning off the trails, will speed things up considerably. Its best to disable the trails while you get the drops right, then turn them back on later (if you have moving particles)" +STARTLINE}
addUserKnob {20 bigparts l "Big Ctrls" n 1}
addUserKnob {41 seed l "random seed" T ParticleEmitter1.seed}
addUserKnob {7 bigamount l Amount}
bigamount 0.1
addUserKnob {41 size T ParticleEmitter1.size}
addUserKnob {41 size_variation l "size variation" T ParticleEmitter1.size_variation}
addUserKnob {6 biggravity l "Gravity Enabled?" +STARTLINE}
biggravity true
addUserKnob {7 gravity l "Gravity Multiplier"}
gravity 0.1
addUserKnob {41 probability l "Gravity Probability" T ParticleGravity1.probability}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 meddrop l "Med Ctrls" n 1}
addUserKnob {41 seed_1 l "random seed" T ParticleEmitter3.seed}
addUserKnob {7 medrate l Amount R 0 5}
medrate 1.5
addUserKnob {41 size_1 l size T ParticleEmitter3.size}
addUserKnob {41 size_variation_1 l "size variation" T ParticleEmitter3.size_variation}
addUserKnob {6 medgrav l "Gravity Enabled?" +STARTLINE}
medgrav true
addUserKnob {7 medgavity l "Gravity Multiplier"}
medgavity 0.05
addUserKnob {41 probability_1 l "Gravity Probability" T ParticleGravity2.probability}
addUserKnob {20 endGroup_1 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 smldrop l "Small Ctrls" n 1}
smldrop 0
addUserKnob {7 smallrate l Amount R 0 10}
smallrate 10
addUserKnob {41 seed_2 l "random seed" T ParticleEmitter2.seed}
addUserKnob {41 size_2 l size T ParticleEmitter2.size}
addUserKnob {41 size_variation_2 l "size variation" T ParticleEmitter2.size_variation}
addUserKnob {20 endGroup_3 l endGroup n -1}
addUserKnob {26 ""}
addUserKnob {20 endGroup_4 l endGroup n -1}
addUserKnob {20 effects l Effects n 1}
effects 0
addUserKnob {7 blobify l "blobify radius" R 0 10}
blobify 3.95
addUserKnob {7 displace l "Displace Amount"}
displace 0.23
addUserKnob {41 size_3 l "Displace Noise Size" T Noise2.size}
addUserKnob {3 trails l "Trail Length" t "slows it down considerably"}
trails 20
addUserKnob {20 endGroup_5 l endGroup n -1}
addUserKnob {20 comp l Comp n 1}
comp 0
addUserKnob {6 alpha l "Copy rain to alpha?" +STARTLINE}
addUserKnob {41 size_4 l "Blur Size" T Blur2.size}
addUserKnob {7 ringing l "Gamma Lift"}
ringing 0.19
addUserKnob {7 ringing_1 l "Ringing Ratio"}
ringing_1 0.25
addUserKnob {41 mix l "Emboss Amount" T Merge2.mix}
addUserKnob {41 displace_2 l Displace T Group3.displace}
addUserKnob {41 size_5 l Defocus T Blur1.size}
addUserKnob {20 endGroup_6 l endGroup n -1}
addUserKnob {26 txt l "" +STARTLINE T "\nMade by Matt Richardson (matt_richardson_@hotmail.com)"}
}
Input {
inputs 0
name Drops
xpos 1107
ypos -58
number 1
}
AddChannels {
channels rgba
name AddChannels2
xpos 1107
ypos -20
}
Constant {
inputs 0
channels rgb
name Constant2
xpos 667
ypos -220
}
Reformat {
type scale
scale {{parent.res x336 1}}
name Reformat1
xpos 816
ypos -173
}
set C619e37e0 [stack 0]
Noise {
size 120
zoffset 1
octaves 4
center {960 410}
name Noise2
xpos 953
ypos -173
}
Input {
inputs 0
name BG
xpos 1815
ypos -818
}
set N61809880 [stack 0]
Camera2 {
translate {0 0 42.04999924}
name Camera1
xpos 1485
ypos -562
}
set N6180f310 [stack 0]
Constant {
inputs 0
channels rgb
color 1
format "256 256 0 0 256 256 1 square_256"
name Constant1
xpos 1043
ypos -719
}
Radial {
invert true
area {9.5 8.5 246.5 247.5}
softness 0
color 0
name Radial1
xpos 1043
ypos -597
}
set N618351f0 [stack 0]
Constant {
inputs 0
channels rgb
name Constant3
xpos 1537
ypos -680
}
set N61844ab0 [stack 0]
Card2 {
translate {0 0 38.72000122}
uniform_scale 1.7
control_points {3 3 3 6 

1 {-0.5 -0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0 0 0} 
1 {0 -0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {0.5 0 0} 
1 {0.5 -0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666865 0} 0 {0 0 0} 0 {1 0 0} 
1 {-0.5 0 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0 0.5 0} 
1 {0 0 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {0.5 0.5 0} 
1 {0.5 0 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0.1666666716 0} 0 {0 -0.1666666716 0} 0 {1 0.5 0} 
1 {-0.5 0.5 0} 0 {0.1666666865 0 0} 0 {0 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0 1 0} 
1 {0 0.5 0} 0 {0.1666666716 0 0} 0 {-0.1666666716 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {0.5 1 0} 
1 {0.5 0.5 0} 0 {0 0 0} 0 {-0.1666666865 0 0} 0 {0 0 0} 0 {0 -0.1666666865 0} 0 {1 1 0} }
name Card1
xpos 1327
ypos -656
}
set N6184fa50 [stack 0]
push $N61809880
ParticleEmitter {
inputs 3
emit_from faces
rate {{"parent.emissionmulti * parent.medrate"}}
rate_variation 1
lifetime {{parent.ParticleEmitter1.lifetime}}
velocity 0
size 0.024
size_variation 0.5
seed 2
name ParticleEmitter3
xpos 1175
ypos -517
disable {{1-parent.medenabled}}
}
ParticleGravity {
to {{"parent.medgavity * 0.0002 * parent.xgravity"} {"parent.medgavity * 0.0002 * parent.ygravity"} 0}
probability 0.1
name ParticleGravity2
xpos 1175
ypos -459
disable {{1-parent.medgrav}}
}
push $N618351f0
push $N6184fa50
push $N61809880
ParticleEmitter {
inputs 3
emit_from faces
rate {{"parent.bigamount * parent.emissionmulti"}}
rate_variation 1
lifetime 100
velocity 0
size 0.05
size_variation 1
seed 1
name ParticleEmitter1
xpos 1327
ypos -597
disable {{1-parent.bigenabled}}
}
ParticleGravity {
to {{"parent.gravity * 0.007 * parent.xgravity"} {"parent.gravity * 0.007 * parent.ygravity"} 0}
probability 0.03
name ParticleGravity1
xpos 1327
ypos -523
disable {{1-parent.biggravity}}
}
ParticleMerge {
inputs 2
name ParticleMerge1
xpos 1327
ypos -418
}
push $N61844ab0
clone $C619e37e0 {
xpos 1537
ypos -404
selected false
}
set N618fae60 [stack 0]
ScanlineRender {
inputs 3
ztest_enabled false
filter impulse
motion_vectors_type distance
name ScanlineRender1
xpos 1327
ypos -361
}
Erode {
channels rgb
size {{0-Erode3.size}}
name Erode2
xpos 1327
ypos -308
}
set N61728890 [stack 0]
Erode {
channels rgb
size -5
name Erode4
xpos 1217
ypos -309
}
push $N6180f310
push $N618351f0
push $N6184fa50
push $N61809880
ParticleEmitter {
inputs 3
emit_from faces
rate {{"parent.smallrate * parent.emissionmulti"}}
rate_variation 1
lifetime {{parent.ParticleEmitter1.lifetime}}
velocity 0
size 0.006
size_variation 1
name ParticleEmitter2
xpos 1043
ypos -488
disable {{1-parent.smalenabled}}
}
push $N618fae60
ScanlineRender {
inputs 3
ztest_enabled false
filter impulse
motion_vectors_type distance
name ScanlineRender2
xpos 1043
ypos -373
}
ColorCorrect {
inputs 1+1
gain 0
maskChannelMask rgba.red
name ColorCorrect3
xpos 1043
ypos -309
}
push $N61728890
Erode {
channels rgb
size {{parent.blobify}}
name Erode3
xpos 1327
ypos -271
}
Merge2 {
inputs 2
name Merge1
xpos 1327
ypos -228
}
Group {
inputs 2
name Group1
xpos 1327
ypos -185
addUserKnob {20 "" l Glass}
addUserKnob {7 displace l Displace R 0 20}
displace {{parent.displace}}
addUserKnob {41 size_1 l "smooth vectors" T Blur1.size}
addUserKnob {7 abberation l Abberation}
addUserKnob {26 "" l Defocus}
addUserKnob {6 useDef l "Apply Defocus" -STARTLINE}
addUserKnob {41 size T ZBlur1.size}
addUserKnob {41 max_size l maximum T ZBlur1.max_size}
addUserKnob {41 shape l "filter shape" T ZBlur1.shape}
}
Input {
inputs 0
name img
xpos -289
ypos 81
}
set N617c9a80 [stack 0]
Dot {
name Dot1
xpos -255
ypos 634
}
Input {
inputs 0
name control
xpos -64
ypos -388
number 1
}
set N617d46a0 [stack 0]
push $N617d46a0
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy6
xpos -64
ypos -354
disable {{hasError i}}
}
set N617d9ff0 [stack 0]
Dot {
name Dot2
xpos 94
ypos -343
}
set N617e9840 [stack 0]
Transform {
translate {0 -1}
center {320 240}
name down
xpos 60
ypos -140
}
push $N617d9ff0
Dot {
name Dot3
xpos -122
ypos -343
}
Dot {
name Dot4
xpos -207
ypos -343
}
Transform {
translate {0 1}
center {320 240}
name up
xpos -241
ypos -180
}
push $N617e9840
Dot {
name Dot5
xpos 176
ypos -343
}
Transform {
translate {1 0}
center {320 240}
name right
xpos 142
ypos -221
}
push $N617d9ff0
Shuffle {
in alpha
green black
blue black
out rgb
name Shuffle1
xpos -64
ypos -311
}
Transform {
translate {-1 0}
center {320 240}
name left
xpos -64
ypos -285
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.green
name Copy2
xpos -64
ypos -228
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.blue
name Copy3
xpos -64
ypos -187
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy4
xpos -64
ypos -147
}
Expression {
temp_name0 l
temp_expr0 red
temp_name1 r
temp_expr1 green
temp_name2 u
temp_expr2 blue
temp_name3 d
temp_expr3 alpha
channel0 {forward.u -forward.v none -backward.u}
expr0 (l-r)*width
channel1 {-forward.u forward.v none -backward.u}
expr1 (d-u)*width
channel2 depth
expr2 (abs(l-r)+abs(d-u))*width/2
name Expression1
xpos -64
ypos -15
}
Blur {
channels motion
crop false
name Blur1
xpos -64
ypos 13
}
set N6168be60 [stack 0]
Dot {
name Dot6
xpos 89
ypos 22
}
Dot {
name Dot7
xpos 89
ypos 193
}
push $N6168be60
push $N617c9a80
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels forward
name Copy1
xpos -64
ypos 67
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels depth
name Copy8
xpos -64
ypos 175
}
ZBlur {
channels rgba
math -linear
shape 1
name ZBlur1
xpos -64
ypos 229
disable {{!parent.useDef}}
}
set N616c58b0 [stack 0]
IDistort {
channels rgba
uv forward
uv_scale {{parent.displace i}}
name IDistort4
xpos 98
ypos 491
}
push $N616c58b0
IDistort {
channels {-rgba.red -rgba.green rgba.blue rgba.alpha}
uv forward
uv_scale {{parent.displace/(1+parent.abberation/10)}}
name IDistort3
xpos 66
ypos 314
}
push $N616c58b0
IDistort {
channels {rgba.red -rgba.green -rgba.blue rgba.alpha}
uv forward
uv_scale {{parent.displace/(1-parent.abberation/10)}}
name IDistort1
xpos -188
ypos 309
}
push $N616c58b0
IDistort {
channels {-rgba.red rgba.green -rgba.blue rgba.alpha}
uv forward
uv_scale {{parent.displace i}}
name IDistort2
xpos -64
ypos 311
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
name Copy9
xpos -64
ypos 372
}
Copy {
inputs 2
from0 rgba.blue
to0 rgba.blue
name Copy10
xpos -64
ypos 412
}
Switch {
inputs 2
which {{parent.abberation==0}}
name Switch1
xpos -64
ypos 491
addUserKnob {20 "" l Weta}
addUserKnob {32 knob l "update input order" t "changes the input order according to the input nodes' horizontal order (left most node becomes input 0)" -STARTLINE T " reconnectInputs"}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels depth
name Copy5
xpos -64
ypos 616
}
Output {
name Output1
xpos -59
ypos 747
}
end_group
TimeEcho {
framesbehind {{parent.trails}}
frmaesfade {{parent.trails}}
name TimeEcho2
xpos 1327
ypos -124
disable {{parent.trailkill}}
}
Switch {
inputs 2
which {{parent.dropspass}}
name Switch2
xpos 1327
ypos -48
}
set N615534a0 [stack 0]
push $N615534a0
Reformat {
name Reformat2
xpos 1449
ypos -124
}
set N6155c540 [stack 0]
Shuffle {
alpha green
name Shuffle1
xpos 1651
ypos -221
}
set N6156cd70 [stack 0]
Blur {
size 11
name Blur1
xpos 1982
ypos 88
}
set C6157e1b0 [stack 0]
set N6157e1b0 [stack 0]
push $N6157e1b0
push $N615534a0
Emboss {
Angle 53
name Emboss1
xpos 1327
ypos 32
}
ColorCorrect {
gain 2
offset -1
name ColorCorrect2
xpos 1327
ypos 102
}
Reformat {
name Reformat3
xpos 1512
ypos 102
}
clone $C6157e1b0 {
xpos 1653
ypos 96
selected false
}
push $N6155c540
push $N6155c540
Erode {
channels rgb
size 0.25
maskChannelMask rgba.red
name Erode1
xpos 1576
ypos -124
}
push $N6155c540
ColorCorrect {
inputs 1+1
gain 0
maskChannelMask rgba.red
name ColorCorrect4
xpos 1576
ypos -64
}
Merge2 {
inputs 2
operation max
mix {{parent.ringing_1}}
name Merge3
xpos 1576
ypos 3
}
clone $C6157e1b0 {
xpos 1716
ypos -3
selected false
}
push $N6156cd70
push $N6155c540
clone $C6157e1b0 {
xpos 1473
ypos -330
selected false
}
push $N61809880
AddChannels {
channels rgba
name AddChannels3
xpos 1815
ypos -780
}
AddChannels {
channels alpha
color 1
name AddChannels1
xpos 1815
ypos -738
}
set N61443750 [stack 0]
Blur {
inputs 1+1
size 8
maskChannelMask rgba.red
name Blur2
xpos 1815
ypos -330
}
Group {
inputs 2
name Group3
xpos 1815
ypos -221
addUserKnob {20 "" l Glass}
addUserKnob {7 displace l Displace R 0 20}
displace 0.4
addUserKnob {41 size_1 l "smooth vectors" T Blur1.size}
addUserKnob {7 abberation l Abberation}
abberation 1
addUserKnob {26 "" l Defocus}
addUserKnob {6 useDef l "Apply Defocus" -STARTLINE}
addUserKnob {41 size T ZBlur1.size}
addUserKnob {41 max_size l maximum T ZBlur1.max_size}
addUserKnob {41 shape l "filter shape" T ZBlur1.shape}
}
Input {
inputs 0
name img
xpos -289
ypos 81
}
set N61468670 [stack 0]
Dot {
name Dot1
xpos -255
ypos 634
}
Input {
inputs 0
name control
xpos -64
ypos -388
number 1
}
set N61473290 [stack 0]
push $N61473290
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy6
xpos -64
ypos -354
disable {{hasError i}}
}
set N61478be0 [stack 0]
Dot {
name Dot2
xpos 94
ypos -343
}
set N614886f0 [stack 0]
Transform {
translate {0 -1}
center {320 240}
name down
xpos 60
ypos -140
}
push $N61478be0
Dot {
name Dot3
xpos -122
ypos -343
}
Dot {
name Dot4
xpos -207
ypos -343
}
Transform {
translate {0 1}
center {320 240}
name up
xpos -241
ypos -180
}
push $N614886f0
Dot {
name Dot5
xpos 176
ypos -343
}
Transform {
translate {1 0}
center {320 240}
name right
xpos 142
ypos -221
}
push $N61478be0
Shuffle {
in alpha
green black
blue black
out rgb
name Shuffle1
xpos -64
ypos -311
}
Transform {
translate {-1 0}
center {320 240}
name left
xpos -64
ypos -285
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.green
name Copy2
xpos -64
ypos -228
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.blue
name Copy3
xpos -64
ypos -187
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy4
xpos -64
ypos -147
}
Expression {
temp_name0 l
temp_expr0 red
temp_name1 r
temp_expr1 green
temp_name2 u
temp_expr2 blue
temp_name3 d
temp_expr3 alpha
channel0 {forward.u -forward.v none -backward.u}
expr0 (l-r)*width
channel1 {-forward.u forward.v none -backward.u}
expr1 (d-u)*width
channel2 depth
expr2 (abs(l-r)+abs(d-u))*width/2
name Expression1
xpos -64
ypos -15
}
Blur {
channels motion
size 15
crop false
name Blur1
xpos -64
ypos 13
}
set N6132b300 [stack 0]
Dot {
name Dot6
xpos 89
ypos 22
}
Dot {
name Dot7
xpos 89
ypos 193
}
push $N6132b300
push $N61468670
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels forward
name Copy1
xpos -64
ypos 67
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels depth
name Copy8
xpos -64
ypos 175
}
ZBlur {
channels rgba
math -linear
max_size 2.2
shape 1
name ZBlur1
xpos -64
ypos 229
disable {{!parent.useDef}}
}
set N61364090 [stack 0]
IDistort {
channels rgba
uv forward
uv_scale {{parent.displace i}}
name IDistort4
xpos 98
ypos 491
}
push $N61364090
IDistort {
channels {-rgba.red -rgba.green rgba.blue rgba.alpha}
uv forward
uv_scale {{parent.displace/(1+parent.abberation/10)}}
name IDistort3
xpos 66
ypos 314
}
push $N61364090
IDistort {
channels {rgba.red -rgba.green -rgba.blue rgba.alpha}
uv forward
uv_scale {{parent.displace/(1-parent.abberation/10)}}
name IDistort1
xpos -188
ypos 309
}
push $N61364090
IDistort {
channels {-rgba.red rgba.green -rgba.blue rgba.alpha}
uv forward
uv_scale {{parent.displace i}}
name IDistort2
xpos -64
ypos 311
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
name Copy9
xpos -64
ypos 372
}
Copy {
inputs 2
from0 rgba.blue
to0 rgba.blue
name Copy10
xpos -64
ypos 412
}
Switch {
inputs 2
which {{parent.abberation==0}}
name Switch1
xpos -64
ypos 491
addUserKnob {20 "" l Weta}
addUserKnob {32 knob l "update input order" t "changes the input order according to the input nodes' horizontal order (left most node becomes input 0)" -STARTLINE T " reconnectInputs"}
}
Copy {
inputs 2
from0 -rgba.alpha
to0 -rgba.alpha
channels depth
name Copy5
xpos -64
ypos 616
}
Output {
name Output1
xpos -59
ypos 747
}
end_group
ColorCorrect {
inputs 1+1
gamma {{"1 + parent.ringing"}}
maskChannelMask rgba.red
name ColorCorrect1
xpos 1815
ypos 3
}
Merge2 {
inputs 2
operation plus
sRGB true
Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
mix 0.085
name Merge2
xpos 1815
ypos 102
}
clone $C6157e1b0 {
xpos 1815
ypos 178
selected false
}
push $N61443750
Dot {
name Dot1
xpos 2131
ypos -112
}
Merge2 {
inputs 2+1
name Merge4
xpos 2097
ypos 205
}
ShuffleCopy {
inputs 2
alpha red
name ShuffleCopy1
xpos 2097
ypos 310
disable {{1-parent.alpha}}
}
Switch {
inputs 2
which 1
name Switch1
xpos 2097
ypos 389
disable {{1-parent.rainonly}}
}
Output {
name Output1
xpos 2097
ypos 474
}
end_group
push $cut_paste_input
Group {
name Sparky
tile_color 0xbd4600ff
label "\[if \{\[value ROrP]==false\} \{return \"Render Mode\"\} \{return \"!! PARTICLE MODE !! \\nENABLED\"\}]"
note_font "Bitstream Vera Sans Bold"
selected true
xpos 43760
ypos -2668
lock_connections true
addUserKnob {20 SparkTab l "Sparky Settings"}
addUserKnob {41 start_frame l "Initial Frame" T SparkEmit.start_frame}
addUserKnob {7 EmissionRate l "Emission Amount" R 0 100}
EmissionRate 15
addUserKnob {26 ""}
addUserKnob {26 emittertext l "" +STARTLINE T "Emitter Settings"}
addUserKnob {13 Direction t "Set the initial velocity applied to the particles. This will orient the sparks in 3D space."}
Direction {100 40 0}
addUserKnob {7 MaxLife l "Particle Life" t "Maximum amount of frames the particles will live for." R 10 100}
MaxLife 60
addUserKnob {7 LifeRange l "Life Range" t "Randomizes the Life Range of the particles." R 0 2}
LifeRange 0.75
addUserKnob {3 seed l "Particle  Seed" t "Randomizes the simulation."}
seed 123
addUserKnob {26 ""}
addUserKnob {7 ParticleSize l "Particle Size" t "Change Particle Size" R 1 5}
ParticleSize 2.92
addUserKnob {7 Explosivity t "Changes how much influence the initial force has on the particles." R 0 100}
Explosivity 58.5
addUserKnob {7 Scatter t "Adds some randomness between particles." R 0 100}
Scatter 100
addUserKnob {41 Softness l "Particle Softness" T CustomKnobs.Softness}
addUserKnob {26 ""}
addUserKnob {4 ROption l "Render Options" t "Multi Scanline: Output is a ScanlineRender with motionblur enabled. Can be DeepMerged\nVectorBlur: 2D motionblur added post-render. Can get rid of sample issues, but is not Deep compatible." M {"Multi Scanline" VectorBlur "" ""}}
addUserKnob {41 format l Format T RootFormatSetup.format}
addUserKnob {14 Overscan R 0 100}
Overscan 100
addUserKnob {6 ROrP l "Output As Particles" t "Check this to output Particles instead of a 2D render.\nIt can then be plugged into a 3D scene." +INVISIBLE +STARTLINE}
addUserKnob {6 OutputDeep l "Output Deep" t "Warning: Will output in Multi-Scanlinde mode only. Doesn't have any effect if \"Output As Particles is selected\"." -STARTLINE}
addUserKnob {22 outParticles l "Output As Particles" t "Click this to output Particles instead of a 2D render.\nIt can then be plugged into a 3D scene." T "n = nuke.thisNode()\n\nn.begin()\n\nSwitch = nuke.toNode('DotSwitch')\nP= nuke.toNode('ParticlesDot')\nR= nuke.toNode('RenderDot')\n\nif n\['ROrP'].value() ==0:\n    Switch.setInput(0,P)\n    n\['ROrP'].setValue(1)\n    n\['outParticles'].setLabel(\"Output As 2D Render\")\nelse:\n    Switch.setInput(0,R)\n    n\['ROrP'].setValue(0)\n    n\['outParticles'].setLabel(\"Output As Particles\")\n\nn.end()\n" +STARTLINE}
addUserKnob {20 Presets}
addUserKnob {4 AnimPreset l "Animation Presets" t "None: This wont do anything. Serves as safety to not enable a preset accidentally\nSingle Hit Heavy: Heavy hit with a double pop.\nSingle Hit Light : Light pop of sparks.\nWelding : Expression that will mimic a natural welding feeling.\nWavy : Constant sim with some strong variation in birth rate.\nConstant : Softer variation than the Wavy preset.\nLoopy : Loops the same pop of Sparks." M {None "Single Hit Heavy" "Single Hit Light" Welding Wavy Constant Loopy "" "" "" "" ""}}
addUserKnob {22 Apply l "Apply Preset" t "    " T "def checkPreset():\n    preset = int(nuke.thisNode()\['AnimPreset'].getValue())\n    print(preset)\n    if preset ==0:\n        return False\n    else:\n        return preset\n\ndef checkFrame():\n    InitFrame = nuke.getInput(\"Enter Initial Frame\", '1001')\n    if InitFrame:\n        try:\n            InitFrame = int(InitFrame)\n            return InitFrame\n        except ValueError:\n            nuke.message(\"Not a valid frame number\")\n            return False\n\n\nif checkPreset() == False:\n    nuke.ask(\"No preset selected\")\nelse:\n    n=nuke.thisNode()\['EmissionRate']\n    s=int(nuke.thisNode()\['AnimPreset'].getValue())\n    cf=checkFrame()\n    if cf!=False and cf!=None:\n        if s == 1:        \n            print(\"Initial frame is x\" + str(cf))\n            nuke.thisNode()\['start_frame'].setValue(cf)\n            n.clearAnimated()\n            n.setAnimated()\n            sCurve = '\{curve K x%v1 0 S 400 x%v2 0 12 x%v3 175 x%v4 20 0\}'\n            sCurve=sCurve.replace(\"%v1\",str(cf))\n            sCurve=sCurve.replace(\"%v2\",str(cf+3))\n            sCurve=sCurve.replace(\"%v3\",str(cf+6))\n            sCurve=sCurve.replace(\"%v4\",str(cf+12))\n            n.fromScript(sCurve)\n            nuke.message(\"Applied Single Hit Heavy Preset\")\n        elif s == 2:\n            print(\"Initial frame is x\" + str(cf))\n            nuke.thisNode()\['start_frame'].setValue(cf)\n            n.clearAnimated()\n            n.setAnimated()\n            sCurve = '\{curve K x%v1 0 S 140 x%v2 0\}'\n            sCurve=sCurve.replace(\"%v1\",str(cf))\n            sCurve=sCurve.replace(\"%v2\",str(cf+3))\n            n.fromScript(sCurve)\n            nuke.message(\"Applied Single Hit Light Preset\")\n        elif s == 3:\n            print(\"Initial frame is x\" + str(cf))\n            nuke.thisNode()\['start_frame'].setValue(cf)\n            n.clearAnimated()\n            n.setExpression(\"max(0,(random(frame+seed)*120*((sin(frame+seed)+1)*0.5)-12))*3\")\n            nuke.message(\"Applied Welding Preset\")\n        elif s == 4:\n            print(\"Initial frame is x\" + str(cf))\n            nuke.thisNode()\['start_frame'].setValue(cf)\n            n.clearAnimated()\n            n.setExpression(\"random(frame+seed)*120*((sin(frame+seed)+1)*0.5)\")\n            nuke.message(\"Applied Wavy Preset\")\n        elif s == 5:\n            print(\"Initial frame is x\" + str(cf))\n            nuke.thisNode()\['start_frame'].setValue(cf)\n            n.clearAnimated()\n            n.setExpression(\"random(frame/5+seed)*100+60\")\n            nuke.message(\"Applied Constant Preset\")\n        else:\n            print(\"Initial frame is x\" + str(cf))\n            nuke.thisNode()\['start_frame'].setValue(cf)\n            n.clearAnimated()\n            n.setAnimated()\n            sCurve = '\{curve(((frame-%v1)%(%v6-%v1+1))+%v1) K x%v1 0 S 400 x%v2 0 x%v3 12 175 x%v4 20 x%v5 0 x%v6 0\}'\n            sCurve=sCurve.replace(\"%v1\",str(cf))\n            sCurve=sCurve.replace(\"%v2\",str(cf+3))\n            sCurve=sCurve.replace(\"%v3\",str(cf+4))\n            sCurve=sCurve.replace(\"%v4\",str(cf+7))\n            sCurve=sCurve.replace(\"%v5\",str(cf+11))\n            sCurve=sCurve.replace(\"%v6\",str(cf+14))\n            n.fromScript(sCurve)\n            nuke.message(\"Applied Loopy Preset\")\n\n" +STARTLINE}
addUserKnob {20 Advanced l "Advanced Settings"}
addUserKnob {7 TVelocity l "Transfer Velocity"}
TVelocity 0.5
addUserKnob {7 TWindow l "Transfer window" R 0 5}
TWindow 2
addUserKnob {7 Spread l "Emission Spread"}
Spread 0.1
addUserKnob {26 ""}
addUserKnob {41 samples l "Scanline Samples" T MultiSampleRender.samples}
addUserKnob {7 Shutter}
Shutter 0.5
addUserKnob {41 shutteroffset l "Shutter Offset" T MultiSampleRender.shutteroffset}
addUserKnob {41 shuttercustomoffset l "" -STARTLINE T MultiSampleRender.shuttercustomoffset}
addUserKnob {20 Instructions}
addUserKnob {26 info l "" +STARTLINE T "Sparky v1.5\n\nEasy to use particle setup for Sparks.\n\nOutputs an image by default, but can be configured to be rendered through a specific Camera or\nto output as particles, which allows you to plug Sparky into a 3D scene.\n\nIf you wish to use the 3D version of this Gizmo, simply plug your Camera and plug an Axis to \nmove and place the sparks where you need them.\n\nFor more information about presets and changelogs, head to the Nukepedia page!"}
}
BackdropNode {
inputs 0
name BackdropNode9
tile_color 0x557fffff
label "Welcome Curious Comper!\n\nI hope you'll find answers\nto what you are looking for\ninside here! <img src=\"ParticleBounce.png\">"
note_font "Bitstream Vera Sans"
note_font_size 111
xpos -2486
ypos -861
bdwidth 2780
bdheight 1970
}
Input {
inputs 0
name Camera
xpos -1457
ypos 312
}
Dot {
name Dot3
xpos -1423
ypos 551
}
Camera2 {
inputs 0
translate {0 -100 1200}
focal 20
haperture 24
vaperture 13.5
near 1
far 1000000
name Default2DCam
xpos -1217
ypos 210
}
Switch {
inputs 2
which {{"\[exists parent.input0]"}}
name Switch1
xpos -1227
ypos 548
}
set N612b9d40 [stack 0]
ColorWheel {
inputs 0
format "256 256 0 0 256 256 1 square_256"
gamma 0.45
name ColorWheel1
xpos -1170
ypos -537
}
Saturation {
saturation 0
mode Maximum
name Saturation1
xpos -1170
ypos -427
}
FilterErode {
channels all
size {{abs(parent.CustomKnobs.Softness)}}
filter gaussian
name ErodeSoft
xpos -1170
ypos -384
}
Reformat {
type scale
scale 0.125
resize distort
black_outside true
name Reformat2
xpos -1170
ypos -325
}
Grade {
white {0.9 0.35 0.085 1}
name Grade1
xpos -1170
ypos -267
}
BlendMat {
operation max
surfaceblend modulate
name BlendMat1
xpos -971
ypos -267
}
Noise {
inputs 0
size 750
zoffset {{frame/5+CustomKnobs.time_offset}}
octaves 6
lacunarity 1.45
gain 0.6
center {1440 810}
name Noise6
xpos -676
ypos -548
}
set N61115df0 [stack 0]
Sphere {
name Sphere1
xpos -770
ypos -456
}
push $N61115df0
Sphere {
translate {{parent.input1.translate} {parent.input1.translate} {parent.input1.translate}}
rotate {{parent.input1.rotate} {parent.input1.rotate} {parent.input1.rotate}}
scaling {{parent.input1.scaling} {parent.input1.scaling} {parent.input1.scaling}}
name Sphere2
xpos -575
ypos -460
}
Switch {
inputs 2
which {{"!\[exists parent.input1]"}}
name Switch3
xpos -676
ypos -342
}
push 0
ParticleEmitter {
inputs 3
start_frame 1001
emit_from faces
randomize_type "randomized direction"
rate {{parent.EmissionRate}}
rate_variation 0.5
rate_channel rgba.red
lifetime {{parent.MaxLife}}
lifetime_variation {{parent.LifeRange}}
halflife {{lifetime/2.5}}
velocity {{"!\[exists parent.input1]?7.5+(10*Explosivity/100):7.5+(10*Explosivity/100)*((parent.input1.uniform_scale-1)*0.25+1)"}}
velocity_variation {{0.125+abs((min(100,parent.Scatter)*0.035))}}
size {{"!\[exists parent.input1]?max(0.1,parent.ParticleSize):max(0.01,parent.ParticleSize)*((parent.input1.uniform_scale-1)*0.25+1)"}}
size_variation 1.6
mass {{"!\[exists parent.input1]?0.5+(1-(clamp(parent.Explosivity,0,100))/100)*3.5:(0.5+((1-(clamp(parent.Explosivity,0,100))/100)*3.5))*(((parent.input1.uniform_scale-1)*0.25)+1)"}}
mass_variation {{1.5*(clamp(parent.Scatter,0,100))/100}}
transfer_velocity {{parent.TVelocity}}
transfer_window {{parent.TWindow}}
spread {{parent.Spread}}
color {0.9 0.35 0.085 1}
seed {{CustomKnobs.time_offset}}
name SparkEmit
xpos -676
ypos -267
}
ParticleDirectionalForce {
strength {{"parent.Direction*(\[exists parent.input1]?1+(parent.input1.uniform_scale-1)*0.85:1)"} {"parent.Direction*(\[exists parent.input1]?1+(parent.input1.uniform_scale-1)*0.85:1)"} {"parent.Direction*(\[exists parent.input1]?1+(parent.input1.uniform_scale-1)*0.85:1)"}}
max_age {{1/(max(1,parent.SparkEmit.lifetime*1.25))}}
name ParticleDirectionalForce
xpos -676
ypos -120
}
ParticleDrag {
drag 0.6
name ParticleDrag
xpos -676
ypos -36
}
ParticleTurbulence {
strength {2 0.85 4}
scale {5 10 20}
name ParticleTurbulence
xpos -676
ypos 22
}
ParticleDrag {
drag 0.1
name ParticleDrag2
xpos -676
ypos 86
}
ParticleGravity {
to {0 {"!\[exists parent.input1]?-3:-1-(2*(parent.input1.uniform_scale))"} 0}
min_age 0.1
name ParticleGravity
xpos -676
ypos 148
}
ParticleCurve {
curves {r {curve L x0.04740819708 1 S l x0.4987964034 0.7955223322 x1 0}
  g {curve L x0.04740819708 1 S l x0.4987964034 0.7955223322 x1 0}
  b {curve L x0.04740819708 1 S l x1 0}
  a {curve L x0.04740819708 1 S l x0.4939824343 0.7353233099 x1 0}
  size {}
  mass {}}
seed {{HiddenSeed}}
name FadeOut
xpos -676
ypos 201
}
ParticleSettings {
name ParticleSettings1
xpos -676
ypos 265
}
set N9f80d590 [stack 0]
Dot {
name Dot6
xpos -642
ypos 516
}
set Na02bc080 [stack 0]
Constant {
inputs 0
name Constant1
xpos -161
ypos 316
}
Reformat {
resize none
name RootFormatSetup
xpos -161
ypos 406
addUserKnob {20 User}
addUserKnob {14 Overscan R 0 100}
Overscan {{parent.Overscan}}
}
Dot {
name Dot4
xpos -127
ypos 551
}
set N61032030 [stack 0]
ScanlineRender {
inputs 3
conservative_shader_sampling false
antialiasing high
overscan {{parent.RootFormatSetup.Overscan}}
spatial_jitter 0.1
motion_vectors_type velocity
name NO_Motionblur
xpos -449
ypos 548
}
VectorBlur2 {
channels rgba
uv forward
alpha -rgba.alpha
scale 0.5
motion_falloff 0.65
offset 0
grow_bbox 40
normalize false
name MBlur
xpos -448
ypos 708
}
push $N612b9d40
Dot {
name Dot48
xpos -1192
ypos 640
}
push $Na02bc080
push $N61032030
Dot {
name Dot5
xpos -126
ypos 640
}
ScanlineRender {
inputs 3
conservative_shader_sampling false
antialiasing high
ambient {{parent.RootFormatSetup.Overscan}}
samples 30
shutter {{parent.Shutter}}
spatial_jitter 0.025
motion_vectors_type velocity
name MultiSampleRender
xpos -676
ypos 637
}
Switch {
inputs 2
which {{OutputDeep==1?0:ROption}}
name Switch2
xpos -677
ypos 714
}
Dot {
name RenderDot
xpos -643
ypos 763
}
Dot {
name DotSwitch
xpos -643
ypos 904
}
Output {
name Output
xpos -677
ypos 1014
}
NoOp {
inputs 0
name CustomKnobs
tile_color 0xff9fff
xpos -90
ypos -264
addUserKnob {20 User}
addUserKnob {7 Softness R 0 100}
Softness 16.5
addUserKnob {3 time_offset l Seed}
time_offset {{parent.seed}}
}
Input {
inputs 0
name Axis
xpos -358
ypos -541
number 1
}
Dot {
name Dot7
xpos -324
ypos -479
}
push $N9f80d590
Dot {
name Dot2
xpos -924
ypos 711
}
Dot {
name ParticlesDot
xpos -924
ypos 831
}
end_group
push $Nd8cb3e10
Group {
name ParticleLights
selected true
xpos 43759
ypos -2589
addUserKnob {20 User}
addUserKnob {26 info1 l "" +STARTLINE T "Particle Lights v1.1"}
addUserKnob {26 info2 l "" +STARTLINE T "by Mads Hagbarth Lund"}
addUserKnob {26 ""}
addUserKnob {41 "blinnShader_Diffuse Multiplier" l "Diffuse Multiplier" T "BlinkScript8.blinnShader_Diffuse Multiplier"}
addUserKnob {41 "blinnShader_Specular Power" l "Specular Power" T "BlinkScript8.blinnShader_Specular Power"}
addUserKnob {41 "blinnShader_Specular Hardness" l "Specular Hardness" T "BlinkScript8.blinnShader_Specular Hardness"}
addUserKnob {41 "blinnShader_Half Lambert" l "Half Lambert" T "BlinkScript8.blinnShader_Half Lambert"}
}
StickyNote {
inputs 0
name StickyNote1
label "A bug in the blink node means that the input size must be atleast 2x2. \nSo we fake this by adding 2 null particles."
xpos -847
ypos 354
}
Group {
inputs 0
name Light2
xpos -679
ypos 487
addUserKnob {20 User}
addUserKnob {41 color T Point.color}
addUserKnob {41 intensity T Point.intensity}
addUserKnob {41 translate T Point.translate}
}
StickyNote {
inputs 0
name StickyNote1
label "Ensure that we can use axis nodes\nto modify the position of the light."
xpos -183
ypos -299
}
StickyNote {
inputs 0
name StickyNote2
label "Dummy object to make it look like a regular light"
xpos -188
ypos -235
}
StickyNote {
inputs 0
name StickyNote4
label "Link positions via the world matrix to get exact position"
xpos -300
ypos -55
}
StickyNote {
inputs 0
name StickyNote3
label "Link RGB to color and Alpha to Intensity"
xpos -300
ypos -131
}
Constant {
inputs 0
color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
format "1 1 0 0 1 1 1 hg_light"
name Constant2
xpos -399
ypos -148
}
Sphere {
display off
render_mode off
rows 1
columns 1
translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
uniform_scale 0.022
name Lightx
xpos -399
ypos -52
}
push 0
ParticleEmitter {
inputs 2
display off
render_mode off
start_frame -5
emit_channels {b}
emit_from bbox
emit_order uniformly
randomize_type "randomize outwards"
rate 4
lifetime 1
velocity 0
size 1
size_channel rgba.alpha
color_from_texture true
name ParticleEmitter1
xpos -399
ypos 46
}
Output {
name Output1
xpos -399
ypos 150
}
Input {
inputs 0
name Input1
xpos -276
ypos -296
}
Light {
color {0 0 0}
intensity 0
depthmap_slope_bias 0.01
name Point
xpos -266
ypos -216
}
end_group
Group {
inputs 0
name Light1
xpos -684
ypos 428
addUserKnob {20 User}
addUserKnob {41 color T Point.color}
addUserKnob {41 intensity T Point.intensity}
addUserKnob {41 translate T Point.translate}
}
StickyNote {
inputs 0
name StickyNote1
label "Ensure that we can use axis nodes\nto modify the position of the light."
xpos -183
ypos -299
}
StickyNote {
inputs 0
name StickyNote2
label "Dummy object to make it look like a regular light"
xpos -188
ypos -235
}
StickyNote {
inputs 0
name StickyNote4
label "Link positions via the world matrix to get exact position"
xpos -300
ypos -55
}
StickyNote {
inputs 0
name StickyNote3
label "Link RGB to color and Alpha to Intensity"
xpos -300
ypos -131
}
Constant {
inputs 0
color {{parent.Point.color} {parent.Point.color} {parent.Point.color} {parent.Point.intensity/10}}
format "1 1 0 0 1 1 1 hg_light"
name Constant2
xpos -399
ypos -148
}
Sphere {
display off
render_mode off
rows 1
columns 1
translate {{parent.Point.world_matrix.3 x1 11.42000103 x8 -18.5 2.000001907} {parent.Point.world_matrix.7 x1 1.620000005 x8 46.30000305 44.20000076} {parent.Point.world_matrix.11 x1 0.3999999762 x8 -50.79999924 -50.79999924}}
uniform_scale 0.022
name Lightx
xpos -399
ypos -52
}
push 0
ParticleEmitter {
inputs 2
display off
render_mode off
start_frame -5
emit_channels {b}
emit_from bbox
emit_order uniformly
randomize_type "randomize outwards"
rate 4
lifetime 1
velocity 0
size 1
size_channel rgba.alpha
color_from_texture true
name ParticleEmitter1
xpos -399
ypos 46
}
Output {
name Output1
xpos -399
ypos 150
}
Input {
inputs 0
name Input1
xpos -276
ypos -296
}
Light {
color {0 0 0}
intensity 0
depthmap_slope_bias 0.01
name Point
xpos -266
ypos -216
}
end_group
push 0
Input {
inputs 0
name Particles
xpos -452
ypos 324
}
ParticleMerge {
inputs 4
name ParticleMerge1
xpos -452
ypos 428
}
add_layer {hag_pos hag_pos.red hag_pos.green hag_pos.blue hag_pos.alpha}
add_layer {hag_active hag_active.a}
ParticleToImage {
pos hag_pos
active hag_active.a
name ParticleToImage1
xpos -452
ypos 511
}
set N5a2a77b0 [stack 0]
Shuffle {
in hag_pos
name light_pos
xpos -329
ypos 511
}
Dot {
name Dot2
xpos -295
ypos 559
}
push $N5a2a77b0
Shuffle {
in rgb
in2 hag_active
alpha red2
name light_color
xpos -452
ypos 581
}
Input {
inputs 0
name Camera
xpos -149
ypos 282
number 1
}
Camera2 {
name Camera1
xpos -136
ypos 320
}
Dot {
name Dot1
xpos -112
ypos 396
}
Input {
inputs 0
name Scene3D
xpos -275
ypos 323
number 2
}
push 0
add_layer {N N.red N.green N.blue N.alpha}
ScanlineRender {
inputs 3
max_tessellation 2
motion_vectors_type distance
output_shader_vectors true
P_channel P
N_channel N
name ScanlineRender2
xpos -275
ypos 393
}
Dot {
name Dot10
xpos -241
ypos 421
}
set N5a123b70 [stack 0]
Dot {
name Dot3
xpos -152
ypos 421
}
Shuffle {
in N
in2 rgba
alpha alpha2
name NormalSplit
xpos -186
ypos 472
}
push $N5a123b70
Shuffle {
in P
in2 rgba
alpha alpha2
name PointPosSplit
xpos -275
ypos 472
}
BlinkScript {
inputs 4
ProgramGroup 1
KernelDescription "1 \"blinnShader\" iterate pixelWise 4b6604ba5b4299095f03f9edf77da6dbf1f946c319dc7f6e6962ca67a375f9f8 5 \"pointPos\" Read Point \"normal\" Read Point \"light_color\" Read Random \"light_pos\" Read Random \"dst\" Write Point 5 \"Camera Position\" Float 3 AACAPwAAgD8AAIA/AAAAAA== \"Diffuse Multiplier\" Float 1 AACAPw== \"Specular Power\" Float 1 AAAgQQ== \"Specular Hardness\" Float 1 AADIQg== \"Half Lambert\" Bool 1 AQ=="
kernelSource "kernel blinnShader : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> pointPos;  //the input image\n  Image<eRead, eAccessPoint, eEdgeClamped> normal;  //the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> light_color;  //the input image\n  Image<eRead, eAccessRandom, eEdgeClamped> light_pos;  //the input image\n\n  Image<eWrite> dst;  //the output image\n\n  param:\n    float3 cameraPosition;\n    float diffuseMultiplier;\n    float specularPower;\n    float specularHardness;\n    bool halfLambert;\n\n  local:\n    float3 lightDir;\n    float3 viewDir;\n\n  void define() \{\n    defineParam(halfLambert,\"Half Lambert\",bool(1));\n    defineParam(cameraPosition, \"Camera Position\", float3(1.0f,1.0f,1.0f));\n    defineParam(diffuseMultiplier,\"Diffuse Multiplier\",float(1.0f));\n    defineParam(specularPower,\"Specular Power\",float(10.0f));\n    defineParam(specularHardness,\"Specular Hardness\",float(100.0f));\n  \}\n\n  void init() \{\n  \}\n\n  void process() \{\n\n    SampleType(dst) sampleBase(0.0f);\n\n    float newVal = 0;\n    for(int j = 0; j < light_pos.bounds.y2; j++) \{\n      for(int i = 0; i < light_pos.bounds.x2; i++) \{\n        if (light_color(i,j).w == 1) \{        \n\n        lightDir = (float3(light_pos(i,j).x,light_pos(i,j).y,light_pos(i,j).z)-float3(pointPos(0),pointPos(1),pointPos(2)));\n        float distance = length(lightDir);\n        lightDir = normalize(lightDir);\n        distance = distance * distance;\n\n        viewDir = (cameraPosition-float3(pointPos(0),pointPos(1),pointPos(2)));\n        viewDir = normalize(viewDir);\n\n\n        //Calculating Diffuse\n        float NdotL = dot(float3(normal(0),normal(1),normal(2)),lightDir);\n        if (halfLambert) \{      \n           NdotL = NdotL * 0.5 + 0.5; //Added option for half lambert\n         \}\n        else\n        \{\n        NdotL = min(1.0f,max(0.0f,NdotL));\n        \}\n\n        float diffuse = NdotL * (light_pos(i,j).w*diffuseMultiplier) / distance;\n\n\n        //Calculating Specular\n        float3 H = normalize(lightDir+viewDir);\n        float NdotH = dot(float3(normal(0),normal(1),normal(2)),H);\n        float intensity = pow(NdotH,specularHardness);\n        float specular = intensity * specularPower / distance;\n\n\n        SampleType(dst) sample(0.0f);\n        sample.x = max(0.0f,(diffuse+specular) * light_color(i,j).x);\n        sample.y =  max(0.0f,(diffuse+specular) * light_color(i,j).y);\n        sample.z =  max(0.0f, (diffuse+specular) * light_color(i,j).z);\n        sampleBase += sample;\n        \}\n      \}\n    \}\n\n    dst() = sampleBase+float4(0,0,0,pointPos(3)); //Reaplying Alpha\n   \}\n\};"
useGPUIfAvailable false
vectorize false
rebuild ""
"blinnShader_Camera Position" {{parent.Camera1.world_matrix.3} {parent.Camera1.world_matrix.7} {parent.Camera1.world_matrix.11}}
"blinnShader_Diffuse Multiplier" 4
"blinnShader_Specular Power" 0.45
"blinnShader_Specular Hardness" 200
"blinnShader_Half Lambert" false
rebuild_finalise ""
name BlinkScript8
xpos -186
ypos 575
}
Premult {
name Premult1
xpos -186
ypos 718
}
Output {
name Output1
xpos -186
ypos 785
}
end_group
push $Nd8cb3e10
Group {
name ParticleKiller
tile_color 0x101010ff
selected true
xpos 43760
ypos -2538
addUserKnob {20 particleKillerTab l ParticleKiller}
addUserKnob {41 ids t "The ids of the particles that should be affected. Separate using spaces or comma's." T ParticleExpression2.ids}
addUserKnob {41 operation l "" t "Kill: all the named particles are deleted.\nKeep: all but the named particles are deleted." -STARTLINE T ParticleExpression2.operation}
addUserKnob {26 ""}
addUserKnob {22 displayPoints l "display point numbers" t "Toggle the visibility of the particle ids in the 3D viewer." T "knob = nuke.activeViewer().node().knob('show_vertex_num')\nknob.setValue(1 - knob.value())" +STARTLINE}
addUserKnob {6 colorPreview l "overwrite color with particle id" t "Replace the particles' color values with their ids for easy identification." -STARTLINE}
addUserKnob {1 channels l INVISIBLE +INVISIBLE}
channels "\[expr \{ \[value colorPreview] ? \"Color Preview Enabled\" : \"rgb\"\}]"
}
Input {
inputs 0
name Input
label "\[value number]"
xpos 167
ypos -29
}
ParticleExpression {
colexpr id
name ParticleExpression1
xpos 167
ypos 47
disable {{"max(parent.disable, (1 - parent.colorPreview))"}}
}
ParticleExpression {
channelsexpr_onlynew true
new_channels {}
name ParticleExpression2
knobChanged "node = nuke.thisNode()\n\nmode = int(node.knob(\"operation\").getValue())\noperation = \[\"=\",\"!\"]\[mode]\ndivider = \[\"|\",\"&\"]\[mode]\ndivider = \" %s \"%(divider*2)\n\nnumbers = \[str(i) for i in range(10)]\n\nids = node.knob(\"ids\").value()\n\nids = ids.replace(\",\",\" \").split()\nids = sorted(list(set(\[int(id) for id in ids if all(\[number in numbers for number in id])])))\nids = \[\"id %s= %s\"%(operation, id) for id in ids]\n\nexpression = divider.join(ids)\n\nnode.knob(\"channelsexpr\").setValue(expression)"
xpos 167
ypos 112
disable {{"max( parent.disable, (1 - clamp(\[string length \[value channelsexpr]])))"}}
addUserKnob {20 killTab l Kill}
addUserKnob {26 credits l "" +STARTLINE T "ParticleKiller v1.0 - Wouter Gilsing"}
addUserKnob {1 ids}
addUserKnob {4 operation -STARTLINE M {kill keep "" ""}}
}
Output {
name Output1
xpos 167
ypos 193
}
end_group
push $Nd8cb3e10
Group {
name SpotFlare
tile_color 0x2f66ff
selected true
xpos 43760
ypos -2402
addUserKnob {20 User}
addUserKnob {26 Headline l "" +STARTLINE T "<font color=#80dddd size=\"7\">S</font><font color=#90dede size=\"7\">p</font><font color=#a0dfdf size=\"7\">o</font><font color=#b0e0e0 size=\"7\">t</font><font color=#c0e1e1 size=\"7\">F</font><font color=#b0e0e0 size=\"7\">l</font><font color=#a0dfdf size=\"7\">are</font><font color=#90dede size=\"3\">v</font><font color=#80dddd size=\"2\">1.0</font>"}
addUserKnob {26 HeadlineB l "" +STARTLINE T "<font color=#80dddd size=\"2\">by Mads Hagbarth Lund</font>"}
addUserKnob {26 devider001 l "<b><font color=#70EE70>General</font><b>"}
addUserKnob {12 Position}
Position {1036 496}
addUserKnob {7 Gain}
Gain 0.63
addUserKnob {7 Gamma R 0 5}
Gamma 1.12
addUserKnob {7 Scale}
Scale 0.55
addUserKnob {6 SoftClip t "By default, spotflare will be very bright at the center. Use softclip to limit the maximum brightness." +STARTLINE}
addUserKnob {7 softclipmax l max -STARTLINE R 1 100}
softclipmax 10
addUserKnob {6 glow_enable l Glow +STARTLINE}
glow_enable true
addUserKnob {6 EffectOnly l "Effect Only" +STARTLINE}
EffectOnly true
addUserKnob {22 FixJitter l "Fix Jitter" t "This does nothing... yet still fixes the bug with the expression node not updating its cashe from time to time.\nPlease fix The Foundry!" +STARTLINE}
addUserKnob {26 devider02 l "<b><font color=#70EE70>Color</font><b>"}
addUserKnob {18 GainTint}
GainTint {0.601217 0.681301 1}
addUserKnob {6 GainTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
GainTint_panelDropped true
addUserKnob {18 GammaTint}
GammaTint {1 1 1}
addUserKnob {6 GammaTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
GammaTint_panelDropped true
addUserKnob {26 devide01 l "" +STARTLINE T " "}
addUserKnob {22 Reset l "Reset Color" T "nuke.thisNode().knob(\"GainTint\").setValue(1,0)\nnuke.thisNode().knob(\"GainTint\").setValue(1,1)\nnuke.thisNode().knob(\"GainTint\").setValue(1,2)\nnuke.thisNode().knob(\"GainTint\").setValue(1,3)\nnuke.thisNode().knob(\"GammaTint\").setValue(1,0)\nnuke.thisNode().knob(\"GammaTint\").setValue(1,1)\nnuke.thisNode().knob(\"GammaTint\").setValue(1,2)\nnuke.thisNode().knob(\"GammaTint\").setValue(1,3)" +STARTLINE}
addUserKnob {26 DeviderShimmer l "<b><font color=#70EE70>Shimmer</font><b>"}
addUserKnob {6 shimmer_enable l Shimmer +STARTLINE}
shimmer_enable true
addUserKnob {7 lacunarity l Detail R 0 5}
lacunarity 3.5
addUserKnob {7 noise_gain l Gain}
noise_gain 1
addUserKnob {7 Speed}
Speed 0.76
addUserKnob {7 Noise_Gang l "Time Offset" R 0 1000}
Noise_Gang 240
addUserKnob {26 devider04 l "<b><font color=#70EE70>Masking</font><b>"}
addUserKnob {6 Mask +STARTLINE}
addUserKnob {7 MaskRotation l "Mask Rotation"}
MaskRotation 0.31
addUserKnob {7 MaskGain l "Mask Gain"}
MaskGain 0.4
addUserKnob {7 MaskSoftness R 0 10}
MaskSoftness 2.35
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x7171c600
label Spike
note_font_size 42
xpos -222
ypos 207
bdwidth 270
bdheight 257
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0x388e8e00
label Glow
note_font_size 42
xpos -597
ypos 209
bdwidth 280
bdheight 258
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0x8e388e00
label Glare
note_font_size 42
xpos -1156
ypos 207
bdwidth 468
bdheight 298
}
BackdropNode {
inputs 0
name BackdropNode4
tile_color 0xffffffff
gl_color 0xff
label "WELCOME TO SPOTFLARE"
note_font_size 42
xpos -904
ypos -206
bdwidth 523
bdheight 138
}
BackdropNode {
inputs 0
name BackdropNode5
tile_color 0x71c67100
label "Spot Facing"
note_font_size 42
xpos -1463
ypos 208
bdwidth 252
bdheight 258
}
BackdropNode {
inputs 0
name BackdropNode6
tile_color 0xff
label "PLEASE ENJOY"
note_font_size 42
xpos -801
ypos 896
bdwidth 333
bdheight 160
}
StickyNote {
inputs 0
name StickyNote2
label "This is a super inefficient way\nto avoid the 1-0 seam and\na major performence hit.\nIf anyone have a better solution,\nplease mail me! =)"
note_font_size 8
xpos -1045
ypos 350
}
StickyNote {
inputs 0
name StickyNote1
tile_color 0xcc0000ff
gl_color 0xcc0000ff
label "not yet implamented"
xpos -222
ypos 206
}
Dot {
inputs 0
name Dot19
tile_color 0xff0000ff
xpos -674
ypos -127
hide_input true
}
Dot {
inputs 0
name Dot20
tile_color 0xffff00ff
xpos -658
ypos -127
hide_input true
}
Dot {
inputs 0
name Dot21
tile_color 0xff00ff
xpos -641
ypos -127
hide_input true
}
Dot {
inputs 0
name Dot22
tile_color 0xffffff
xpos -624
ypos -127
hide_input true
}
Dot {
inputs 0
name Dot23
tile_color 0xffff
xpos -607
ypos -127
hide_input true
}
Input {
inputs 0
name Input1
xpos -674
ypos -106
}
Dot {
name Dot13
xpos -640
ypos -25
}
set N9990bf40 [stack 0]
Reformat {
black_outside true
name Reformat1
xpos -674
ypos 11
}
Shuffle {
red black
green black
blue black
alpha black
name Shuffle3
xpos -674
ypos 35
}
Dot {
name Dot1
xpos -640
ypos 131
}
set N99932500 [stack 0]
Dot {
name Dot9
xpos -456
ypos 131
}
set N99937e90 [stack 0]
Dot {
name Dot2
xpos -61
ypos 131
}
Expression {
expr0 "(atan(x-parent.Position.x,-y--parent.Position.y)+ (pi))/(pi*2)"
name Expression8
xpos -95
ypos 268
}
Expression {
expr0 sin(r*(16*pi))
name Expression14
xpos -95
ypos 310
}
Grade {
white 0.89
gamma 0.2
name Grade6
xpos -95
ypos 352
}
Shuffle {
green red
blue red
alpha red
name Shuffle2
xpos -95
ypos 396
}
push $N99937e90
Expression {
temp_name0 xd
temp_expr0 parent.Position.x-x
temp_name1 yd
temp_expr1 parent.Position.y-y
temp_name2 dist
temp_expr2 "sqrt(xd*xd + yd*yd)"
temp_name3 scale
temp_expr3 "dist / ((parent.Scale*1))"
expr0 scale
channel1 {-rgba.red -rgba.green -rgba.blue none}
channel2 {-rgba.red -rgba.green -rgba.blue none}
channel3 {none none none -rgba.alpha}
enable_mix_luminance false
name distance
xpos -490
ypos 262
}
Grade {
white {{pow(1-parent.Gain,4)}}
gamma {{pow2(parent.Gamma)}}
name Grade16
xpos -490
ypos 305
}
Expression {
temp_name3 invsqr
temp_expr3 isnan(r)?0:1/(r*r)
expr0 invsqr
expr1 invsqr
expr2 invsqr
name Inverse_Square
xpos -490
ypos 341
}
Grade {
white {{parent.GainTint.r} {parent.GainTint.g} {parent.GainTint.b} 1}
white_panelDropped true
multiply {1 1 1 1}
multiply_panelDropped true
gamma {{parent.GammaTint} {parent.GammaTint} {parent.GammaTint} 1}
name Grade2
xpos -490
ypos 387
}
Clamp {
maximum 59999
MinClampTo_enable true
MaxClampTo {{maximum}}
MaxClampTo_enable true
name Clamp_Superbrights
xpos -490
ypos 428
}
set N997cbd50 [stack 0]
Merge2 {
inputs 2
operation multiply
name Merge3
xpos -95
ypos 434
}
Dot {
name Dot3
xpos -61
ypos 708
}
Dot {
name Dot15
xpos -572
ypos 708
}
push $N99932500
Dot {
name Dot16
xpos -750
ypos 131
}
set N997f8e10 [stack 0]
Dot {
name Dot17
xpos -868
ypos 131
}
Dot {
name Dot7
xpos -1332
ypos 131
}
Expression {
temp_name0 theta
temp_expr0 pi*(parent.MaskRotation*2)
temp_name1 px
temp_expr1 "cos(theta) * (x-parent.Position.x) - sin(theta) * (y-parent.Position.y) + parent.Position.x"
temp_name2 py
temp_expr2 "sin(theta) * (x-parent.Position.x) + cos(theta) * (y-parent.Position.y) + parent.Position.y"
temp_name3 val
temp_expr3 "(atan(px-parent.Position.x,-py--parent.Position.y)+ pi)/+ (pi*2)"
expr0 "smoothstep(0,1, sin(val*pi))"
name Expression1
xpos -1366
ypos 298
}
Grade {
black 0.033
white {{(pow(parent.MaskGain,2)*10)+0.0001}}
gamma {{(pow(parent.MaskSoftness,2)/2)+0.15}}
name Grade9
xpos -1366
ypos 336
}
Expression {
expr0 max(0,1-r)
expr1 max(0,1-r)
expr2 max(0,1-r)
name Expression17
xpos -1366
ypos 380
}
Dot {
name Dot8
xpos -1332
ypos 745
}
push $N997f8e10
Dot {
name Dot4
xpos -750
ypos 230
}
set N996418e0 [stack 0]
Dot {
name Dot5
xpos -868
ypos 230
}
Expression {
expr0 "(atan(x-parent.Position.x,-y--parent.Position.y)+ pi)/+ (pi*2)"
name inversefacing
xpos -902
ypos 267
}
set N9964caf0 [stack 0]
Dot {
name Dot18
xpos -978
ypos 270
}
Expression {
expr0 pow(sin(r*pi),16)
name reduction
xpos -1012
ypos 313
}
set N99662370 [stack 0]
Dot {
name Dot10
xpos -978
ypos 415
}
push $N99662370
push $N9964caf0
ShuffleCopy {
inputs 2
green red
alpha alpha2
name ShuffleCopy1
xpos -902
ypos 313
}
Expression {
temp_name0 octaves
temp_expr0 5
temp_name1 lacunarity
temp_expr1 parent.lacunarity
temp_name2 gain
temp_expr2 parent.noise_gain
temp_name3 Noise
temp_expr3 g>0.0001?fBm(r,1,1+((frame+parent.Noise_Gang)/((1.0001-parent.Speed)*10000)),octaves,lacunarity,gain):0
expr0 Noise
expr1 Noise
expr2 Noise
name noise_top
xpos -902
ypos 348
}
Grade {
black 0.54
gamma 0.585
black_clamp false
name Grade14
xpos -902
ypos 388
}
push $N996418e0
Expression {
temp_name0 xd
temp_expr0 parent.Position.x-x
temp_name1 yd
temp_expr1 parent.Position.y-y
temp_name2 dist
temp_expr2 "sqrt(xd*xd + yd*yd)"
expr0 "(atan(x-parent.Position.x,y-parent.Position.y)+ pi)/+ (pi*2)"
expr1 dist/width
name facing
xpos -784
ypos 267
}
Expression {
temp_name0 octaves
temp_expr0 5
temp_name1 lacunarity
temp_expr1 parent.lacunarity
temp_name2 gain
temp_expr2 parent.noise_gain
temp_name3 Noise
temp_expr3 fBm(r,1,1+((frame+8+parent.Noise_Gang)/((1.0001-parent.Speed)*10000)),octaves,lacunarity,gain)
expr0 Noise
expr1 Noise
expr2 Noise
name noise
xpos -784
ypos 314
}
Grade {
black 0.54
gamma 0.585
black_clamp false
name Grade15
xpos -784
ypos 412
}
Merge2 {
inputs 2+1
operation copy
maskChannelMask rgba.red
name FixSeam
xpos -902
ypos 412
}
push $N997cbd50
Merge2 {
inputs 2
operation multiply
name Merge1
xpos -902
ypos 436
}
Clamp {
maximum_enable false
name Clamp_Negative_Numbers
xpos -902
ypos 460
}
Dot {
name Dot6
xpos -868
ypos 660
}
push $N997cbd50
Dot {
name Dot11
xpos -456
ypos 587
}
push $N99932500
Merge2 {
inputs 2
operation plus
name Merge6
xpos -674
ypos 584
disable {{1-parent.glow_enable}}
}
Merge2 {
inputs 2
operation plus
name Merge2
xpos -674
ypos 657
disable {{1-parent.shimmer_enable x2012 1}}
}
Merge2 {
inputs 2
operation multiply
name Merge5
xpos -674
ypos 742
disable {{1-parent.Mask}}
}
SoftClip {
conversion "preserve hue and saturation"
softclip_min 1
softclip_max {{parent.softclipmax}}
name SoftClip1
xpos -674
ypos 766
disable {{1-parent.SoftClip}}
}
push $N9990bf40
Dot {
name Dot12
xpos -689
ypos -25
}
Grade {
multiply 0
black_clamp false
enable_mix_luminance false
name Grade1
xpos -723
ypos 77
disable {{1-parent.EffectOnly}}
}
Dot {
name Dot14
xpos -692
ypos 794
}
Merge2 {
inputs 2
operation plus
name Merge7
xpos -674
ypos 791
}
Output {
name Output1
xpos -674
ypos 991
}
end_group
push $Nd8cb3e10
Group {
name FlareSuperStar
selected true
xpos 43760
ypos -2333
addUserKnob {20 User l "Shape Controls"}
addUserKnob {26 ""}
addUserKnob {26 _3 l "Global Controls"}
addUserKnob {41 mode t "the mode in which the tool operates.\nPosition: the flare gets generated at the defined position\nConvolve: the flare gets applied via a convolve of the input image\nOutput Kernel: outputs the kernel that would get feeded into the convolve so you could make further adjustetments and apply as your custom filter to your node of choice" T MasterControl.mode}
addUserKnob {41 center t "defines the center where the flare gets created if in position-mode." -STARTLINE T MasterControl.center}
addUserKnob {6 togglefix l "toggle to fix \"missing channel\" error caused by the convolve" t "Sometimes, when in convolve-mode, the tool gives a \"missing channel\" error. This is a dirty workaround to fix it. It might occure again, then toggle the checkbox again." +STARTLINE}
addUserKnob {41 multiply_1 l intensity t "global intensity" T MasterControl.multiply_1}
addUserKnob {41 gamma_2_1 l gamma t "global gamma" T MasterControl.gamma_2}
addUserKnob {41 scale t "changes the x and y scale of the flare around the center point." T MasterControl.scale}
addUserKnob {41 relativeradius l radius t "Controls the kernel size if in konvolve mode and the radius at which the flare will be zero if falloff to zero is enabled.\nThis is a factor of the image width." T MasterControl.relativeradius}
addUserKnob {26 ""}
addUserKnob {26 "" l "Ray Controls"}
addUserKnob {41 nr l "number of rays" t "Sets the number of rays that will be generated by the flare." T MasterControl.nr}
addUserKnob {41 gamma_4 l "odd ray length" t xfgjxfhjc T Grade5.gamma}
addUserKnob {26 text_3 l "" +STARTLINE T "doesn't actually change the length of the rays,\nbut applies a gamma correction"}
addUserKnob {41 rotation t "Controls the Rotation of the rays." T MasterControl.rotation}
addUserKnob {41 multiply_2 l "ray intensity" t "Controls intensity of the rays." T MasterControl.multiply_2}
addUserKnob {41 gamma_3 l "ray gamma" t "Controls the gamma of the rays." T MasterControl.gamma_3}
addUserKnob {41 thickness t "Lets you adjust the thickness of the rays." T MasterControl.thickness}
addUserKnob {41 multiply l softness t "Lets you control the softness of the rays." T MasterControl.multiply}
addUserKnob {41 coneangle l "Cone angle" t "Controls the angle of the rays." T MasterControl.coneangle}
addUserKnob {26 "" l "Spread Controls"}
addUserKnob {41 sdistn l "spread distance" t "Distance at which the spread will start. This is a factor of the global radius." T MasterControl.sdistn}
addUserKnob {26 text_2 l "" +STARTLINE T "The spread distance is a factor of the radius."}
addUserKnob {41 ssize l "spread angle" t "Spreads the rays via changing their angle from the spreaddistance outwards." T MasterControl.ssize}
addUserKnob {41 sthk l "spread thickness" t "Changes the thickness of the rays from the spreaddistance outwards." T MasterControl.sthk}
addUserKnob {41 sfotype l "spread falloff type" t "Lets you choose between a linear or an exponential falloff of the spread." T MasterControl.sfotype}
addUserKnob {41 gamma l "" t "Gamma control for the spread falloff." -STARTLINE T MasterControl.gamma}
addUserKnob {26 ""}
addUserKnob {41 boolean l "Enable inner Glow" T MasterControl.boolean}
addUserKnob {41 boolean_2 l "Enable Glare" T MasterControl.boolean_2}
addUserKnob {41 boolean_1 l "Crop convolve" t "Crops the result to the image format in convolve mode to reduce boundingbox size." T MasterControl.boolean_1}
addUserKnob {26 ""}
addUserKnob {26 _1 l "" +STARTLINE T "FlareSuperStar v1.2\nby Lukas Fabian - December 2020"}
addUserKnob {20 tab l "Glare Controls"}
addUserKnob {26 ""}
addUserKnob {41 Intensity l intensity t "Controls intensity of the glare." T NoiseControl.Intensity}
addUserKnob {41 gamma_1_1 l gamma t "Controls gamma of the glare." T NoiseControl.gamma_1}
addUserKnob {26 ""}
addUserKnob {41 detail t "Controls the ray detail of the glare." T NoiseControl.detail}
addUserKnob {41 z1 l z t "zOffset for the ray-detail." T NoiseControl.z1}
addUserKnob {41 detail_1 l detail2 t "Controls additional detail for the rays outwards." T NoiseControl2.detail}
addUserKnob {41 z1_1 l z2 t "zOffset for detail2." T NoiseControl2.z1}
addUserKnob {41 sfix l "Enable seam fix" t "If disabled there could be a visible 0-1 in the glare. Also changes the bottom part of the glare appearence. Just try which setting suits your situation." T NoiseControl.sfix}
addUserKnob {26 ""}
addUserKnob {41 speed l "shimmer speed" t "If set to anything bigger then zero the glare will shimmer over time. The bigger the value the faster the shimmer." T NoiseControl.speed}
addUserKnob {41 posspeed l "position change speed" t "Only works properly in position-mode.\nIf the center-position of the flare is changed, the glare will change its shape.\nThe higher the number the bigger the change. If itÂ´s set to zero there wonÂ´t be any change in the glare due to position changes." T NoiseControl.posspeed}
addUserKnob {20 tab_1 l "Glow Controls"}
addUserKnob {26 _2 l "" +STARTLINE}
addUserKnob {41 multiply_3 l "glow intensity" t "Controls the intensity of the glow." T Grade16.multiply}
addUserKnob {41 gamma_2 l "glow gamma" t "Controls the gamma of the glow." T Grade16.gamma}
addUserKnob {20 fotz l "Falloff to Zero"}
addUserKnob {26 ""}
addUserKnob {26 text l "" +STARTLINE T "If \"falloff to zero\" is enabled, the flare will be zero at the point defined by \nthe global radius. If \"fall off to zero\" is disabled it results in an inverse square\nfalloff, this might introduce edges in convolve-mode.\n\nUsually you want to have it on in convolve-mode, and off in position mode.\n\n"}
addUserKnob {26 text_1 l "Falloff to Zero"}
addUserKnob {41 fo l "enable in position mode" T MasterControl.fo}
addUserKnob {41 focm l "enable in convolve mode" T MasterControl.focm}
addUserKnob {41 fotype l "falloff type" t "Lets you choose between a linear or an exponential falloff." T MasterControl.fotype}
addUserKnob {41 gamma_1 l "" t "Gammacontrol for the falloff." -STARTLINE T MasterControl.gamma_1}
addUserKnob {26 ""}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x71c67100
label Controlers
note_font_size 42
xpos 2321
ypos -1190
bdwidth 855
bdheight 322
}
Grade {
inputs 0
black_clamp false
name AngleControl
xpos 2440
ypos -1028
}
StickyNote {
inputs 0
name StickyNote4
label "   create glare    "
note_font_size 40
xpos -1067
ypos -10
}
Grade {
inputs 0
black_clamp false
name ARControl
xpos 2697
ypos -1029
}
Noise {
inputs 0
replace true
zoffset {{z1+frame*(speed/150)}}
translate {13800.29102 822.1937866}
center {2275 1208}
name NoiseControl
xpos 2824
ypos -1028
addUserKnob {20 User l Controls}
addUserKnob {7 z1 l z}
z1 1
addUserKnob {7 speed l "shimmer speed" R 0 5}
speed 1
addUserKnob {7 detail}
detail 15
addUserKnob {41 Intensity l intensity T Grade3.multiply}
addUserKnob {41 gamma_1 l gamma T Grade4.gamma}
addUserKnob {7 posspeed l "position speed" R 0 5}
posspeed 1.5
addUserKnob {6 sfix l "Enable seam fix" +STARTLINE}
sfix true
}
Noise {
inputs 0
replace true
zoffset {{z1+frame*(speed/100)}}
translate {13800.29102 822.1937866}
center {2275 1208}
name NoiseControl2
xpos 2959
ypos -1034
addUserKnob {20 User l "z Controls"}
addUserKnob {7 z1 l z}
z1 1
addUserKnob {7 speed}
speed {{parent.NoiseControl.speed}}
addUserKnob {7 detail l detail2}
detail 10
}
Input {
inputs 0
name img
xpos 1386
ypos -1284
}
Dot {
name Dot19
xpos 1420
ypos -1215
}
Dot {
name Dot11
xpos 1420
ypos -1090
}
set N996112e0 [stack 0]
Dot {
name Dot18
xpos 1826
ypos -1090
}
set N99616c40 [stack 0]
NoOp {
name MasterControl
xpos 2579
ypos -1035
addUserKnob {20 User l Controls}
addUserKnob {26 _1 l "" +STARTLINE}
addUserKnob {26 _4 l "General Controls"}
addUserKnob {4 mode M {Position Convolve "Output Kernel" ""}}
addUserKnob {12 center -STARTLINE}
center {728 644}
addUserKnob {41 multiply_1 l intensity T Grade14.multiply}
addUserKnob {41 gamma_2 l gamma T Grade14.gamma}
addUserKnob {3 nr l "number of rays"}
nr 8
addUserKnob {41 scale T Reformat3.scale}
addUserKnob {7 rotation R 0 360}
addUserKnob {7 radius l "absolute radius" R 1 1000}
radius {{(width/8)*(relativeradius+0.0000001)}}
addUserKnob {7 relativeradius l radius R 0 10}
relativeradius 1
addUserKnob {4 fotype l "falloff type" M {linear exponential}}
fotype exponential
addUserKnob {41 gamma_1 l "" -STARTLINE T Grade12.gamma}
addUserKnob {6 fo l "disable falloff" +STARTLINE}
addUserKnob {6 focm l "enable in convolve mode" +STARTLINE}
focm true
addUserKnob {26 _2 l "" +STARTLINE}
addUserKnob {26 _5 l "Ray Controls"}
addUserKnob {41 multiply_2 l "ray intensity" T Grade15.multiply}
addUserKnob {41 gamma_3 l "ray gamma" T Grade15.gamma}
addUserKnob {7 thickness R -2 2}
addUserKnob {41 multiply l softness T Grade9.multiply}
addUserKnob {41 coneangle l "cone angle" T AngleControl.multiply}
addUserKnob {26 _3 l "" +STARTLINE}
addUserKnob {26 _6 l "Spread Controls"}
addUserKnob {7 sdist l "spread distance safe" R 0.0001 1}
sdist {{sdistn+0.000001}}
addUserKnob {7 sdistn l "spread distance"}
sdistn 0.185
addUserKnob {7 ssize l "spread angle" R -2 2}
addUserKnob {7 sthk l "spread thickness" R -2 2}
addUserKnob {4 sfotype l "spread falloff type" M {linear exponential}}
addUserKnob {41 gamma l "" -STARTLINE T Grade10.gamma}
addUserKnob {26 ""}
addUserKnob {6 boolean l "Enable inner Flare" +STARTLINE}
boolean true
addUserKnob {6 boolean_2 l "enable glare" +STARTLINE}
boolean_2 true
addUserKnob {6 boolean_1 l "Crop convolve" +STARTLINE}
boolean_1 true
}
Reformat {
inputs 0
format "1024 1024 0 0 1024 1024 1 square_1K"
box_width 2000
filter Lanczos4
name Reformat1
xpos 716
ypos -1000
}
Dot {
name Dot7
xpos 750
ypos -937
}
set N99639e30 [stack 0]
Dot {
name Dot8
xpos -150
ypos -937
}
Dot {
name Dot10
xpos -150
ypos -421
}
set N99444af0 [stack 0]
Dot {
name Dot20
xpos -150
ypos 96
}
set N9944a3e0 [stack 0]
Dot {
name Dot16
xpos -150
ypos 402
}
set N9944fde0 [stack 0]
Dot {
name Dot9
xpos -150
ypos 550
}
Expression {
temp_name0 centerx
temp_expr0 width/2
temp_name1 centery
temp_expr1 height/2
temp_name2 radius
temp_expr2 (width/2)-10
expr0 "(radius - sqrt(  pow2(x-centerx)+pow2(y-centery)  )  ) / radius"
name Expression13
xpos 26
ypos 546
}
push $N996112e0
Dot {
name Dot12
xpos -17
ypos -1090
}
Shuffle {
red black
green black
blue black
alpha black
name Shuffle5
label "\[value in]"
xpos -51
ypos -1005
}
Dot {
name Dot13
xpos -17
ypos -893
}
set N99481130 [stack 0]
Dot {
name Dot14
xpos -17
ypos -510
}
set N994869a0 [stack 0]
Dot {
name Dot6
xpos -17
ypos 174
}
set N9948c330 [stack 0]
Dot {
name Dot1
xpos -17
ypos 381
}
set N99491cc0 [stack 0]
Dot {
name Dot15
xpos -17
ypos 483
}
Expression {
temp_name0 centerx
temp_expr0 parent.MasterControl.center.x
temp_name1 centery
temp_expr1 parent.MasterControl.center.y
temp_name2 radius
temp_expr2 parent.MasterControl.radius
temp_name3 sw
temp_expr3 parent.MasterControl.scale.0
expr0 "(radius - sqrt(  pow2((x-centerx)*(1/sw))+pow2((y-centery)*(1/parent.MasterControl.scale.1))  )  ) / radius"
name Expression8
xpos 197
ypos 478
}
Switch {
inputs 2
which {{parent.MasterControl.mode}}
name Switch3
xpos 197
ypos 564
}
Grade {
name Grade20
xpos 197
ypos 604
}
set N994b63d0 [stack 0]
Expression {
expr0 pow2(r)
name Expression9
xpos 117
ypos 650
}
Dot {
name Dot4
label expo
xpos 151
ypos 691
}
push $N994b63d0
Dot {
name Dot37
xpos 338
ypos 650
}
Dot {
name Dot5
label linear
xpos 338
ypos 686
}
Switch {
inputs 2
which {{parent.MasterControl.fotype}}
name Switch1
xpos 201
ypos 720
}
Grade {
black_clamp false
name Grade12
xpos 201
ypos 775
}
Shuffle {
green red
blue red
alpha black
name Shuffle8
label "\[value in]"
xpos 201
ypos 812
}
Dot {
name Dot32
xpos 235
ypos 962
}
set N99514f50 [stack 0]
Dot {
name Dot41
xpos 235
ypos 1011
}
push $N9944fde0
Dot {
name Dot39
xpos 480
ypos 402
}
Expression {
temp_name0 centerx
temp_expr0 512
temp_name1 centery
temp_expr1 512
temp_name2 radius
temp_expr2 parent.MasterControl.radius
expr0 "sqrt(  pow2((x/width*1024)-centerx)+pow2((y/height*1024)-centery) )"
name Expression28
xpos 446
ypos 526
}
Expression {
expr0 isnan(r)?0:1/(r*r)
name Expression29
xpos 446
ypos 568
}
Merge2 {
inputs 2
operation multiply
name Merge10
xpos 446
ypos 1007
disable {{1-parent.MasterControl.focm}}
}
Dot {
name Dot40
xpos 480
ypos 1070
}
push $N99514f50
push $N99491cc0
Dot {
name Dot38
xpos 608
ypos 381
}
Expression {
temp_name0 centerx
temp_expr0 parent.MasterControl.center.x/width*1920
temp_name1 centery
temp_expr1 parent.MasterControl.center.y/height*1080
temp_name2 sw
temp_expr2 parent.MasterControl.scale.0
temp_name3 sh
temp_expr3 parent.MasterControl.scale.1
expr0 "sqrt(  pow2(((x/width*1920)-centerx)*(1/sw))+pow2(((y/height*1080)-centery)*(1/sh)) )"
name Expression2
xpos 574
ypos 501
}
Expression {
expr0 isnan(r)?0:1/(r*r)
name Expression3
xpos 574
ypos 544
}
Merge2 {
inputs 2
operation multiply
name Merge3
xpos 574
ypos 958
disable {{1-parent.MasterControl.fo}}
}
Switch {
inputs 2
which {{parent.Switch3.which}}
name Switch10
xpos 574
ypos 1066
}
Grade {
multiply 1000
black_clamp false
name Grade1
xpos 574
ypos 1189
}
Clamp {
maximum 2000
name Clamp1
xpos 574
ypos 1237
}
Dot {
name Dot21
xpos 608
ypos 1358
}
set N993bef20 [stack 0]
Grade {
black_clamp false
name Grade4
xpos -675
ypos 1354
}
push $N9944a3e0
Dot {
name Dot24
xpos -656
ypos 96
}
Dot {
name Dot22
xpos -1105
ypos 96
}
set N993dc580 [stack 0]
Dot {
name Dot29
xpos -1739
ypos 186
}
set N993e29f0 [stack 0]
Expression {
temp_name0 centerx
temp_expr0 width/2
temp_name1 centery
temp_expr1 height/2
temp_name2 sw
temp_expr2 parent.MasterControl.scale.0
temp_name3 sh
temp_expr3 parent.MasterControl.scale.1
expr0 "atan((x - centerx)*(1/sw) , (y - centery)*(1/sh))/pi"
name Expression24
xpos -1691
ypos 262
}
Expression {
expr0 sqrt(pow2(r))
name Expression25
xpos -1691
ypos 326
}
Grade {
blackpoint 0.6
name Grade11
xpos -1691
ypos 412
}
push $N993e29f0
Expression {
temp_name0 centerx
temp_expr0 width/2
temp_name1 centery
temp_expr1 height/2
temp_name2 sw
temp_expr2 parent.MasterControl.scale.0
temp_name3 sh
temp_expr3 parent.MasterControl.scale.1
expr0 "(atan(    (x - centerx)*(1/sw) , (-y -- centery)*(1/sh) )) / (pi*2)"
name Expression26
xpos -1859
ypos 254
}
Dot {
name Dot33
xpos -1825
ypos 510
}
push $N993dc580
Dot {
name Dot25
xpos -1105
ypos 283
}
set N9942f3f0 [stack 0]
Expression {
temp_name0 centerx
temp_expr0 width/2
temp_name1 centery
temp_expr1 height/2
expr0 "atan(x - centerx , y - centery)/pi"
name Expression15
xpos -1139
ypos 451
}
Copy {
inputs 2+1
from0 rgba.red
to0 rgba.red
maskChannelMask rgba.red
name Copy3
xpos -1139
ypos 500
disable {{1-parent.NoiseControl.sfix}}
}
Dot {
name Dot27
xpos -1105
ypos 552
}
push $N9948c330
Dot {
name Dot23
xpos -935
ypos 174
}
set N9925a110 [stack 0]
Dot {
name Dot28
xpos -1351
ypos 186
}
set N9925fa80 [stack 0]
Expression {
temp_name0 centerx
temp_expr0 parent.MasterControl.center.x
temp_name1 centery
temp_expr1 parent.MasterControl.center.y
temp_name2 sw
temp_expr2 parent.MasterControl.scale.0
temp_name3 sh
temp_expr3 parent.MasterControl.scale.1
expr0 "atan((x - centerx)*(1/sw) , (y - centery)*(1/sh))/pi"
name Expression21
xpos -1303
ypos 258
}
Expression {
expr0 sqrt(pow2(r))
name Expression22
xpos -1303
ypos 308
}
Grade {
blackpoint 0.6
name Grade6
xpos -1303
ypos 355
}
push $N9925fa80
Expression {
temp_name0 centerx
temp_expr0 parent.MasterControl.center.x
temp_name1 centery
temp_expr1 parent.MasterControl.center.y
temp_name2 sw
temp_expr2 parent.MasterControl.scale.0
temp_name3 sh
temp_expr3 parent.MasterControl.scale.1
expr0 "(atan(    (x - centerx)*(1/sw) , (-y -- centery)*(1/sh) )  ) / (pi*2)"
name Expression23
xpos -1474
ypos 252
}
Dot {
name Dot34
xpos -1440
ypos 428
}
push $N9925a110
Expression {
temp_name0 centerx
temp_expr0 parent.MasterControl.center.x
temp_name1 centery
temp_expr1 parent.MasterControl.center.y
temp_name2 sw
temp_expr2 parent.MasterControl.scale.0
temp_name3 sh
temp_expr3 parent.MasterControl.scale.1
expr0 "atan((x - centerx)*(1/sw) , (y - centery)*(1/sh))/pi"
name Expression4
xpos -969
ypos 377
}
Copy {
inputs 2+1
from0 rgba.red
to0 rgba.red
maskChannelMask rgba.red
name Copy2
xpos -969
ypos 418
disable {{1-parent.NoiseControl.sfix}}
}
Switch {
inputs 2
which {{parent.Switch3.which}}
name Switch5
xpos -969
ypos 548
}
set N992cc3c0 [stack 0]
push $N9942f3f0
Expression {
temp_name0 cx
temp_expr0 width/2
temp_name1 cy
temp_expr1 height/2
temp_name2 sw
temp_expr2 parent.MasterControl.scale.0
temp_name3 sh
temp_expr3 parent.MasterControl.scale.1
expr0 "sqrt( pow2( ((x-cx)*(1/sw))/width ) + pow2( ((y-cy)*(1/sh))/width )  )"
name Expression16
xpos -756
ypos 408
}
push $N9925a110
Dot {
name Dot26
xpos -612
ypos 266
}
Expression {
temp_name0 cx
temp_expr0 parent.MasterControl.center.x
temp_name1 cy
temp_expr1 parent.MasterControl.center.y
temp_name2 sw
temp_expr2 parent.MasterControl.scale.0
temp_name3 sh
temp_expr3 parent.MasterControl.scale.1
expr0 "sqrt( pow2( ((x-cx)*(1/sw))/width ) + pow2( ((y-cy)*(1/sh))/width )  )"
name Expression19
xpos -646
ypos 408
}
Switch {
inputs 2
which {{parent.Switch3.which}}
name Switch9
xpos -646
ypos 475
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.green
name Copy1
xpos -646
ypos 542
}
set N99303a60 [stack 0]
Expression {
temp_name0 oct
temp_expr0 parent.NoiseControl.octaves
temp_name1 lac
temp_expr1 parent.NoiseControl.lacunarity
temp_name2 gain
temp_expr2 parent.NoiseControl.gain
temp_name3 y
temp_expr3 ((parent.MasterControl.center.x/width)+(parent.MasterControl.center.y/height))*2*parent.NoiseControl.posspeed
expr0 "fBm((r)*parent.NoiseControl2.detail , y, parent.NoiseControl2.zoffset+3, oct, lac, gain)"
expr1 0
expr2 0
expr3 0
name Expression20
xpos -393
ypos 604
}
push $N99303a60
Expression {
temp_name0 oct
temp_expr0 parent.NoiseControl.octaves
temp_name1 lac
temp_expr1 parent.NoiseControl.lacunarity
temp_name2 gain
temp_expr2 parent.NoiseControl.gain
temp_name3 y
temp_expr3 ((parent.MasterControl.center.x/width)+(parent.MasterControl.center.y/height))*2*parent.NoiseControl.posspeed
expr0 "fBm((r-g)*parent.NoiseControl2.detail , y, parent.NoiseControl2.zoffset, oct, lac, gain)"
expr1 0
expr2 0
expr3 0
name Expression18
xpos -530
ypos 607
}
push $N99303a60
Expression {
temp_name0 oct
temp_expr0 parent.NoiseControl.octaves
temp_name1 lac
temp_expr1 parent.NoiseControl.lacunarity
temp_name2 gain
temp_expr2 parent.NoiseControl.gain
temp_name3 y
temp_expr3 ((parent.MasterControl.center.x/width)+(parent.MasterControl.center.y/height))*2*parent.NoiseControl.posspeed
expr0 "fBm((r+g)*parent.NoiseControl2.detail , y, parent.NoiseControl2.zoffset, oct, lac, gain)"
expr1 0
expr2 0
expr3 0
name Expression17
xpos -646
ypos 610
}
Merge2 {
inputs 2
operation plus
mix 0.5
name Merge8
xpos -605
ypos 660
}
Merge2 {
inputs 2
operation plus
mix 0.5
name Merge9
xpos -605
ypos 709
}
Dot {
name Dot35
xpos -571
ypos 781
}
push $N992cc3c0
Expression {
temp_name0 oct
temp_expr0 parent.NoiseControl.octaves
temp_name1 lac
temp_expr1 parent.NoiseControl.lacunarity
temp_name2 gain
temp_expr2 parent.NoiseControl.gain
temp_name3 y
temp_expr3 ((parent.MasterControl.center.x/width)+(parent.MasterControl.center.y/width))*2*parent.NoiseControl.posspeed
expr0 "fBm(r*parent.NoiseControl.detail , y, parent.NoiseControl.zoffset, oct, lac, gain)"
name Expression14
xpos -969
ypos 623
}
Merge2 {
inputs 2
operation plus
mix 0.5
name Merge7
xpos -969
ypos 777
}
Grade {
name Grade2
xpos -969
ypos 869
}
Merge2 {
inputs 2
operation multiply
name Merge4
xpos -969
ypos 1354
}
Clamp {
maximum 2000
name Clamp2
xpos -969
ypos 1511
}
Shuffle {
green red
blue red
alpha black
name Shuffle7
label "\[value in]"
xpos -969
ypos 1576
}
Grade {
multiply 0.4
black_clamp false
name Grade3
xpos -969
ypos 1635
}
Dot {
name Dot30
xpos -935
ypos 1921
}
push $N993bef20
Shuffle {
green red
blue red
alpha black
name Shuffle6
label "\[value in]"
xpos 574
ypos 1515
}
Grade {
black_clamp false
name Grade16
xpos 574
ypos 1588
}
Dot {
name Dot31
xpos 608
ypos 1687
}
push $N993bef20
push $N99444af0
Expression {
temp_name0 centerx
temp_expr0 width/2
temp_name1 centery
temp_expr1 height/2
temp_name2 spdist
temp_expr2 (width/2-10)*parent.MasterControl.sdist
expr0 "(sqrt(  pow2(x-centerx)+pow2(y-centery)  ) -spdist ) / spdist"
name Expression11
xpos 156
ypos -377
}
push $N994869a0
Expression {
temp_name0 centerx
temp_expr0 parent.MasterControl.center.x
temp_name1 centery
temp_expr1 parent.MasterControl.center.y
temp_name2 spdist
temp_expr2 parent.MasterControl.radius*parent.MasterControl.sdist
expr0 "(sqrt(  pow2((x-centerx)*(1/parent.MasterControl.scale.0))+pow2((y-centery)*(1/parent.MasterControl.scale.1))  ) -spdist ) / spdist"
name Expression6
xpos 334
ypos -403
}
Switch {
inputs 2
which {{parent.Switch3.which}}
name Switch4
xpos 334
ypos -368
}
Grade {
name Grade8
xpos 334
ypos -323
}
set N9903d7e0 [stack 0]
Expression {
expr0 pow2(r)
name Expression7
xpos 254
ypos -279
}
Dot {
name Dot3
label expo
xpos 288
ypos -241
}
push $N9903d7e0
Dot {
name Dot2
label linear
xpos 440
ypos -271
}
Switch {
inputs 2
which {{parent.MasterControl.sfotype}}
name Switch7
xpos 343
ypos -206
}
Grade {
black_clamp false
name Grade10
xpos 343
ypos -172
}
set N99073a00 [stack 0]
Grade {
multiply {{parent.MasterControl.sthk}}
black_clamp false
name Grade13
xpos 343
ypos -117
}
set N99085a90 [stack 0]
push $N99073a00
push $N99639e30
Dot {
name Dot42
xpos 750
ypos -822
}
set N99097f80 [stack 0]
Expression {
temp_name0 centerx
temp_expr0 width/2
temp_name1 centery
temp_expr1 height/2
temp_name2 nr
temp_expr2 parent.MasterControl.nr
temp_name3 r
temp_expr3 radians(parent.MasterControl.rotation)
expr0 "cos(  (atan((x - centerx) , (y - centery))+r+(2*pi/nr))  *(nr/2))"
name Expression30
xpos 730
ypos -726
}
push $N99481130
Dot {
name Dot36
xpos 981
ypos -893
}
set N990adb30 [stack 0]
Expression {
temp_name0 centerx
temp_expr0 parent.MasterControl.center.x
temp_name1 centery
temp_expr1 parent.MasterControl.center.y
temp_name2 nr
temp_expr2 parent.MasterControl.nr
temp_name3 r
temp_expr3 radians(parent.MasterControl.rotation)
expr0 "cos(  (atan((x - centerx)*(1/parent.MasterControl.scale.0) , (y - centery)*(1/parent.MasterControl.scale.1))+r+(2*pi/nr))  * (nr/2))"
name Expression12
xpos 1026
ypos -809
}
Switch {
inputs 2
which {{parent.Switch3.which}}
name Switch11
xpos 1026
ypos -658
}
Expression {
temp_name0 ca
temp_expr0 parent.MasterControl.coneangle
expr0 ((r-1)*ca*pi)+1
name Expression32
xpos 1026
ypos -588
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.green
name Copy6
xpos 1026
ypos -110
}
Expression {
temp_name0 ca
temp_expr0 parent.MasterControl.ssize*-1
expr0 ((r-1)*(ca*g+1))+1
expr1 0
name Expression34
xpos 1026
ypos -21
}
Merge2 {
inputs 2
operation plus
name Merge14
xpos 1026
ypos 37
}
Grade {
blackpoint {{Grade9.blackpoint}}
blackpoint_panelDropped {{Grade9.blackpoint_panelDropped}}
whitepoint {{Grade9.whitepoint}}
whitepoint_panelDropped {{Grade9.whitepoint_panelDropped}}
black {{Grade9.black}}
black_panelDropped {{Grade9.black_panelDropped}}
white {{Grade9.white}}
white_panelDropped {{Grade9.white_panelDropped}}
multiply {{Grade9.multiply}}
multiply_panelDropped {{Grade9.multiply_panelDropped}}
add {{Grade9.add}}
add_panelDropped {{Grade9.add_panelDropped}}
gamma {{Grade9.gamma}}
gamma_panelDropped {{Grade9.gamma_panelDropped}}
reverse {{Grade9.reverse}}
black_clamp {{Grade9.black_clamp}}
white_clamp {{Grade9.white_clamp}}
inject {{Grade9.inject}}
invert_mask {{Grade9.invert_mask}}
fringe {{Grade9.fringe}}
process_mask {{Grade9.process_mask}}
invert_unpremult {{Grade9.invert_unpremult}}
enable_mix_luminance {{Grade9.enable_mix_luminance}}
mix_luminance {{Grade9.mix_luminance}}
mix {{Grade9.mix}}
name Grade19
xpos 1026
ypos 116
}
Merge2 {
inputs 2
operation multiply
name Merge2
xpos 1046
ypos 1309
}
Grade {
name Grade5
label "odd ray grade"
xpos 1046
ypos 1372
}
push $N993bef20
push $N99085a90
push $N99073a00
push $N99097f80
Expression {
temp_name0 centerx
temp_expr0 width/2
temp_name1 centery
temp_expr1 height/2
temp_name2 nr
temp_expr2 parent.MasterControl.nr
temp_name3 r
temp_expr3 radians(parent.MasterControl.rotation)
expr0 "cos(  (atan((x - centerx) , (y - centery))+r)  * (nr/2))"
name Expression1
xpos 564
ypos -716
}
push $N990adb30
Expression {
temp_name0 centerx
temp_expr0 parent.MasterControl.center.x
temp_name1 centery
temp_expr1 parent.MasterControl.center.y
temp_name2 nr
temp_expr2 parent.MasterControl.nr
temp_name3 r
temp_expr3 radians(parent.MasterControl.rotation)
expr0 "cos(  (atan((x - centerx)*(1/parent.MasterControl.scale.0) , (y - centery)*(1/parent.MasterControl.scale.1))+r)  * (nr/2))"
name Expression5
xpos 838
ypos -807
}
Switch {
inputs 2
which {{parent.Switch3.which}}
name Switch8
xpos 838
ypos -653
}
Expression {
temp_name0 ca
temp_expr0 parent.MasterControl.coneangle
expr0 ((r-1)*ca*pi)+1
name Expression31
xpos 838
ypos -583
}
Copy {
inputs 2
from0 rgba.red
to0 rgba.green
name Copy5
xpos 838
ypos -178
}
Expression {
temp_name0 ca
temp_expr0 parent.MasterControl.ssize*-1
expr0 ((r-1)*(ca*g+1))+1
expr1 0
name Expression33
xpos 838
ypos -89
}
Merge2 {
inputs 2
operation plus
name Merge13
xpos 838
ypos -33
}
Grade {
add {{parent.MasterControl.thickness}}
white_clamp true
name Grade9
xpos 838
ypos 81
}
Merge2 {
inputs 2
operation multiply
name Merge1
xpos 838
ypos 1354
}
Merge2 {
inputs 2
operation max
name Merge11
selected true
xpos 923
ypos 1444
}
Shuffle {
green red
blue red
alpha black
name Shuffle1
label "\[value in]"
xpos 923
ypos 1510
}
Grade {
black_clamp false
name Grade15
xpos 923
ypos 1592
}
Merge2 {
inputs 2
operation plus
name Merge6
xpos 923
ypos 1683
disable {{1-parent.MasterControl.boolean}}
}
Merge2 {
inputs 2
operation plus
name Merge5
xpos 923
ypos 1917
disable {{1-parent.MasterControl.boolean_2}}
}
Shuffle {
alpha black
name Shuffle2
label "\[value in]"
xpos 923
ypos 2293
}
Grade {
black_clamp false
name Grade14
xpos 923
ypos 2637
}
Dot {
name Dot17
xpos 957
ypos 2874
}
set N98e50230 [stack 0]
Transform {
scale {{parent.Reformat3.scale.0} {parent.Reformat3.scale.1}}
center {{width/2} {height/2}}
filter Mitchell
name Transform1
label scale
xpos 1096
ypos 2864
}
Reformat {
type scale
scale {1 1}
resize none
filter Lanczos4
name Reformat3
label "scale format"
xpos 1221
ypos 2864
}
Reformat {
type scale
scale {{parent.MasterControl.radius/200}}
filter Lanczos4
name Reformat2
label radius
xpos 1338
ypos 2864
}
Shuffle {
alpha white
name Shuffle4
label "\[value in]"
xpos 1448
ypos 2864
}
set N98e86b90 [stack 0]
push $N98e86b90
Shuffle {
alpha white
name Shuffle10
label "\[value in]"
xpos 1552
ypos 2864
disable {{parent.togglefix}}
}
Grade {
multiply 1e-05
black_clamp false
name Grade17
label normalize
xpos 1662
ypos 2864
}
push $N99616c40
Shuffle {
alpha white
name Shuffle3
label "\[value in]"
xpos 1792
ypos 2574
}
Convolve2 {
inputs 2
channels rgba
filter_channel rgba.red
use_input_channels true
normalize false
name Convolve1
xpos 1792
ypos 2870
}
Shuffle {
alpha black
name Shuffle9
label "\[value in]"
xpos 1792
ypos 2919
}
Crop {
box {0 0 {input.width} {input.height}}
name Crop1
xpos 1792
ypos 2993
disable {{1-parent.MasterControl.boolean_1}}
}
push $N98e50230
Switch {
inputs 3
which {{parent.Switch3.which}}
name Switch2
xpos 1380
ypos 3232
}
Output {
name Output1
xpos 1380
ypos 3336
}
StickyNote {
inputs 0
name StickyNote1
label "   create rays    "
note_font_size 40
xpos 1188
ypos -730
}
StickyNote {
inputs 0
name StickyNote2
label "    spread    "
note_font_size 40
xpos 1168
ypos -103
}
StickyNote {
inputs 0
name StickyNote3
label "   create glow    "
note_font_size 40
xpos 642
ypos 592
}
StickyNote {
inputs 0
name StickyNote5
label "    falloff to zero    "
note_font_size 40
xpos 117
ypos 1047
}
StickyNote {
inputs 0
name StickyNote6
label "    convolve    "
note_font_size 40
xpos 1557
ypos 2747
}
end_group
push $Nd8cb3e10
Group {
name Cloud_Maker_v1
tile_color 0xff0000ff
selected true
xpos 43761
ypos -2469
addUserKnob {20 FluffyCloud_01}
addUserKnob {26 BasicSphericalGeo l "Basic Spherical Geo"}
addUserKnob {41 columns l "geo samples" -STARTLINE T Sphere1.columns}
addUserKnob {41 scaling l "Cloud Geo Scaler" T Sphere1.scaling}
addUserKnob {26 GeoDisplacer l "Geo Displace Setup"}
addUserKnob {41 weight T DisplaceGeo1.weight}
addUserKnob {41 scale T DisplaceGeo1.scale}
addUserKnob {26 CloudSeedSetter l "Cloud Seed Setter"}
addUserKnob {41 first_frame l "Cloud Seed" +INVISIBLE T FrameHold3.first_frame}
addUserKnob {26 noiseSpecs l "Noise Values"}
addUserKnob {41 size l x/ysize T Noise3.size}
addUserKnob {41 zoffset l z T Noise3.zoffset}
addUserKnob {41 gain T Noise3.gain}
addUserKnob {41 gamma T Noise3.gamma}
addUserKnob {26 opac l Opacity}
addUserKnob {41 temp_expr0 l "Cloud Opacity" T ParticleExpression1.temp_expr0}
}
Constant {
inputs 0
channels rgb
format "128 128 0 0 128 128 1 128x128"
name Constant3
xpos -311
ypos 364
}
Constant {
inputs 0
channels rgb
format "256 256 0 0 256 256 1 square_256"
name Constant5
xpos -483
ypos 403
}
Noise {
output rgb
size 45
zoffset 0.5
gain 0.125
gamma 0.24
translate {126000 62000}
center {960 540}
name Noise3
xpos -483
ypos 508
}
Roto {
output alpha
premultiply rgb
curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44700000 x44070000}
    {a}
    {curvegroup Ellipse2 512 bezier
     {{cc
       {f 8192}
       {px 1
        {xc17d9c0f 0}
        {x430f836a x42969386}
        {x417d9c0f 0}
        {0 xc17bd773}
        {x434760a6 x426613f2}
        {0 x417bd773}
        {x417d9c0f 0}
        {x430f836a x430449c3}
        {xc17d9c0f 0}
        {0 x417bd773}
        {x42e5a06f x42cf9386}
        {0 xc17bd773}}}
      {cc
       {f 8192}
       {px 1
        {xc21f91ec xbed53501}
        {x40c89920 xc2394404}
        {x421f9206 x3ed09b52}
        {xbf49bd84 xc1fa75c3}
        {x41eccccd 0}
        {x3f4ae579 x41fa758e}
        {x4219f86c x3bf33ffe}
        {0 x41eccccd}
        {xc219f86c xb6fffff6}
        {x3ec8ff97 x41ec0f28}
        {xc1eccccd 0}
        {xbec6b24a xc1ec0f5c}}}}
     {t
   {{1 x429a999a}}
   {{1 x42493333}}  0
   {{1 0}}
   {{1 0}}  0 0 0
   {{1 0}}
   {{1 1}}
   {{1 1}}  1
   {{1 0}}}
     {a spx 0 spy 0 sb 1 nv x40000000 tt x40c00000 view2 x40000000}}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {px 1
        {xc1e5c534 0}
        {x42ffa74b x42758bac}
        {x418e7528 0}
        {xc115f960 xc1442158}
        {x431b3333 x42c46666}
        {x40b7d6e0 x40f06ae0}
        {0 xc11cda18}
        {x432ddc6a x42f276e7}
        {0 x41251b78}
        {x40c9df60 xc0f75ec0}
        {x431a999a x430e999a}
        {xc1176790 x413986f0}
        {x4189dcc0 0}
        {x42fae09b x432b869c}
        {xc1130d90 0}
        {x40efc130 x40708080}
        {x42b20000 x432ccccd}
        {xc17ebd40 xc0ff88a0}
        {0 x418c5754}
        {x428bb454 x42f276e7}
        {0 xc1ce625c}}}
      {cc
       {f 8192}
       {px 1
        {xc2909208 xbf2eb900}
        {x410f48a8 xc25062d0}
        {x4233448c x3ed3fb80}
        {xc1811c90 xc1c76222}
        {x4220ca00 xc203d9c0}
        {x411e4400 x417467c0}
        {xbf0ae900 xc19bfdd4}
        {x42687380 xc180f48c}
        {x3f131000 x41a43374}
        {x4192ad70 xc0d5e480}
        {x424651e4 x41ecc388}
        {xc1b5cf60 x41048fd0}
        {x41d32738 x41129aa0}
        {x40d22630 x428a390e}
        {xc1a8ae68 xc0ea3b20}
        {x415d5918 xc083b4c0}
        {xc1e9dfc0 x421c7698}
        {xc20caca4 x41276850}
        {x3ef7a980 x42038bda}
        {xc2568a73 0}
        {xbf340500 xc2417380}}}}
     {t
   {{1 x429a999a}}
   {{1 x42493333}}  0
   {{1 0}}
   {{1 0}}  0 0 0
   {{1 0}}
   {{1 1}}
   {{1 1}}  1
   {{1 0}}}
     {a spx 0 spy 0 sb 1 nv x40000000 tt x40c00000 view2 x40000000}}}}}}
toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 tt 5 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 6 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { addPoints str 1 ssx 1 ssy 1 sf 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
toolbar_brush_hardness 0.200000003
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {320 240}
colorOverlay {0 0 0 0}
lifetime_type "all frames"
motionblur_shutter_offset_type centred
source_translate_round false
source_black_outside true
name Roto2
xpos -483
ypos 558
}
set N164febd0 [stack 0]
Constant {
inputs 0
channels rgb
format "512 512 0 0 512 512 1 square_512"
name Constant4
xpos 276
ypos 431
}
Noise {
size 43
zoffset 3.18
lacunarity 1.78
center {1024 778}
name Noise2
xpos 276
ypos 634
}
Constant {
inputs 0
channels rgb
color 1
format "512 512 0 0 512 512 1 square_512"
name Constant1
xpos 116
ypos 361
}
Dot {
name Dot7
xpos 150
ypos 520
}
Constant {
inputs 0
channels rgb
format "512 512 0 0 512 512 1 square_512"
name Constant2
xpos -32
ypos 288
}
Noise {
zoffset {{"frame/25 + (parent.fogBox_seed*10)"}}
gain 0.606
gamma 0.55
center {960 540}
name Noise1
xpos -32
ypos 425
}
Merge2 {
inputs 2
mix {{"1 - parent.fogBox_randomDensity"}}
name Merge1
xpos -32
ypos 599
disable true
}
Sphere {
rows 10
columns 4
name Sphere1
xpos -32
ypos 672
}
DisplaceGeo {
inputs 2
scale 0.9
weight {3 1 1}
filter_size 24
name DisplaceGeo1
xpos -32
ypos 745
}
set N40848510 [stack 0]
push $N164febd0
Blur {
channels alpha
size 21
name Blur1
xpos -483
ypos 615
}
Shuffle {
alpha red
name Shuffle1
xpos -483
ypos 666
}
BlendMat {
surfaceblend modulate
name BlendMat2
xpos -483
ypos 725
}
push $N40848510
Input {
inputs 0
name ParticleMerge
xpos 285
ypos 701
}
ParticleEmitter {
inputs 3
start_frame -42
rate 20
lifetime_variation 3
velocity 0
velocity_variation 0.01
size 5
size_variation 4
name ParticleEmitter3
xpos -32
ypos 829
}
set N29cdb030 [stack 0]
push 0
push 0
Viewer {
inputs 5
frame 21
frame_range 1-100
input_number 2
name Viewer1
xpos -216
ypos 592
}
push $N29cdb030
ParticleExpression {
temp_name0 dropOpacity
temp_expr0 .05
temp_expr0_pp false
opacityexpr dropOpacity
name ParticleExpression1
xpos -32
ypos 883
}
Scene {
name Scene3
xpos -22
ypos 961
}
FrameHold {
firstFrame 43
name FrameHold3
xpos -32
ypos 1107
}
Output {
name Output1
xpos -32
ypos 1240
}
end_group
