set cut_paste_input [stack 0]
version 15.0 v4
BackdropNode {
inputs 0
name BackdropNode52
label "Glow/Light/Haze\n---------------------------------------\napGlow\n\nExpoGlow\n\nGlowExpo\n\nExpoBlur\n\nDirecBlur\n\nMotionBlurPaint\n\nWaveBlur\n\nX_Denoise\n\nX_sharpen\n\nx_soften\n\napGlow\n\nBeutifulSkin\n\nBlackExpon\n\nHaltin\n\nHighPass\n\nDiffuse1\n\niConvolve\n\nGuidedBlur\n\nCatsEyeDefocus\n\nLightWrapPro\n\nbm_Lightwrap\n\nConvolution Matrix\n\nDeHaze\n\nRankFilter\n\nRadialDialate\n\n"
note_font_size 31
selected true
xpos 42422
ypos -3440
bdwidth 516
bdheight 2136
}
push $cut_paste_input
Group {
name RadialDilate
tile_color 0xcc804eff
note_font_color 0xffffffff
selected true
xpos 42758
ypos -1755
addUserKnob {20 RadialDilate}
addUserKnob {41 "Local GPU: " T BlinkScript4.gpuName}
addUserKnob {41 "Use GPU if Available" T BlinkScript4.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {41 size_wh l size T BlinkScript4.size_wh}
addUserKnob {41 blackoutside l "black outside" -STARTLINE T BlinkScript4.blackoutside}
addUserKnob {26 _1 l "" +STARTLINE}
addUserKnob {41 maskChannelMask l mask -STARTLINE T Merge1.maskChannelMask}
addUserKnob {41 inject -STARTLINE T Merge1.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge1.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge1.fringe}
addUserKnob {41 mix T Merge1.mix}
addUserKnob {26 ""}
addUserKnob {26 credit l "" +STARTLINE T "Chris Fryer | 2021\n"}
}
Input {
inputs 0
name Inputmask
xpos -54
ypos 43
number 1
}
Dot {
name Dot1
xpos -20
ypos 106
}
Input {
inputs 0
name Input
xpos -270
ypos -100
}
AdjBBox {
numpixels {{ceil(abs(parent.BlinkScript4.size_wh.w))} {ceil(abs(parent.BlinkScript4.size_wh.h))}}
name AdjBBox1
xpos -270
ypos -45
}
set N68a56c40 [stack 0]
BlackOutside {
name BlackOutside1
xpos -195
ypos -5
disable {{1-parent.BlinkScript4.blackoutside}}
}
BlinkScript {
recompileCount 69
ProgramGroup 1
KernelDescription "2 \"RadialDilate\" iterate pixelWise 575f702e36ae4a4540fceb6e0eb10c07d958cba14a62650f9022854aca2b2c0d 2 \"src\" Read Ranged2D \"dst\" Write Point 2 \"size\" Float 2 AAAAAAAAAAA= \"invert\" Bool 1 AA== 2 \"size\" 2 1 \"invert\" 1 1 3 \"srcrangeMin\" Int 2 1 AAAAAAAAAAA= \"srcrangeMax\" Int 2 1 AAAAAAAAAAA= \"output\" Float 4 1 AAAAAAAAAAAAAAAAAAAAAA=="
kernelSource "\nkernel RadialDilate : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRanged2D, eEdgeClamped> src; // the input image\n  \n  Image<eWrite> dst; // the output image\n\n  param:\n\n    //user controls for size\n    float2 size;\n    //hidden control to decide min vs max\n    bool invert;\n  local:\n    // will become our output image\n    float4 output = 0;\n\n  void define() \{\n\n  \}\n\n  void init() \{\n\n    src.setRange(-size.x, -size.y, size.x, size.y);\n\n  \}\n\n  void process() \{\n\n    //this applies a foundation for our output (stops us getting minimum values of zero unless they're in the image)\n    output = src(0,0);\n\n    for(int X = -size.x; X <= size.x; X++)\{\n      for(int Y = -size.y; Y <= size.y; Y++)\{        \n\n        //only includes values inside out virtual radial\n        if( (size.x -   pow((pow(float(X),2)+pow(float(Y*(float(size.x)/float(size.y))),2)),0.5f)) > 0)\{\n\n          //assigns min vs max output depending on whether or not the input size is negative \n          output = invert ? min(output,src(X,Y)) : max(output,src(X,Y));\n\n        \}\n      \}\n\n    \}\n\n    dst() = output;\n  \n  \}\n\};\n"
rebuild ""
RadialDilate_size {{abs(size_wh.w)+1} {abs(size_wh.h)+1}}
RadialDilate_invert {{"size_wh.w < 0 || size_wh.h < 0 "}}
rebuild_finalise ""
name BlinkScript4
selected true
xpos -195
ypos 44
addUserKnob {20 User}
addUserKnob {6 blackoutside l "black outside" +STARTLINE}
addUserKnob {14 size_wh R -100 100}
}
push $N68a56c40
Merge2 {
inputs 2+1
operation copy
name Merge1
xpos -270
ypos 103
}
set N68a68500 [stack 0]
Output {
name Output1
xpos -270
ypos 180
}
push $N68a68500
Viewer {
frame_range 1-100
name Viewer1
xpos -270
ypos 127
}
end_group
push $cut_paste_input
Group {
name RankFilter
tile_color 0x168696ff
selected true
xpos 42759
ypos -1822
addUserKnob {20 RankFilter}
addUserKnob {41 "Local GPU: " T BlinkScript1.gpuName}
addUserKnob {41 "Use GPU if Available" T BlinkScript1.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {7 rankpicker_1 l "Rank Picker"}
rankpicker_1 0.5
addUserKnob {41 "filter size" T "BlinkScript1.RankFilter_filter size"}
addUserKnob {26 ""}
addUserKnob {26 "" l mask T ""}
addUserKnob {41 maskChannelInput l "" -STARTLINE T Merge1.maskChannelInput}
addUserKnob {41 inject -STARTLINE T Merge1.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge1.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge1.fringe}
addUserKnob {41 mix T Merge1.mix}
addUserKnob {26 ""}
addUserKnob {26 credit l "" +STARTLINE T "Rank Filter made by Josh Parks\n"}
addUserKnob {26 credit2 l "" +STARTLINE T www.joshparks.co.uk}
}
Input {
inputs 0
name Inputmask
xpos -199
ypos -188
number 1
}
Input {
inputs 0
name Input
xpos -356
ypos -444
}
Dot {
name Dot1
note_font_size 41
xpos -322
ypos -370
}
set N68bf4e80 [stack 0]
AddChannels {
channels rgba
name AddChannels1
xpos -356
ypos -318
}
BlinkScript {
recompileCount 136
ProgramGroup 1
KernelDescription "2 \"RankFilter\" iterate componentWise 8f4632feddf6438e381689a2ba97b17de2940d93cef050361f5f241bb1ec4f00 2 \"imageIn\" Read Ranged2D \"imageOut\" Write Point 2 \"filter size\" Int 1 AQAAAA== \"number picker\" Float 1 AACAPw== 2 \"size\" 1 1 \"number_picker\" 1 1 2 \"imageInrangeMin\" Int 2 1 AAAAAAAAAAA= \"imageInrangeMax\" Int 2 1 AAAAAAAAAAA="
kernelSource "kernel RankFilter : public ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessRanged2D, eEdgeClamped> imageIn; \n  Image<eWrite, eAccessPoint> imageOut;          \n\nparam:\n  int size;  //The filter size\n  float number_picker; \n\nlocal:\n\n\n  void define() \{\n    defineParam(size, \"filter size\", 1); \n    defineParam(number_picker, \"number picker\", 1.0f); \n  \}\n\n  void init()\n  \{\n    imageIn.setRange(-size-1, -size-1, size+1, size+1);\n\n  \}\n\n  void process()\n  \{\n\n    float vals\[512]; ///creates array is this to big?\n\n    float size_ref = size; \n\n   \n\n    for (int j = -size_ref, index = 0; j <= size_ref; j++) \{ //this section is just collecting all the values in the filter size and putting them in the array\n      for (int i = -size_ref; i <= size_ref; i++, index++) \{\n        vals\[index] = imageIn(i, j);\n      \}\n    \}\n\n\n    float tempvaluesforsorting;\n    int filterSizeref = (2 * size_ref + 1) * (2 * size_ref + 1); //  setting the amount of times to run the sort\n\n    for (int i = 0; i < filterSizeref; i++) \{     //this is sorting the values\n      for (int j = 0; j < (filterSizeref - i - 1); j++) \{\n        if (vals\[j] > vals\[j + 1]) \{\n          tempvaluesforsorting = vals\[j];\n          vals\[j] = vals\[j + 1];\n          vals\[j + 1] = tempvaluesforsorting;\n        \}\n      \}\n    \}\n\n  \n    int normalised = number_picker *((2 * size_ref + 1) * (2 * size_ref + 1)-1);\n\n    imageOut() = vals\[normalised]; // selecting a certain value in the aray\n    \n  \}\n\};"
vectorize false
rebuild ""
"RankFilter_number picker" {{slider}}
rebuild_finalise ""
name BlinkScript1
xpos -356
ypos -262
addUserKnob {20 User}
addUserKnob {7 slider}
slider {{rankpicker_1}}
}
push $N68bf4e80
Dot {
name Dot2
note_font_size 41
xpos -487
ypos -370
}
Dot {
name Dot3
note_font_size 41
xpos -487
ypos -184
}
Merge2 {
inputs 2+1
operation copy
bbox B
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -356
ypos -188
}
Output {
name Output1
xpos -356
ypos -97
}
end_group
push $cut_paste_input
Group {
name deHaze
tile_color 0x55ffbfff
selected true
xpos 42755
ypos -1883
addUserKnob {20 Controls}
addUserKnob {7 dehaze t "Sets the overall intensity of the dehaze operation."}
dehaze 1
addUserKnob {7 topGamma l "highlight protection" t "This helps to prevent funky effects in the brightest of areas (e.g. the sky)." R 1 10}
topGamma 3
addUserKnob {7 offsetHaze l offset t "Lets you set the point where the dehaze starts.\nNeeds highlight protection greater than 1 to work." R -1 1}
addUserKnob {26 sep00_1 l "  "}
addUserKnob {26 sep00 l "colour correct" T ""}
addUserKnob {18 gainHaze l gain t "Adjusts the gain of dehazed areas to tackle colour shifts."}
gainHaze {1 1 1}
addUserKnob {6 gainHaze_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 gammaHaze l gamma t "Adjusts the gamma of dehazed areas to tackle colour shifts."}
gammaHaze {1 1 1}
addUserKnob {6 gammaHaze_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {7 satHaze l saturation t "Adjusts the saturation of dehazed areas to tackle colour shifts."}
satHaze 1
addUserKnob {26 sep02_1 l "  "}
addUserKnob {6 shuffleMap l "shuffle haze to alpha" t "Shuffles the result of the affected hazy areas into the alpha channel.\nNote: this is not the haze map that is generated to affect the haze in the image." +STARTLINE}
addUserKnob {20 finetune l "fine tune"}
addUserKnob {6 prevBil l "preview haze matte" t "Lets you preview you the generated haze map. This is helpful to properly set it up for your shot, to fix holes and take care of edges." +STARTLINE}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" -STARTLINE T C_Bilateral1.useGPUIfAvailable}
addUserKnob {26 sep02 l "  " T ""}
addUserKnob {7 erodeMap l erode t "Erodes darkened areas from your haze map. If you experience holes (e.g. in the sky), try to increase the value." R 0 30}
erodeMap 10
addUserKnob {26 sep03 l "  " T ""}
addUserKnob {3 sizeBil l "bilateral size" t "Sets the general size of the bilateral operation."}
sizeBil 20
addUserKnob {41 positionalSigma l "bilaterial positional Σ" T C_Bilateral1.positionalSigma}
addUserKnob {41 colourSigma l "bilateral colour Σ" +INVISIBLE T C_Bilateral1.colourSigma}
addUserKnob {26 credit t "lp_deHaze v1.0\n(c)2020 lucas pfaff\nbased on a tutorial by Mads Hagbarth Damsbo: https://vimeo.com/377653826" -STARTLINE +INVISIBLE T "lp_deHaze v1.0\n(c)2020 lucas pfaff\nbased on a tutorial by Mads Hagbarth Damsbo: https://vimeo.com/377653826"}
}
Input {
inputs 0
name img
xpos 829
ypos 99
}
Dot {
name Dot3
xpos 863
ypos 215
}
set N6a8bf8a0 [stack 0]
Dot {
name Dot1
xpos 863
ypos 572
}
set N6a8c4d70 [stack 0]
push 0
push $N6a8bf8a0
Dot {
name Dot2
xpos 398
ypos 215
}
Grade {
white {{dehaze}}
black_clamp false
name Grade4
label intensity
xpos 364
ypos 275
}
Invert {
channels rgb
name Invert1
xpos 364
ypos 360
}
Saturation {
saturation 0
mode Maximum
name Saturation1
xpos 364
ypos 384
}
FilterErode {
channels rgb
size {{erodeMap*-1}}
name FilterErode1
xpos 364
ypos 474
}
FilterErode {
channels rgb
size {{FilterErode1.size*-1}}
filter {{FilterErode1.filter x26 1}}
name FilterErode2
xpos 364
ypos 498
}
C_Bilateral2_1 {
inputs 3
size {{sizeBil}}
positionalSigma 40
colorSigma 0.1
name C_Bilateral1
xpos 364
ypos 565
}
Dot {
name Dot5
xpos 398
ypos 657
}
set N68c81130 [stack 0]
Dot {
name Dot4
xpos 276
ypos 657
}
Grade {
add 1
white_clamp true
name Grade1
label "\[value channels]"
xpos 242
ypos 711
}
Dot {
name Dot6
xpos 276
ypos 786
}
push $N68c81130
Merge2 {
inputs 2
operation divide
name Merge2
xpos 364
ypos 783
}
Dot {
name Dot16
xpos 398
ypos 845
}
set N68cb49b0 [stack 0]
Dot {
name Dot9
xpos 198
ypos 845
}
Keyer {
operation "luminance key"
range {1 1.06 2 2}
name Keyer3
xpos 164
ypos 982
}
Dot {
name Dot7
xpos 198
ypos 1096
}
push $N68cb49b0
Grade {
add {{offsetHaze}}
black_clamp false
name Grade8
label "\[value channels]"
xpos 364
ypos 898
}
Dot {
name Dot10
xpos 398
ypos 971
}
set N68ce2410 [stack 0]
Dot {
name Dot11
xpos 529
ypos 971
}
Grade {
gamma {{topGamma}}
black_clamp false
name Grade5
label "\[value channels]"
xpos 495
ypos 1025
}
Dot {
name Dot12
xpos 529
ypos 1096
}
push $N68ce2410
Merge2 {
inputs 2+1
operation copy
name Merge3
xpos 364
ypos 1093
}
Grade {
add {{parent.Grade8.add*-1}}
black_clamp false
name Grade9
label "\[value channels]"
xpos 364
ypos 1184
}
Dot {
name Dot13
xpos 398
ypos 1418
}
push $N6a8c4d70
Dot {
name Dot18
xpos 863
ypos 1276
}
set N68b2f010 [stack 0]
Grade {
add -1
black_clamp false
name Grade2
label "\[value channels]"
xpos 829
ypos 1352
}
Merge2 {
inputs 2
operation multiply
output {rgba.red rgba.green rgba.blue -rgba.alpha}
name Merge1
xpos 829
ypos 1415
}
Grade {
add 1
black_clamp false
name Grade3
label "\[value channels]"
xpos 829
ypos 1470
}
set N68b58490 [stack 0]
push $N68b2f010
Dot {
name Dot19
xpos 1087
ypos 1276
}
Merge2 {
inputs 2
operation difference
name Merge4
xpos 1053
ypos 1474
}
Keyer {
operation "luminance key"
name Keyer1
xpos 1053
ypos 1546
}
Dot {
name Dot17
xpos 1087
ypos 1661
}
set N68b8c9a0 [stack 0]
Dot {
name Dot8
xpos 1087
ypos 1824
}
push $N68c81130
Dot {
name Dot15
xpos 667
ypos 657
}
Dot {
name Dot14
xpos 667
ypos 1755
}
push $N68b8c9a0
push $N68b58490
ColorCorrect {
inputs 1+1
saturation {{satHaze}}
gamma {{gammaHaze} {gammaHaze} {gammaHaze} {gammaHaze}}
gain {{gainHaze} {gainHaze} {gainHaze} {gainHaze}}
name ColorCorrect1
xpos 829
ypos 1658
}
Switch {
inputs 2
which {{prevBil}}
name Switch1
xpos 829
ypos 1752
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
selected true
xpos 829
ypos 1817
}
Output {
name Output1
xpos 829
ypos 1960
}
end_group
push $cut_paste_input
Group {
name ConvolutionMatrix
autolabel "nuke.thisNode().name() + \"\\n\" + '(' + str(nuke.thisNode()\['matrix_selection'].value()) + ')' "
tile_color 0xfff600ff
note_font "Verdana Bold"
note_font_size 14
selected true
xpos 42750
ypos -1966
addUserKnob {20 matrix l Matrix}
addUserKnob {26 message01 l "" +STARTLINE T "Select a matrix and see the result:"}
addUserKnob {4 matrix_selection l "" +STARTLINE M {"01 - Identity" "02 - Smoothing - 3x3 convolution kernel" "03 - Gaussian Blur" "04 - Blur" "05 - Motion Blur" "06 - Average/Mean filter" "07 - Antialiasing filter (1)" "08 - Antialiasing filter (2)" "09 - Sharpen" "10 - Intensified sharpen" "11 - Edge detect" "12 - Edge enhance" "13 - Emboss" "14 - Outline" "15 - Top sobel" "16 - Bottom sobel" "17 - Right sobel" "18 - Left sobel" "19 - Roberts Cross Right Bottom" "20 - Roberts Cross Left Bottom" "21 - Roberts Cross Left Top" "22 - Roberts Cross Right Top" ""}}
addUserKnob {26 ""}
addUserKnob {41 matrix_1 l matrix T MatrixSUPER.matrix}
addUserKnob {6 normalize t "When enabled, the matrix is divided by a constant so that it’s sum is 1 (where possible). This causes the output image to have the same brightness as the source image" -STARTLINE}
normalize true
addUserKnob {6 cineon l Lin/Log t "Turn on to get this operation in Log space\nIf the checkbox if off, then the operation will be done in the classic Lin space" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {41 maskChannel l "mask channel" T Keymix1.maskChannel}
addUserKnob {41 invertMask l invert -STARTLINE T Keymix1.invertMask}
addUserKnob {26 ""}
addUserKnob {26 message02 l "" +STARTLINE T "<b><font color=yellow>Convolution Matrix v3.5</font></b><br>\n<font size=“1”><i>by Andrea Geremia</i><br>\n<br>\nandrea.geremia89@gmail.com<br>\nwww.andreageremia.it</font>"}
}
Dot {
inputs 0
name Dot1
xpos -1665
ypos -76
}
set N6ac67530 [stack 0]
Dot {
name Dot16
xpos -1555
ypos -76
}
set N6ac7aeb0 [stack 0]
Dot {
name Dot15
xpos -1445
ypos -76
}
set N6ac80740 [stack 0]
Dot {
name Dot14
xpos -1335
ypos -76
}
set N6ac860e0 [stack 0]
Dot {
name Dot13
xpos -1225
ypos -76
}
set N6ac8ba70 [stack 0]
Dot {
name Dot12
xpos -1115
ypos -76
}
set N6ac91450 [stack 0]
Dot {
name Dot11
xpos -1005
ypos -76
}
set N6ac96db0 [stack 0]
Dot {
name Dot10
xpos -895
ypos -76
}
set N6ac9c740 [stack 0]
Dot {
name Dot9
xpos -785
ypos -76
}
set N6aca2140 [stack 0]
Dot {
name Dot19
xpos -656
ypos -76
}
set N6aca7ad0 [stack 0]
Dot {
name Dot21
xpos -546
ypos -76
}
set N6acad410 [stack 0]
Dot {
name Dot20
xpos -420
ypos -76
}
set N6acb2da0 [stack 0]
Dot {
name Dot22
xpos -293
ypos -76
}
Matrix {
channels rgba
matrix {
    {0 0 0}
    {0 0 -1}
    {0 1 0}
  }
name Matrix21
label "Robert Cross Right Top"
xpos -327
ypos 33
}
push $N6acb2da0
Matrix {
channels rgba
matrix {
    {0 0 0}
    {0 -1 0}
    {0 0 1}
  }
name Matrix20
label "Robert Cross Left Top"
xpos -454
ypos 30
}
push $N6acad410
Matrix {
channels rgba
matrix {
    {0 0 0}
    {0 0 1}
    {0 -1 0}
  }
name Matrix19
label "Robert Cross Left Down"
xpos -580
ypos 29
}
push $N6aca7ad0
Matrix {
channels rgba
matrix {
    {0 0 0}
    {0 1 0}
    {0 0 -1}
  }
name Matrix18
label "Robert Cross Right Down"
xpos -690
ypos 30
}
push $N6aca2140
Matrix {
channels rgba
matrix {
    {-1 0 1}
    {-2 0 2}
    {-1 0 1}
  }
name Matrix17
label "Right Sobel"
xpos -819
ypos 30
}
push $N6ac9c740
Matrix {
channels rgba
matrix {
    {1 0 -1}
    {2 0 -2}
    {1 0 -1}
  }
name Matrix16
label "Left Sobel"
xpos -929
ypos 28
}
push $N6ac96db0
Matrix {
channels rgba
matrix {
    {-1 -2 -1}
    {0 0 0}
    {1 2 1}
  }
name Matrix15
label "Bottom Sobel"
xpos -1039
ypos 28
}
push $N6ac91450
Matrix {
channels rgba
matrix {
    {1 2 1}
    {0 0 0}
    {-1 -2 -1}
  }
name Matrix14
label "Top Sobel"
xpos -1149
ypos 28
}
push $N6ac8ba70
Matrix {
channels rgba
matrix {
    {-1 -1 -1}
    {-1 8 -1}
    {-1 -1 -1}
  }
name Matrix13
label Outline
xpos -1259
ypos 28
}
push $N6ac860e0
Matrix {
channels rgba
matrix {
    {-2 -1 0}
    {-1 1 1}
    {0 1 2}
  }
name Matrix12
label Emboss
xpos -1369
ypos 28
}
push $N6ac80740
Matrix {
channels rgba
matrix {
    {0 0 0}
    {-1 1 0}
    {0 0 0}
  }
name Matrix11
label "Edge Enhance"
xpos -1479
ypos 31
}
push $N6ac7aeb0
Matrix {
channels rgba
matrix {
    {0 1 0}
    {1 -4 1}
    {0 1 0}
  }
name Matrix10
label "Edge detect"
xpos -1589
ypos 28
}
push $N6ac67530
Matrix {
channels rgba
matrix {
    {-1 -1 -1}
    {-1 9 -1}
    {-1 -1 -1}
  }
name Matrix9
label "Intensified sharpen"
xpos -1699
ypos 28
}
push $N6ac67530
Dot {
name Dot8
xpos -1759
ypos -76
}
set N6ab62560 [stack 0]
Matrix {
channels rgba
matrix {
    {0 -1 0}
    {-1 5 -1}
    {0 -1 0}
  }
normalize true
name Matrix8
label Sharpen
xpos -1793
ypos 28
}
push $N6ab62560
Dot {
name Dot6
xpos -1854
ypos -76
}
set N6ab74950 [stack 0]
Matrix {
channels rgb
matrix {
    {1 2 1}
    {2 4 2}
    {1 2 1}
  }
normalize true
name Matrix7
label "Antialiasing filter\nsize 2"
xpos -1888
ypos 24
}
push $N6ab74950
Dot {
name Dot5
xpos -1964
ypos -76
}
set N6ab87fb0 [stack 0]
Matrix {
channels rgb
matrix {
    {0 1 0}
    {1 2 1}
    {0 1 0}
  }
normalize true
name Matrix6
label "Antialiasing filter\nsize 1"
xpos -1998
ypos 28
}
push $N6ab87fb0
Dot {
name Dot17
xpos -2082
ypos -76
}
set N6ab9a3d0 [stack 0]
Matrix {
channels rgba
matrix {
    {0.1111111111 0.11111111 0.11111111}
    {0.11111111 0.11111111 0.11111111}
    {0.11111111 0.11111111 0.11111111}
  }
normalize true
name Matrix5
label "Average filter"
xpos -2116
ypos 28
}
push $N6ab9a3d0
Dot {
name Dot18
xpos -2207
ypos -76
}
set N6abacb30 [stack 0]
Matrix {
channels rgba
matrix {
    {1 0 0}
    {0 1 0}
    {0 0 1}
  }
normalize true
name Matrix4
label "Motion Blur"
xpos -2241
ypos 31
}
push $N6abacb30
Dot {
name Dot7
xpos -2318
ypos -76
}
set N6a9bee40 [stack 0]
Matrix {
channels rgba
matrix {
    {0.0625 0.125 0.0625}
    {0.125 0.25 0.125}
    {0.0625 0.125 0.0625}
  }
normalize true
name Matrix3
label Blur
xpos -2352
ypos 30
}
push $N6a9bee40
Dot {
name Dot4
xpos -2413
ypos -76
}
set N6a9d10d0 [stack 0]
Matrix {
channels rgba
matrix {
    {0 1 0}
    {1 4 1}
    {0 1 0}
  }
normalize true
name Matrix2
label "Gaussian Blur"
xpos -2447
ypos 28
}
push $N6a9d10d0
Dot {
name Dot3
xpos -2530
ypos -76
}
set N6a9e34a0 [stack 0]
Matrix {
channels rgba
matrix {
    {1 1 1}
    {1 1 1}
    {1 1 1}
  }
normalize true
name Matrix1
label "Smoothing\n3x3 convolution kernel"
xpos -2564
ypos 27
}
push $N6a9e34a0
Dot {
name Dot2
xpos -2645
ypos -76
}
Matrix {
channels rgba
matrix {
    {0 0 0}
    {0 1 0}
    {0 0 0}
  }
normalize {{parent.normalize}}
name Matrix0
label Identity
xpos -2679
ypos 29
}
Switch {
inputs 22
which {{parent.matrix_selection}}
name Switch1
label "\[value which]"
xpos -1634
ypos 420
}
Reformat {
inputs 0
type "to box"
box_width 10
box_height 10
box_fixed true
name Reformat1
xpos 762
ypos 229
}
Shuffle {
alpha white
name Shuffle1
xpos 762
ypos 309
}
Input {
inputs 0
name mask
xpos 610
ypos 82
number 1
}
Switch {
inputs 2
which {{"!\[exists parent.input1]"}}
name Switch3
xpos 610
ypos 309
}
Dot {
name Dot23
xpos 643
ypos 701
}
Input {
inputs 0
name src
selected true
xpos -580
ypos 235
}
set N6aa46d30 [stack 0]
Colorspace {
colorspace_out Cineon
name Colorspace1
xpos -580
ypos 301
disable {{!parent.cineon}}
}
Matrix {
channels rgba
matrix {
    {{"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(0,0)\\n]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(0,1)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(0,2)]"}}
    {{"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(1,0)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(1,1)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(1,2)]"}}
    {{"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(2,0)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(2,1)]"} {"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('matrix').value(2,2)]"}}
  }
normalize {{"\[python nuke.toNode('Matrix'\\ +\\nstr(int(nuke.toNode('Switch1').knob('which').value()))).knob('normalize').value()\\n]"}}
name MatrixSUPER
xpos -580
ypos 370
}
Colorspace {
colorspace_in Cineon
name Colorspace2
xpos -580
ypos 455
disable {{!parent.cineon}}
}
Dot {
name Dot24
xpos -547
ypos 701
}
push $N6aa46d30
Dot {
name Dot25
xpos 321
ypos 237
}
Keymix {
inputs 3
name Keymix1
xpos 288
ypos 695
}
Output {
name Output1
xpos 288
ypos 841
}
end_group
push $cut_paste_input
Group {
name bm_Lightwrap
knobChanged "n1 = nuke.thisNode()\nk1 = nuke.thisKnob()\nif k1.name() == \"effectOnly\":\n    if k1.value() == 1:\n        n1\[\"mergeType\"].setEnabled(False)\n    else:\n        n1\[\"mergeType\"].setEnabled(True) \n\n\nn2 = nuke.thisNode()\nk2 = nuke.thisKnob()\nif k2.name() == \"useThresholdCheckbox\":\n    if k2.value() == 1:\n        n2\[\"viewRange\"].setEnabled(True)\n    else:\n        n2\[\"viewRange\"].setEnabled(False)"
tile_color 0x222222ff
selected true
xpos 42750
ypos -2015
addUserKnob {20 Options}
addUserKnob {4 mergeType l "Merge Operation" M {Max Over Plus Screen ""}}
mergeType Plus
addUserKnob {26 spacer_01 l "" -STARTLINE T "      "}
addUserKnob {6 effectOnly l " Effect Only" -STARTLINE}
addUserKnob {4 glowType l "Glow Math" M {Double Fibonacci "" ""}}
glowType Fibonacci
addUserKnob {26 spacer_02 l "" -STARTLINE T "   "}
addUserKnob {6 useThresholdCheckbox l "Use Luminance-based wrap" -STARTLINE}
useThresholdCheckbox true
addUserKnob {26 spacer_05 l "" +STARTLINE T "                                                 "}
addUserKnob {6 viewRange l "View Range" -STARTLINE}
addUserKnob {41 size l "Pre-blur BG" T Blur11.size}
addUserKnob {26 ""}
addUserKnob {20 tGrp l "Luminance Selector" n 1}
tGrp 0
addUserKnob {26 spacer_03 l "" +STARTLINE T " "}
addUserKnob {41 range l "" +STARTLINE T Keyer1.range}
addUserKnob {26 spacer_04 l "" +STARTLINE T " "}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {7 glowSize l Size R 0 500}
glowSize 100
addUserKnob {7 glowAspect l Aspect R 0.5 2}
glowAspect 1
addUserKnob {7 glowBrightness l Brightness R 0 3}
glowBrightness 1
addUserKnob {18 glowGamma l Gamma R 0 2}
glowGamma 1
addUserKnob {6 glowGamma_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 glowSaturation l Saturation R 0 3}
glowSaturation 1
addUserKnob {6 glowSaturation_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {4 alphaChoice l "Use Alpha From" M {None FG BG "FG & BG" "Glow Only" "" ""}}
alphaChoice FG
addUserKnob {7 glowMix l Mix}
glowMix 1
addUserKnob {26 ""}
addUserKnob {20 versionInfo l Info}
addUserKnob {26 ""}
addUserKnob {26 versionInfo_1 l "" +STARTLINE T "\nCreated by Ben McEwan\nwww.benmcewan.com\n\nVersion 3.0\nLast Updated: January 26th, 2018\n"}
addUserKnob {26 ""}
}
Input {
inputs 0
name BG
xpos -1294
ypos -1111
number 1
}
Expression {
expr3 a==0?0:a
name Expression1
label "Alpha Error Fix"
xpos -1294
ypos -1041
}
Dot {
name Dot1
label "  "
note_font "Arial Black"
note_font_size 16
xpos -1260
ypos -918
}
set N6b04e8a0 [stack 0]
Blur {
channels rgba
name Blur11
xpos -1159
ypos -921
}
Transform {
scale {{glowAspect} 1}
center {1024 778}
invert_matrix true
shutteroffset centred
name Transform1
xpos -889
ypos -921
}
set N6b0631c0 [stack 0]
Keyer {
operation "luminance key"
name Keyer1
xpos -732
ypos -927
}
set N6b071cc0 [stack 0]
Transform {
scale {{glowAspect} 1}
center {1024 778}
shutteroffset centred
name Transform3
xpos -576
ypos -921
}
Dot {
name Dot27
label "  "
note_font "Arial Black"
note_font_size 16
xpos 554
ypos -918
}
Shuffle {
in alpha
red alpha
name Shuffle2
tile_color 0xffffff01
label "\[value alpha] > \[value out]"
xpos 520
ypos 983
}
Input {
inputs 0
name FG
xpos -1155
ypos -848
}
Expression {
expr3 a==0?0:a
name Expression2
label "Alpha Error Fix"
xpos -1155
ypos -784
}
set N6b0a7d30 [stack 0]
Dot {
name Dot26
label "  "
note_font "Arial Black"
note_font_size 16
xpos -1121
ypos 21
}
set N6b0b7e10 [stack 0]
Dot {
name Dot28
label "  "
note_font "Arial Black"
note_font_size 16
xpos -1121
ypos 104
}
set N6b0bd910 [stack 0]
Dot {
name Dot35
label "  "
note_font "Arial Black"
note_font_size 16
xpos -943
ypos 140
}
Dot {
name Dot32
label "  "
note_font "Arial Black"
note_font_size 16
xpos -943
ypos 210
}
set N6aec8d70 [stack 0]
Dot {
name Dot33
label "  "
note_font "Arial Black"
note_font_size 16
xpos -1053
ypos 210
}
Dot {
name Dot34
label "  "
note_font "Arial Black"
note_font_size 16
xpos -1053
ypos 923
}
push $N6b0b7e10
push $N6b0a7d30
push $N6b071cc0
Premult {
name Premult1
xpos -732
ypos -891
}
push $N6b0631c0
Dot {
name Dot31
label "  "
note_font "Arial Black"
note_font_size 16
xpos -855
ypos -807
}
Switch {
inputs 2
which {{useThresholdCheckbox}}
name Switch3
xpos -732
ypos -810
}
Merge2 {
inputs 2
operation stencil
bbox A
name Merge14
xpos -732
ypos -778
}
Dot {
name Dot2
label "  "
note_font "Arial Black"
note_font_size 16
xpos -698
ypos -754
}
set N6af03500 [stack 0]
Dot {
name Dot11
label "  "
note_font "Arial Black"
note_font_size 16
xpos -578
ypos -754
}
set N6af08ea0 [stack 0]
Dot {
name Dot10
label "  "
note_font "Arial Black"
note_font_size 16
xpos -444
ypos -754
}
set N6af0e8e0 [stack 0]
Dot {
name Dot9
label "  "
note_font "Arial Black"
note_font_size 16
xpos -314
ypos -754
}
set N6af14320 [stack 0]
Dot {
name Dot8
label "  "
note_font "Arial Black"
note_font_size 16
xpos -185
ypos -754
}
set N6af19d60 [stack 0]
Dot {
name Dot7
label "  "
note_font "Arial Black"
note_font_size 16
xpos -75
ypos -754
}
set N6af1f7a0 [stack 0]
Dot {
name Dot6
label "  "
note_font "Arial Black"
note_font_size 16
xpos 47
ypos -754
}
set N6af251e0 [stack 0]
Dot {
name Dot5
label "  "
note_font "Arial Black"
note_font_size 16
xpos 179
ypos -754
}
set N6af2ac20 [stack 0]
Dot {
name Dot4
label "  "
note_font "Arial Black"
note_font_size 16
xpos 301
ypos -754
}
set N6af30660 [stack 0]
Dot {
name Dot3
label "  "
note_font "Arial Black"
note_font_size 16
xpos 421
ypos -754
}
Blur {
size {{glowType==0?(glowSize*25.6):(glowSize*5.5)}}
name Blur10
xpos 387
ypos -714
}
Multiply {
channels rgb
value {{glowType==0?(glowBrightness/512):(glowBrightness/50)}}
name Multiply10
xpos 387
ypos -678
}
Dot {
name Dot13
label "  "
note_font "Arial Black"
note_font_size 16
xpos 421
ypos -92
}
push $N6af30660
Blur {
size {{glowType==0?(glowSize*12.8):(glowSize*3.4)}}
name Blur9
xpos 267
ypos -712
}
Multiply {
channels rgb
value {{glowType==0?(glowBrightness/256):(glowBrightness/33)}}
name Multiply9
xpos 267
ypos -676
}
Dot {
name Dot14
label "  "
note_font "Arial Black"
note_font_size 16
xpos 301
ypos -156
}
push $N6af2ac20
Blur {
size {{glowType==0?(glowSize*6.4):(glowSize*2.1)}}
name Blur8
xpos 145
ypos -716
}
Multiply {
channels rgb
value {{glowType==0?(glowBrightness/128):(glowBrightness/20)}}
name Multiply8
xpos 145
ypos -680
}
Dot {
name Dot15
label "  "
note_font "Arial Black"
note_font_size 16
xpos 179
ypos -221
}
push $N6af251e0
Blur {
size {{glowType==0?(glowSize*3.2):(glowSize*1.3)}}
name Blur7
xpos 13
ypos -717
}
Multiply {
channels rgb
value {{glowType==0?(glowBrightness/64):(glowBrightness/12.5)}}
name Multiply7
xpos 13
ypos -681
}
Dot {
name Dot16
label "  "
note_font "Arial Black"
note_font_size 16
xpos 47
ypos -285
}
push $N6af1f7a0
Blur {
size {{glowType==0?(glowSize*1.6):(glowSize/1.25)}}
name Blur6
xpos -109
ypos -716
}
Multiply {
channels rgb
value {{glowType==0?(glowBrightness/32):(glowBrightness/7.68)}}
name Multiply6
xpos -109
ypos -680
}
Dot {
name Dot17
label "  "
note_font "Arial Black"
note_font_size 16
xpos -75
ypos -354
}
push $N6af19d60
Blur {
size {{glowType==0?(glowSize/12.5):(glowSize/2)}}
name Blur5
xpos -219
ypos -719
}
Multiply {
channels rgb
value {{glowType==0?(glowBrightness/16):(glowBrightness/4.75)}}
name Multiply5
xpos -219
ypos -683
}
Dot {
name Dot18
label "  "
note_font "Arial Black"
note_font_size 16
xpos -185
ypos -421
}
push $N6af14320
Blur {
size {{glowType==0?(glowSize/2.5):(glowSize/3.3333)}}
name Blur4
xpos -348
ypos -721
}
Multiply {
channels rgb
value {{glowType==0?(glowBrightness/8):(glowBrightness/2.94)}}
name Multiply4
xpos -348
ypos -685
}
Dot {
name Dot19
label "  "
note_font "Arial Black"
note_font_size 16
xpos -314
ypos -479
}
push $N6af0e8e0
Blur {
size {{glowSize/5}}
name Blur3
xpos -478
ypos -723
}
Multiply {
channels rgb
value {{glowType==0?(glowBrightness/4):(glowBrightness/1.815)}}
name Multiply3
xpos -478
ypos -687
}
Dot {
name Dot20
label "  "
note_font "Arial Black"
note_font_size 16
xpos -444
ypos -535
}
push $N6af08ea0
Blur {
size {{glowSize/10}}
name Blur2
xpos -612
ypos -723
}
Multiply {
channels rgb
value {{glowType==0?(glowBrightness/2):(glowBrightness/1.124)}}
name Multiply2
xpos -612
ypos -687
}
Dot {
name Dot12
label "  "
note_font "Arial Black"
note_font_size 16
xpos -578
ypos -592
}
push $N6af03500
Blur {
size {{glowSize/50}}
name Blur1
xpos -732
ypos -722
}
Multiply {
channels rgb
value {{glowBrightness}}
name Multiply1
xpos -732
ypos -686
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos -732
ypos -595
}
Merge2 {
inputs 2
operation plus
name Merge2
xpos -732
ypos -538
}
Merge2 {
inputs 2
operation plus
name Merge3
xpos -732
ypos -482
}
Merge2 {
inputs 2
operation plus
name Merge4
xpos -732
ypos -424
}
Merge2 {
inputs 2
operation plus
name Merge5
xpos -732
ypos -357
}
Merge2 {
inputs 2
operation plus
name Merge6
xpos -732
ypos -288
}
Merge2 {
inputs 2
operation plus
name Merge7
xpos -732
ypos -224
}
Merge2 {
inputs 2
operation plus
name Merge8
xpos -732
ypos -159
}
Merge2 {
inputs 2
operation plus
name Merge9
xpos -732
ypos -95
}
Multiply {
channels alpha
value 0.1
name Multiply22
xpos -732
ypos -57
}
ColorCorrect {
saturation {{glowSaturation} {glowSaturation} {glowSaturation} 1}
gamma {{glowGamma} {glowGamma} {glowGamma} 1}
name ColorCorrect1
xpos -732
ypos -21
}
Multiply {
value {{glowType==0?(glowMix):(glowMix/2.5)}}
name Multiply11
xpos -732
ypos 3
}
Transform {
scale {{glowAspect} 1}
center {1024 778}
shutteroffset centred
name Transform2
xpos -732
ypos 58
}
Merge2 {
inputs 2
operation mask
bbox A
name Merge15
xpos -732
ypos 107
}
set N6ad6dc00 [stack 0]
Dot {
name Dot22
label "  "
note_font "Arial Black"
note_font_size 16
xpos -472
ypos 296
}
Dot {
name Dot23
label "  "
note_font "Arial Black"
note_font_size 16
xpos -472
ypos 520
}
set N6ad85300 [stack 0]
push $N6ad85300
push $N6ad6dc00
Dot {
name Dot24
label "  "
note_font "Arial Black"
note_font_size 16
xpos -698
ypos 218
}
set N6ad8ad30 [stack 0]
push $N6aec8d70
Merge2 {
inputs 2
operation plus
name Merge13
xpos -644
ypos 356
}
push $N6ad8ad30
push $N6aec8d70
Merge2 {
inputs 2
operation screen
name Merge12
xpos -752
ypos 355
}
push $N6ad8ad30
push $N6aec8d70
Merge2 {
inputs 2
name Merge11
xpos -859
ypos 359
}
push $N6ad8ad30
push $N6aec8d70
Merge2 {
inputs 2
operation max
name Merge10
xpos -977
ypos 358
}
Switch {
inputs 4
which {{mergeType}}
name Switch1
xpos -819
ypos 440
}
Switch {
inputs 2
which {{effectOnly}}
name Switch2
xpos -819
ypos 516
}
set N6abdffa0 [stack 0]
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy4
xpos -506
ypos 728
}
Dot {
name Dot30
label "  "
note_font "Arial Black"
note_font_size 16
xpos -472
ypos 821
}
push $N6b0bd910
Dot {
name Dot29
label "  "
note_font "Arial Black"
note_font_size 16
xpos -1121
ypos 682
}
push $N6abdffa0
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos -819
ypos 673
}
set N6ac03d20 [stack 0]
push $N6b04e8a0
Dot {
name Dot25
label "  "
note_font "Arial Black"
note_font_size 16
xpos -1260
ypos 561
}
push $N6abdffa0
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy2
xpos -691
ypos 669
}
set N6ac18f30 [stack 0]
ChannelMerge {
inputs 2
name ChannelMerge1
xpos -691
ypos 764
}
push $N6ac18f30
push $N6ac03d20
push $N6abdffa0
Shuffle {
in alpha
red black
out alpha
name Shuffle1
tile_color 0xff000000
label "Alpha = 0"
xpos -947
ypos 736
}
Switch {
inputs 5
which {{alphaChoice}}
name Switch4
xpos -819
ypos 818
}
CopyBBox {
inputs 2
name CopyBBox1
xpos -819
ypos 920
}
Switch {
inputs 2
which {{viewRange x1 0}}
name Switch5
xpos -819
ypos 989
}
Output {
name Output1
xpos -819
ypos 1193
}
end_group
push $cut_paste_input
Group {
name LightWrapPro
help "Adds exponentially blurred lightwrap\n\nAdds a bright highlight wrap and an overall wrap"
tile_color 0x1e252eff
label "(\[value outputView])"
note_font "DejaVu Sans Bold"
note_font_color 0xb7e6ffff
selected true
xpos 42742
ypos -2089
mapsize {0.15 0.15}
addUserKnob {20 LightWrapPro}
addUserKnob {4 outputView l "Output View" t "Chose one to view while adjusting" M {"Final Output" "Highlight Key" "Highlight Wrap" "OverAll Wrap" "Effect Only" "" "" "" "" "" "" "" "" ""}}
addUserKnob {6 premultiplied l "FG premultiplied" -STARTLINE}
premultiplied true
addUserKnob {26 highlightKeyTitle l "<b><font color = skyblue>HighLight Key"}
addUserKnob {7 blackPt l Black R 0 4}
blackPt 1
addUserKnob {7 whitePt l White R 0 4}
whitePt 2
addUserKnob {26 wrapHighlightsTitle l "<b><font color = skyblue>HighLight Wrap"}
addUserKnob {6 Mult_Flare_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
addUserKnob {41 steps l " Steps" T ExponGlowWrapHighlight.steps}
addUserKnob {41 falloffType l Falloff -STARTLINE T ExponGlowWrapHighlight.falloffType}
addUserKnob {41 size l Size T ExponGlowWrapHighlight.size}
addUserKnob {7 wrapHighlightAmount l Amount R 0 4}
wrapHighlightAmount 1
addUserKnob {26 WrapAllTitle l "<b><font color=skyblue>Overall Wrap "}
addUserKnob {6 WrapAllMult_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
addUserKnob {41 steps_1 l " Steps" T ExponGlowWrapAll.steps}
addUserKnob {41 falloffType_1 l Falloff -STARTLINE T ExponGlowWrapAll.falloffType}
addUserKnob {41 size_1 l Size T ExponGlowWrapAll.size}
addUserKnob {7 wrapAllAmount l Amount R 0 4}
wrapAllAmount 1
addUserKnob {6 removeHighlights l "Dim Highlights" +STARTLINE}
removeHighlights true
addUserKnob {7 dimHighlightsAmount l "" -STARTLINE R 0 3}
dimHighlightsAmount 1
addUserKnob {26 blendEdgesTitle l "<b><font color=skyblue>Blend Edges"}
addUserKnob {7 blendEdgesAmount l Amount}
addUserKnob {6 ColorBleedMult_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
addUserKnob {26 bleedColorTitle l "<b><font color=skyblue>Bleed Color"}
addUserKnob {7 bleedColorAmount l Amount}
addUserKnob {7 bleedColorSize l Size R 0.1 4}
bleedColorSize 1
addUserKnob {7 bleedColorFalloff_2 l Falloff R 0.2 2}
bleedColorFalloff_2 0.5
addUserKnob {26 ""}
addUserKnob {7 globalAmount l "<b><font color=skyblue>Global Amount"}
globalAmount 1
addUserKnob {26 _1 l mask T ""}
addUserKnob {41 maskChannelInput l "" -STARTLINE T MergeCopyLightWrapPro.maskChannelInput}
addUserKnob {41 inject -STARTLINE T MergeCopyLightWrapPro.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T MergeCopyLightWrapPro.invert_mask}
addUserKnob {41 fringe -STARTLINE T MergeCopyLightWrapPro.fringe}
addUserKnob {41 mix T MergeCopyLightWrapPro.mix}
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: t "\n\n" T LightWrapPro}
addUserKnob {26 ver l Version: T v06}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x402f27ff
label "Bleed Color"
note_font_size 60
note_font_color 0xffffffff
xpos -683
ypos 2273
bdwidth 1316
bdheight 787
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0x39464200
label "highlight key"
note_font_size 40
note_font_color 0xffffffff
xpos 1630
ypos 113
bdwidth 272
bdheight 393
}
Input {
inputs 0
name Inputmask
xpos 1887
ypos 3580
number 2
}
Input {
inputs 0
name FG
xpos -413
ypos -318
}
AddChannels {
channels rgba
name AddChannels1
xpos -413
ypos -150
}
Dot {
name Dot1
xpos -379
ypos 375
}
set N6bbbc530 [stack 0]
Dot {
name Dot7
xpos -825
ypos 375
}
Dot {
name Dot46
xpos -825
ypos 3104
}
set N6b9c7750 [stack 0]
Dot {
name Dot15
xpos 915
ypos 3107
}
set N6b9cd040 [stack 0]
Dot {
name Dot26
note_font_size 41
xpos 915
ypos 3224
}
set N6b9d2b10 [stack 0]
Dot {
name Dot32
note_font_size 41
xpos 915
ypos 3277
}
push $N6bbbc530
Dot {
name Dot8
note_font_size 41
xpos 717
ypos 378
}
set N6b9ddd50 [stack 0]
Dot {
name Dot11
note_font_size 41
xpos 717
ypos 550
}
Input {
inputs 0
name BG
label "\n"
xpos 1702
ypos -276
number 1
}
AddChannels {
channels rgba
name AddChannels2
xpos 1702
ypos -145
}
Remove {
operation keep
channels rgba
name Remove2
xpos 1702
ypos -68
}
Dot {
name Dot3
xpos 1736
ypos 177
}
set N6ba021a0 [stack 0]
Keyer {
operation "luminance key"
range {{parent.blackPt} {parent.whitePt} {range.B} {range.B}}
name Keyer2
xpos 1702
ypos 303
}
Dot {
name Dot4
note_font_size 41
xpos 1736
ypos 397
}
set N6ba13450 [stack 0]
Premult {
name Premult1
xpos 1702
ypos 452
}
Multiply {
inputs 1+1
channels rgba
value 0
name Multiply1
label "\[value value]"
xpos 1702
ypos 543
}
Dot {
name Dot30
note_font_size 41
xpos 1734
ypos 746
}
Group {
name ExponGlowWrapHighlight
onCreate "n = nuke.thisNode()\nn.knob('size').setRange(0, 50)\n#n.knob('exp').setRange(1, 4)\nnuke.thisNode().knob('steps').setFlag(0x02000000)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n\n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n\nelif k.name() == \"steps\":\n\n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        m1    = nuke.toNode(\"Multiply1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n\n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n\n        m1x   = m1.xpos()\n        m1y   = m1.ypos()\n        m1n   = m1.name()\n\n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('exp').getValue()\n\n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, m1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            m = nuke.nodes.Multiply()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"all\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression( \"((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(\{\}**2))\".format(str(i+1)), 0 )\n            b\[\"size\"].setExpression( \"((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(\{\}**2))\".format(str(i+1)), 1 )\n            b\[\"label\"].setValue('')\n            blurAbove = b.name()\n\n            m.setXYpos(m1x+i*100,m1y)\n            m.setInput(0, nuke.toNode(blurAbove))\n            m\[\"channels\"].setValue(\"all\")\n            m\[\"value\"].setValue(1,1,1,1)\n            j = 1-(i/steps)\n            m\[\"value\"].setExpression('falloffType == 0 ? \{\} :falloffType == 1 ? pow(\{\}, 3) : falloffType == 2 ? \{\}*\{\}*(3-2*\{\}) : falloffType == 3 ? \{\}*\{\}*(2 - \{\}) : falloffType == 4 ? \{\}*(1 + \{\}*(1 - \{\})) : 0'.format(j,j,j,j,j,j,j,j,j,j,j))\n            m\[\"mix\"].setExpression(\"falloff\")\n            m\[\"label\"].setValue('')\n\n            merge.setInput(i if i<2 else i+1, m)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n\n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n\nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n\n"
tile_color 0xcc804eff
label "(\[value output2])"
note_font "Verdana Bold"
note_font_color 0xffffffff
xpos 1700
ypos 1012
addUserKnob {20 ExponBlurSimple}
addUserKnob {41 channels T Remove1.channels}
addUserKnob {26 ""}
addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
output2 Over
addUserKnob {3 steps l "  Steps" -STARTLINE}
steps 6
addUserKnob {26 text l " " T " "}
addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
AvgMaxOriginal true
addUserKnob {14 size l Size R 0 50}
size 4
addUserKnob {14 exp l Exponent +INVISIBLE R 1 4}
exp 3
addUserKnob {6 color_rgba_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
addUserKnob {7 falloff l Falloff}
falloff 1
addUserKnob {4 falloffType l "Falloff Type" M {Linear pLinear smooth smooth0 smooth1 ""}}
falloffType smooth1
addUserKnob {14 postBlur l "Post Blur" R 0 100}
addUserKnob {26 ""}
addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
addUserKnob {41 mix T MergeKeymix.mix}
addUserKnob {14 safeBBoxPixels l "" +STARTLINE +HIDDEN R 0 400}
safeBBoxPixels 100
addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
adjustBBoxPercent 1
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "Tony Lyons"}
addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
addUserKnob {26 ver l Version: T v02}
}
Input {
inputs 0
name Inputmask
xpos 346
ypos 596
number 1
}
Dot {
name Dot19
label Mask
note_font_size 41
xpos 380
ypos 662
}
Dot {
name Dot10
note_font_size 41
xpos 380
ypos 899
}
Input {
inputs 0
name Inputimg
xpos -221
ypos -1229
}
Dot {
name Dot16
note_font_size 41
xpos -187
ypos -1062
}
set N6ba5a940 [stack 0]
Dot {
name Dot1
note_font_size 41
xpos 461
ypos -1058
}
Remove {
operation keep
channels rgba
name Remove1
xpos 427
ypos -980
}
NoOp {
name aspectCalc
xpos 427
ypos -939
addUserKnob {20 User}
addUserKnob {14 aspect R 0 100}
aspect {{parent.size.w} {(parent.size.h/format.pixel_aspect/height*width)*format.pixel_aspect}}
}
Dot {
name Dot21
note_font_size 41
xpos 461
ypos -853
}
set N6ba757e0 [stack 0]
Invert {
name Invert1
xpos 864
ypos -860
disable {{"parent.size < 0 ? 0 : 1"}}
}
set N6ba7b0f0 [stack 0]
Dot {
name Dot4
note_font_size 41
xpos 540
ypos -604
}
NoOp {
name Original
xpos 506
ypos -327
}
Dot {
name Dot5
note_font_size 41
xpos 540
ypos 100
}
push $N6ba7b0f0
NoOp {
name Start
xpos 864
ypos -706
}
set N6ba98bd0 [stack 0]
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(6**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(6**2))}}
crop false
name Blur6
xpos 1364
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.166666666667 :falloffType == 1 ? pow(0.166666666667, 3) : falloffType == 2 ? 0.166666666667*0.166666666667*(3-2*0.166666666667) : falloffType == 3 ? 0.166666666667*0.166666666667*(2 - 0.166666666667) : falloffType == 4 ? 0.166666666667*(1 + 0.166666666667*(1 - 0.166666666667)) : 0"} {"falloffType == 0 ? 0.166666666667 :falloffType == 1 ? pow(0.166666666667, 3) : falloffType == 2 ? 0.166666666667*0.166666666667*(3-2*0.166666666667) : falloffType == 3 ? 0.166666666667*0.166666666667*(2 - 0.166666666667) : falloffType == 4 ? 0.166666666667*(1 + 0.166666666667*(1 - 0.166666666667)) : 0"} {"falloffType == 0 ? 0.166666666667 :falloffType == 1 ? pow(0.166666666667, 3) : falloffType == 2 ? 0.166666666667*0.166666666667*(3-2*0.166666666667) : falloffType == 3 ? 0.166666666667*0.166666666667*(2 - 0.166666666667) : falloffType == 4 ? 0.166666666667*(1 + 0.166666666667*(1 - 0.166666666667)) : 0"} {"falloffType == 0 ? 0.166666666667 :falloffType == 1 ? pow(0.166666666667, 3) : falloffType == 2 ? 0.166666666667*0.166666666667*(3-2*0.166666666667) : falloffType == 3 ? 0.166666666667*0.166666666667*(2 - 0.166666666667) : falloffType == 4 ? 0.166666666667*(1 + 0.166666666667*(1 - 0.166666666667)) : 0"}}
mix {{falloff}}
name Multiply6
xpos 1364
ypos -477
}
push $N6ba98bd0
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(5**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(5**2))}}
crop false
name Blur5
xpos 1264
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.333333333333 :falloffType == 1 ? pow(0.333333333333, 3) : falloffType == 2 ? 0.333333333333*0.333333333333*(3-2*0.333333333333) : falloffType == 3 ? 0.333333333333*0.333333333333*(2 - 0.333333333333) : falloffType == 4 ? 0.333333333333*(1 + 0.333333333333*(1 - 0.333333333333)) : 0"} {"falloffType == 0 ? 0.333333333333 :falloffType == 1 ? pow(0.333333333333, 3) : falloffType == 2 ? 0.333333333333*0.333333333333*(3-2*0.333333333333) : falloffType == 3 ? 0.333333333333*0.333333333333*(2 - 0.333333333333) : falloffType == 4 ? 0.333333333333*(1 + 0.333333333333*(1 - 0.333333333333)) : 0"} {"falloffType == 0 ? 0.333333333333 :falloffType == 1 ? pow(0.333333333333, 3) : falloffType == 2 ? 0.333333333333*0.333333333333*(3-2*0.333333333333) : falloffType == 3 ? 0.333333333333*0.333333333333*(2 - 0.333333333333) : falloffType == 4 ? 0.333333333333*(1 + 0.333333333333*(1 - 0.333333333333)) : 0"} {"falloffType == 0 ? 0.333333333333 :falloffType == 1 ? pow(0.333333333333, 3) : falloffType == 2 ? 0.333333333333*0.333333333333*(3-2*0.333333333333) : falloffType == 3 ? 0.333333333333*0.333333333333*(2 - 0.333333333333) : falloffType == 4 ? 0.333333333333*(1 + 0.333333333333*(1 - 0.333333333333)) : 0"}}
mix {{falloff}}
name Multiply5
xpos 1264
ypos -477
}
push $N6ba98bd0
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(4**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(4**2))}}
crop false
name Blur4
xpos 1164
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"}}
mix {{falloff}}
name Multiply4
xpos 1164
ypos -477
}
push $N6ba98bd0
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(3**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(3**2))}}
crop false
name Blur3
xpos 1064
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.666666666667 :falloffType == 1 ? pow(0.666666666667, 3) : falloffType == 2 ? 0.666666666667*0.666666666667*(3-2*0.666666666667) : falloffType == 3 ? 0.666666666667*0.666666666667*(2 - 0.666666666667) : falloffType == 4 ? 0.666666666667*(1 + 0.666666666667*(1 - 0.666666666667)) : 0"} {"falloffType == 0 ? 0.666666666667 :falloffType == 1 ? pow(0.666666666667, 3) : falloffType == 2 ? 0.666666666667*0.666666666667*(3-2*0.666666666667) : falloffType == 3 ? 0.666666666667*0.666666666667*(2 - 0.666666666667) : falloffType == 4 ? 0.666666666667*(1 + 0.666666666667*(1 - 0.666666666667)) : 0"} {"falloffType == 0 ? 0.666666666667 :falloffType == 1 ? pow(0.666666666667, 3) : falloffType == 2 ? 0.666666666667*0.666666666667*(3-2*0.666666666667) : falloffType == 3 ? 0.666666666667*0.666666666667*(2 - 0.666666666667) : falloffType == 4 ? 0.666666666667*(1 + 0.666666666667*(1 - 0.666666666667)) : 0"} {"falloffType == 0 ? 0.666666666667 :falloffType == 1 ? pow(0.666666666667, 3) : falloffType == 2 ? 0.666666666667*0.666666666667*(3-2*0.666666666667) : falloffType == 3 ? 0.666666666667*0.666666666667*(2 - 0.666666666667) : falloffType == 4 ? 0.666666666667*(1 + 0.666666666667*(1 - 0.666666666667)) : 0"}}
mix {{falloff}}
name Multiply3
xpos 1064
ypos -477
}
push 0
push $N6ba98bd0
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(2**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(2**2))}}
crop false
name Blur2
xpos 964
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.833333333333 :falloffType == 1 ? pow(0.833333333333, 3) : falloffType == 2 ? 0.833333333333*0.833333333333*(3-2*0.833333333333) : falloffType == 3 ? 0.833333333333*0.833333333333*(2 - 0.833333333333) : falloffType == 4 ? 0.833333333333*(1 + 0.833333333333*(1 - 0.833333333333)) : 0"} {"falloffType == 0 ? 0.833333333333 :falloffType == 1 ? pow(0.833333333333, 3) : falloffType == 2 ? 0.833333333333*0.833333333333*(3-2*0.833333333333) : falloffType == 3 ? 0.833333333333*0.833333333333*(2 - 0.833333333333) : falloffType == 4 ? 0.833333333333*(1 + 0.833333333333*(1 - 0.833333333333)) : 0"} {"falloffType == 0 ? 0.833333333333 :falloffType == 1 ? pow(0.833333333333, 3) : falloffType == 2 ? 0.833333333333*0.833333333333*(3-2*0.833333333333) : falloffType == 3 ? 0.833333333333*0.833333333333*(2 - 0.833333333333) : falloffType == 4 ? 0.833333333333*(1 + 0.833333333333*(1 - 0.833333333333)) : 0"} {"falloffType == 0 ? 0.833333333333 :falloffType == 1 ? pow(0.833333333333, 3) : falloffType == 2 ? 0.833333333333*0.833333333333*(3-2*0.833333333333) : falloffType == 3 ? 0.833333333333*0.833333333333*(2 - 0.833333333333) : falloffType == 4 ? 0.833333333333*(1 + 0.833333333333*(1 - 0.833333333333)) : 0"}}
mix {{falloff}}
name Multiply2
xpos 964
ypos -477
}
push $N6ba98bd0
Blur {
size {{(width/100*parent.size*(aspectCalc.aspect.w/100))} {(height/100*parent.size*(aspectCalc.aspect.h/100))}}
crop false
name Blur1
xpos 864
ypos -554
}
Multiply {
value {1 1 1 1}
mix {{falloff}}
name Multiply1
xpos 864
ypos -477
}
Merge2 {
inputs 6+1
operation {{MergeNumber.mergeNumber}}
also_merge all
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 864
ypos -327
}
NoOp {
name End
xpos 864
ypos -279
}
Grade {
channels all
whitepoint 6
black_clamp false
name AverageMult
xpos 864
ypos 49
disable {{"output2 == 4 ? 0 : 1"}}
}
Merge2 {
inputs 2
operation max
also_merge all
name Merge2
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 864
ypos 96
disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
}
Blur {
size {{postBlur} {postBlur}}
name BlurOriginal
xpos 864
ypos 155
}
Invert {
name Invert2
xpos 864
ypos 283
disable {{"parent.size < 0 ? 0 : 1"}}
}
push $N6ba757e0
Switch {
inputs 2
which {{"parent.size == 0 ? 0 : 1"}}
name Switch1
label "\[value which]"
xpos 427
ypos 283
}
Crop {
inputs 0
box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
reformat true
crop false
name Crop1
xpos 96
ypos -931
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
AddChannels {
channels rgba
name AddChannels2
xpos 96
ypos -891
}
push $N6ba5a940
Merge2 {
inputs 2
name Merge3
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -60
ypos -891
}
set N6b7c3fa0 [stack 0]
Group {
name BBoxToFormat
onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"overscanType\":\n    if n.knob(\"overscanType\").getValue() == 1:\n        n.knob(\"overscanPercent\").setVisible(True)\n        n.knob(\"overscan\").setVisible(False)\n    else:\n        n.knob(\"overscanPercent\").setVisible(False)\n        n.knob(\"overscan\").setVisible(True)"
tile_color 0xa57aaaff
note_font "Verdana Bold"
note_font_color 0xffffffff
xpos 29
ypos -812
addUserKnob {20 CropBBox}
addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
addUserKnob {41 intersect T Crop6.intersect}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
overscanType Percentage
addUserKnob {14 overscan l Overscan +HIDDEN R 0 400}
addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
overscanPercent 1.2
addUserKnob {20 inputBbox l "BBox Data" n 1}
addUserKnob {15 inputFormat l "Input Format"}
inputFormat {0 0 {input.width} {input.height}}
addUserKnob {15 inputBBox l "Input BBox"}
inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
addUserKnob {15 outputBBox l "Output BBox"}
outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
addUserKnob {20 endGroup n -1}
addUserKnob {20 info_1 l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
addUserKnob {26 ver l Version: T v02}
}
Input {
inputs 0
name Input
xpos 261
ypos 394
}
Dot {
name Dot2
note_font_size 41
xpos 295
ypos 462
}
set N6b7eb560 [stack 0]
Dot {
name Dot1
note_font_size 41
xpos -160
ypos 462
}
set N6b7f0b50 [stack 0]
push $N6b7eb560
Crop {
box {{curve} {curve} {input.width} {input.height}}
crop {{parent.blackOutside}}
name Crop6
xpos 261
ypos 510
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
set N6b7f6540 [stack 0]
Remove {
operation keep
channels none
name Remove1
xpos 120
ypos 504
}
set N6b802b60 [stack 0]
Transform {
scale {{parent.overscanPercent} {parent.overscanPercent}}
center {{input.bbox.r/2} {input.bbox.t/2}}
shutteroffset centred
name Transform1
xpos 120
ypos 555
}
push $N6b802b60
AdjBBox {
numpixels {{parent.overscan} {parent.overscan}}
name AdjBBox1
xpos -5
ypos 510
}
Switch {
inputs 2
which {{overscanType}}
name Switch2
label "\[value which]"
xpos -5
ypos 549
}
Merge2 {
inputs 2
bbox intersection
Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
name Merge1
xpos -5
ypos 647
disable {{!parent.Crop6.intersect}}
}
push $N6b7f0b50
CopyBBox {
inputs 2
name CopyBBox1
xpos -194
ypos 653
}
BlackOutside {
name BlackOutside1
xpos -194
ypos 692
disable {{!parent.blackOutside}}
}
Dot {
name Dot4
note_font_size 41
xpos -160
ypos 769
}
push $N6b7f6540
Switch {
inputs 2
which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
name Switch1
label "\[value which]"
xpos 261
ypos 759
}
set N6b856ab0 [stack 0]
Output {
name Output1
xpos 261
ypos 921
}
push $N6b856ab0
NoOp {
name OutputBBox1
selected true
xpos 378
ypos 821
addUserKnob {20 User}
addUserKnob {15 OutputBBox l "Output BBox"}
OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
}
end_group
push $N6b7c3fa0
Merge2 {
inputs 2
name Merge4
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -60
ypos -748
}
push $N6ba5a940
CopyBBox {
inputs 2
name CopyBBox1
xpos -221
ypos -748
}
Dot {
name Dot22
note_font_size 41
xpos -187
ypos 198
}
Merge2 {
inputs 2
operation copy
bbox B
Achannels none
Bchannels none
output none
also_merge {{{parent.Remove1.channels}}}
name Merge5
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -221
ypos 283
}
Dot {
name Dot17
label A
note_font_size 41
xpos -187
ypos 675
}
Dot {
name Dot7
note_font_size 41
xpos -187
ypos 805
}
push $N6ba5a940
Dot {
name Dot2
note_font_size 41
xpos -588
ypos -1062
}
Dot {
name Dot18
label B
note_font_size 41
xpos -588
ypos 654
}
Dot {
name Dot3
note_font_size 41
xpos -588
ypos 895
}
Merge2 {
inputs 2+1
operation copy
Achannels none
Bchannels none
output none
also_merge all
name MergeKeymix
xpos -221
ypos 888
}
Output {
name Output1
xpos -221
ypos 1202
}
NoOp {
inputs 0
name MergeNumber
xpos 202
ypos -1145
addUserKnob {20 User}
addUserKnob {3 mergeNumber}
mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
}
end_group
Grade {
channels all
white {{wrapHighlightAmount/10}}
name FlareAmount
xpos 1702
ypos 1393
}
Multiply {
channels rgba
value {{globalAmount}}
name MultiplyGlobal3
label "\[value value]"
xpos 1702
ypos 1577
}
Dot {
name Dot25
label "LIGHT FLARE"
note_font_size 61
xpos 1736
ypos 1801
}
set N6b6f6d30 [stack 0]
Dot {
name Dot31
note_font_size 41
xpos 1738
ypos 2915
}
set N6b6fc680 [stack 0]
push $N6b9ddd50
push $N6ba021a0
Dot {
name Dot20
xpos 1059
ypos 179
}
Shuffle {
alpha white
name Shuffle1
label "\[value in] \[ expr \{ \[value out2] == \"none\" ? \" \" : \[concat -> \[value out2]] \}]"
note_font_size 21
note_font_color 0xffffffff
xpos 1025
ypos 238
}
Multiply {
inputs 1+1
channels rgba
value 0
name Multiply2
label "\[value value]"
xpos 1025
ypos 366
}
Dot {
name Dot9
xpos 1059
ypos 725
}
set N6b725810 [stack 0]
Dot {
name Dot28
note_font_size 41
xpos 1343
ypos 725
}
Keyer {
operation "luminance key"
name Keyer1
xpos 1309
ypos 823
}
push $N6b725810
Colorspace {
colorspace_out CIE-Yxy
name Colorspace4
xpos 1188
ypos 786
}
Expression {
inputs 1+1
expr0 "(r*(1+(r/((parent.dimHighlightsAmount+1)**2))) ) / (1+r)"
channel1 {-rgba.red -rgba.green -rgba.blue none}
expr1 "(g*(1+(g/((parent.dimHighlightsAmount+1)**2))) ) / (1+g)"
channel2 {-rgba.red -rgba.green -rgba.blue none}
expr2 "(b*(1+(b/((parent.dimHighlightsAmount+1)**2))) ) / (1+b)"
expr3 a
name Tonemap_whitepoint
xpos 1188
ypos 827
}
Colorspace {
colorspace_in CIE-Yxy
name Colorspace3
xpos 1188
ypos 867
}
push $N6b725810
Switch {
inputs 2
which {{removeHighlights}}
name Switch4
xpos 1025
ypos 867
}
Group {
name ExponGlowWrapAll
onCreate "n = nuke.thisNode()\nn.knob('size').setRange(0, 50)\n#n.knob('exp').setRange(1, 4)\nnuke.thisNode().knob('steps').setFlag(0x02000000)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n\n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n\nelif k.name() == \"steps\":\n\n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        m1    = nuke.toNode(\"Multiply1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n\n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n\n        m1x   = m1.xpos()\n        m1y   = m1.ypos()\n        m1n   = m1.name()\n\n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('exp').getValue()\n\n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, m1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            m = nuke.nodes.Multiply()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"all\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression( \"((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(\{\}**2))\".format(str(i+1)), 0 )\n            b\[\"size\"].setExpression( \"((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(\{\}**2))\".format(str(i+1)), 1 )\n            b\[\"label\"].setValue('')\n            blurAbove = b.name()\n\n            m.setXYpos(m1x+i*100,m1y)\n            m.setInput(0, nuke.toNode(blurAbove))\n            m\[\"channels\"].setValue(\"all\")\n            m\[\"value\"].setValue(1,1,1,1)\n            j = 1-(i/steps)\n            m\[\"value\"].setExpression('falloffType == 0 ? \{\} :falloffType == 1 ? pow(\{\}, 3) : falloffType == 2 ? \{\}*\{\}*(3-2*\{\}) : falloffType == 3 ? \{\}*\{\}*(2 - \{\}) : falloffType == 4 ? \{\}*(1 + \{\}*(1 - \{\})) : 0'.format(j,j,j,j,j,j,j,j,j,j,j))\n            m\[\"mix\"].setExpression(\"falloff\")\n            m\[\"label\"].setValue('')\n\n            merge.setInput(i if i<2 else i+1, m)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n\n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n\nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n\n"
tile_color 0xcc804eff
label "(\[value output2])"
note_font "Verdana Bold"
note_font_color 0xffffffff
xpos 1025
ypos 995
addUserKnob {20 ExponBlurSimple}
addUserKnob {41 channels T Remove1.channels}
addUserKnob {26 ""}
addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
output2 Over
addUserKnob {3 steps l "  Steps" -STARTLINE}
steps 8
addUserKnob {26 text l " " T " "}
addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
AvgMaxOriginal true
addUserKnob {14 size l Size R 0 50}
size 10
addUserKnob {14 exp l Exponent +INVISIBLE R 1 4}
exp 3
addUserKnob {6 color_rgba_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
addUserKnob {7 falloff l Falloff}
falloff 1
addUserKnob {4 falloffType l "Falloff Type" M {Linear pLinear smooth smooth0 smooth1 ""}}
falloffType pLinear
addUserKnob {14 postBlur l "Post Blur" R 0 100}
addUserKnob {26 ""}
addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
addUserKnob {41 mix T MergeKeymix.mix}
addUserKnob {14 safeBBoxPixels l "" +STARTLINE +HIDDEN R 0 400}
safeBBoxPixels 100
addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
adjustBBoxPercent 1
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "Tony Lyons"}
addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
addUserKnob {26 ver l Version: T v02}
}
Input {
inputs 0
name Inputmask
xpos 346
ypos 596
number 1
}
Dot {
name Dot19
label Mask
note_font_size 41
xpos 380
ypos 662
}
Dot {
name Dot10
note_font_size 41
xpos 380
ypos 899
}
Input {
inputs 0
name Inputimg
xpos -221
ypos -1229
}
Dot {
name Dot16
note_font_size 41
xpos -187
ypos -1062
}
set N6b7b0930 [stack 0]
Dot {
name Dot1
note_font_size 41
xpos 461
ypos -1058
}
Remove {
operation keep
channels rgba
name Remove1
xpos 427
ypos -980
}
NoOp {
name aspectCalc
xpos 427
ypos -939
addUserKnob {20 User}
addUserKnob {14 aspect R 0 100}
aspect {{parent.size.w} {(parent.size.h/format.pixel_aspect/height*width)*format.pixel_aspect}}
}
Dot {
name Dot21
note_font_size 41
xpos 461
ypos -853
}
set N6b5cb890 [stack 0]
Invert {
name Invert1
xpos 864
ypos -860
disable {{"parent.size < 0 ? 0 : 1"}}
}
set N6b5d11a0 [stack 0]
Dot {
name Dot4
note_font_size 41
xpos 540
ypos -604
}
NoOp {
name Original
xpos 506
ypos -327
}
Dot {
name Dot5
note_font_size 41
xpos 540
ypos 100
}
push $N6b5d11a0
NoOp {
name Start
xpos 864
ypos -706
}
set N6b5eebe0 [stack 0]
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(8**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(8**2))}}
crop false
name Blur8
xpos 1564
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"} {"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"} {"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"} {"falloffType == 0 ? 0.125 :falloffType == 1 ? pow(0.125, 3) : falloffType == 2 ? 0.125*0.125*(3-2*0.125) : falloffType == 3 ? 0.125*0.125*(2 - 0.125) : falloffType == 4 ? 0.125*(1 + 0.125*(1 - 0.125)) : 0"}}
mix {{falloff}}
name Multiply8
xpos 1564
ypos -477
}
push $N6b5eebe0
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(7**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(7**2))}}
crop false
name Blur7
xpos 1464
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"} {"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"} {"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"} {"falloffType == 0 ? 0.25 :falloffType == 1 ? pow(0.25, 3) : falloffType == 2 ? 0.25*0.25*(3-2*0.25) : falloffType == 3 ? 0.25*0.25*(2 - 0.25) : falloffType == 4 ? 0.25*(1 + 0.25*(1 - 0.25)) : 0"}}
mix {{falloff}}
name Multiply7
xpos 1464
ypos -477
}
push $N6b5eebe0
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(6**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(6**2))}}
crop false
name Blur6
xpos 1364
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"} {"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"} {"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"} {"falloffType == 0 ? 0.375 :falloffType == 1 ? pow(0.375, 3) : falloffType == 2 ? 0.375*0.375*(3-2*0.375) : falloffType == 3 ? 0.375*0.375*(2 - 0.375) : falloffType == 4 ? 0.375*(1 + 0.375*(1 - 0.375)) : 0"}}
mix {{falloff}}
name Multiply6
xpos 1364
ypos -477
}
push $N6b5eebe0
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(5**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(5**2))}}
crop false
name Blur5
xpos 1264
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"}}
mix {{falloff}}
name Multiply5
xpos 1264
ypos -477
}
push $N6b5eebe0
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(4**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(4**2))}}
crop false
name Blur4
xpos 1164
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"} {"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"} {"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"} {"falloffType == 0 ? 0.625 :falloffType == 1 ? pow(0.625, 3) : falloffType == 2 ? 0.625*0.625*(3-2*0.625) : falloffType == 3 ? 0.625*0.625*(2 - 0.625) : falloffType == 4 ? 0.625*(1 + 0.625*(1 - 0.625)) : 0"}}
mix {{falloff}}
name Multiply4
xpos 1164
ypos -477
}
push $N6b5eebe0
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(3**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(3**2))}}
crop false
name Blur3
xpos 1064
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"} {"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"} {"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"} {"falloffType == 0 ? 0.75 :falloffType == 1 ? pow(0.75, 3) : falloffType == 2 ? 0.75*0.75*(3-2*0.75) : falloffType == 3 ? 0.75*0.75*(2 - 0.75) : falloffType == 4 ? 0.75*(1 + 0.75*(1 - 0.75)) : 0"}}
mix {{falloff}}
name Multiply3
xpos 1064
ypos -477
}
push 0
push $N6b5eebe0
Blur {
size {{((width/100*parent.size.w)*(aspectCalc.aspect.w/100)*(2**2))} {((height/100*parent.size.h)*(aspectCalc.aspect.h/100)*(2**2))}}
crop false
name Blur2
xpos 964
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"} {"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"} {"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"} {"falloffType == 0 ? 0.875 :falloffType == 1 ? pow(0.875, 3) : falloffType == 2 ? 0.875*0.875*(3-2*0.875) : falloffType == 3 ? 0.875*0.875*(2 - 0.875) : falloffType == 4 ? 0.875*(1 + 0.875*(1 - 0.875)) : 0"}}
mix {{falloff}}
name Multiply2
xpos 964
ypos -477
}
push $N6b5eebe0
Blur {
size {{(width/100*parent.size*(aspectCalc.aspect.w/100))} {(height/100*parent.size*(aspectCalc.aspect.h/100))}}
crop false
name Blur1
xpos 864
ypos -554
}
Multiply {
value {1 1 1 1}
mix {{falloff}}
name Multiply1
xpos 864
ypos -477
}
Merge2 {
inputs 8+1
operation {{MergeNumber.mergeNumber}}
also_merge all
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 864
ypos -327
}
NoOp {
name End
xpos 864
ypos -279
}
Grade {
channels all
whitepoint 8
black_clamp false
name AverageMult
xpos 864
ypos 49
disable {{"output2 == 4 ? 0 : 1"}}
}
Merge2 {
inputs 2
operation max
also_merge all
name Merge2
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 864
ypos 96
disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
}
Blur {
size {{postBlur} {postBlur}}
name BlurOriginal
xpos 864
ypos 155
}
Invert {
name Invert2
xpos 864
ypos 283
disable {{"parent.size < 0 ? 0 : 1"}}
}
push $N6b5cb890
Switch {
inputs 2
which {{"parent.size == 0 ? 0 : 1"}}
name Switch1
label "\[value which]"
xpos 427
ypos 283
}
Crop {
inputs 0
box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
reformat true
crop false
name Crop1
xpos 96
ypos -931
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
AddChannels {
channels rgba
name AddChannels2
xpos 96
ypos -891
}
push $N6b7b0930
Merge2 {
inputs 2
name Merge3
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -60
ypos -891
}
set N6b555660 [stack 0]
Group {
name BBoxToFormat
onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"overscanType\":\n    if n.knob(\"overscanType\").getValue() == 1:\n        n.knob(\"overscanPercent\").setVisible(True)\n        n.knob(\"overscan\").setVisible(False)\n    else:\n        n.knob(\"overscanPercent\").setVisible(False)\n        n.knob(\"overscan\").setVisible(True)"
tile_color 0xa57aaaff
note_font "Verdana Bold"
note_font_color 0xffffffff
xpos 29
ypos -812
addUserKnob {20 CropBBox}
addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
addUserKnob {41 intersect T Crop6.intersect}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
overscanType Percentage
addUserKnob {14 overscan l Overscan +HIDDEN R 0 400}
addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
overscanPercent 1.2
addUserKnob {20 inputBbox l "BBox Data" n 1}
addUserKnob {15 inputFormat l "Input Format"}
inputFormat {0 0 {input.width} {input.height}}
addUserKnob {15 inputBBox l "Input BBox"}
inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
addUserKnob {15 outputBBox l "Output BBox"}
outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
addUserKnob {20 endGroup n -1}
addUserKnob {20 info_1 l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
addUserKnob {26 ver l Version: T v02}
}
Input {
inputs 0
name Input
xpos 261
ypos 394
}
Dot {
name Dot2
note_font_size 41
xpos 295
ypos 462
}
set N6b57cc20 [stack 0]
Dot {
name Dot1
note_font_size 41
xpos -160
ypos 462
}
set N6b582210 [stack 0]
push $N6b57cc20
Crop {
box {{curve} {curve} {input.width} {input.height}}
crop {{parent.blackOutside}}
name Crop6
xpos 261
ypos 510
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
set N6b587c00 [stack 0]
Remove {
operation keep
channels none
name Remove1
xpos 120
ypos 504
}
set N6b594220 [stack 0]
Transform {
scale {{parent.overscanPercent} {parent.overscanPercent}}
center {{input.bbox.r/2} {input.bbox.t/2}}
shutteroffset centred
name Transform1
xpos 120
ypos 555
}
push $N6b594220
AdjBBox {
numpixels {{parent.overscan} {parent.overscan}}
name AdjBBox1
xpos -5
ypos 510
}
Switch {
inputs 2
which {{overscanType}}
name Switch2
label "\[value which]"
xpos -5
ypos 549
}
Merge2 {
inputs 2
bbox intersection
Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
name Merge1
xpos -5
ypos 647
disable {{!parent.Crop6.intersect}}
}
push $N6b582210
CopyBBox {
inputs 2
name CopyBBox1
xpos -194
ypos 653
}
BlackOutside {
name BlackOutside1
xpos -194
ypos 692
disable {{!parent.blackOutside}}
}
Dot {
name Dot4
note_font_size 41
xpos -160
ypos 769
}
push $N6b587c00
Switch {
inputs 2
which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
name Switch1
label "\[value which]"
xpos 261
ypos 759
}
set N6b3e8320 [stack 0]
Output {
name Output1
xpos 261
ypos 921
}
push $N6b3e8320
NoOp {
name OutputBBox1
selected true
xpos 378
ypos 821
addUserKnob {20 User}
addUserKnob {15 OutputBBox l "Output BBox"}
OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
}
end_group
push $N6b555660
Merge2 {
inputs 2
name Merge4
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -60
ypos -748
}
push $N6b7b0930
CopyBBox {
inputs 2
name CopyBBox1
xpos -221
ypos -748
}
Dot {
name Dot22
note_font_size 41
xpos -187
ypos 198
}
Merge2 {
inputs 2
operation copy
bbox B
Achannels none
Bchannels none
output none
also_merge {{{parent.Remove1.channels}}}
name Merge5
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -221
ypos 283
}
Dot {
name Dot17
label A
note_font_size 41
xpos -187
ypos 675
}
Dot {
name Dot7
note_font_size 41
xpos -187
ypos 805
}
push $N6b7b0930
Dot {
name Dot2
note_font_size 41
xpos -588
ypos -1062
}
Dot {
name Dot18
label B
note_font_size 41
xpos -588
ypos 654
}
Dot {
name Dot3
note_font_size 41
xpos -588
ypos 895
}
Merge2 {
inputs 2+1
operation copy
Achannels none
Bchannels none
output none
also_merge all
name MergeKeymix
xpos -221
ypos 888
}
Output {
name Output1
xpos -221
ypos 1202
}
NoOp {
inputs 0
name MergeNumber
xpos 202
ypos -1145
addUserKnob {20 User}
addUserKnob {3 mergeNumber}
mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
}
end_group
Dot {
name Dot40
note_font_size 41
xpos 1059
ypos 1277
}
set N6b469100 [stack 0]
Grade {
channels all
white {{wrapAllAmount/10}}
name GradeBgWrapAmount
xpos 1025
ypos 1399
}
Multiply {
channels rgba
value {{globalAmount}}
name MultiplyGlobal1
label "\[value value]"
xpos 1025
ypos 1566
}
Dot {
name Dot37
label "WRAP ALL"
note_font_size 61
xpos 1059
ypos 1692
}
set N6b48df60 [stack 0]
Dot {
name Dot27
note_font_size 41
xpos 1059
ypos 3062
}
set N6b4938b0 [stack 0]
Merge2 {
inputs 2
name Merge1
xpos 1530
ypos 3168
}
Shuffle {
alpha white
name Shuffle5
tile_color 0xffffffff
note_font_color 0xffffffff
xpos 1530
ypos 3216
}
Merge2 {
inputs 2
operation mask
bbox A
name Merge14
xpos 1530
ypos 3273
}
push $N6b9d2b10
push $N6b4938b0
Shuffle {
alpha white
name Shuffle2
tile_color 0xffffffff
note_font_color 0xffffffff
xpos 1025
ypos 3158
}
Merge2 {
inputs 2
operation mask
bbox A
name Merge7
xpos 1025
ypos 3220
}
push $N6b9cd040
push $N6b6fc680
Shuffle {
alpha white
name Shuffle4
tile_color 0xffffffff
note_font_color 0xffffffff
xpos 1708
ypos 3020
}
Merge2 {
inputs 2
operation mask
bbox A
name Merge13
xpos 1708
ypos 3103
}
push $N6ba13450
Dot {
name Dot21
xpos 2349
ypos 397
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle3
tile_color 0xffffffff
label alpha
note_font_size 21
note_font_color 0xffffffff
xpos 2315
ypos 496
}
Dot {
name Dot23
xpos 2349
ypos 3399
}
push $N6b469100
Dot {
name Dot29
note_font_size 41
xpos 757
ypos 1277
}
set N6b32f7f0 [stack 0]
Grade {
channels rgba
gamma {{parent.bleedColorFalloff_2}}
name Grade1
xpos 724
ypos 2638
}
Dot {
name Dot33
note_font_size 41
xpos 758
ypos 2835
}
Multiply {
channels rgba
value {{globalAmount}}
name MultiplyGlobal2
label "\[value value]"
xpos 297
ypos 2828
}
push $N6b725810
Dot {
name Dot38
note_font_size 41
xpos 438
ypos 725
}
set N6b35ad70 [stack 0]
Dot {
name Dot2
note_font_size 41
xpos 439
ypos 802
}
set N6b360510 [stack 0]
Dot {
name Dot17
note_font_size 41
xpos 334
ypos 802
}
Dot {
name Dot16
note_font_size 41
xpos 334
ypos 1201
}
push $N6b360510
Blur {
size {{(width/13*parent.bleedColorSize*16*(ExponGlowWrapAll.aspectCalc.aspect.w/100))} {(height/13*parent.bleedColorSize*16*(ExponGlowWrapAll.aspectCalc.aspect.h/100))}}
crop false
name Blur6
xpos 856
ypos 874
}
push $N6b360510
Blur {
size {{(width/13*parent.bleedColorSize*8*(ExponGlowWrapAll.aspectCalc.aspect.w/100))} {(height/13*parent.bleedColorSize*8*(ExponGlowWrapAll.aspectCalc.aspect.h/100))}}
crop false
name Blur4
xpos 743
ypos 873
}
push $N6b360510
Blur {
size {{(width/15*parent.bleedColorSize*4*(ExponGlowWrapAll.aspectCalc.aspect.w/100))} {(height/15*parent.bleedColorSize*4*(ExponGlowWrapAll.aspectCalc.aspect.h/100))}}
crop false
name Blur3
xpos 627
ypos 874
}
push $N6b360510
Blur {
size {{(width/20*parent.bleedColorSize*2*(ExponGlowWrapAll.aspectCalc.aspect.w/100))} {(height/20*parent.bleedColorSize*2*(ExponGlowWrapAll.aspectCalc.aspect.h/100))}}
crop false
name Blur2
xpos 515
ypos 872
}
push $N6b360510
Blur {
size {{(width/25*parent.bleedColorSize*(ExponGlowWrapAll.aspectCalc.aspect.w/100))} {(height/25*parent.bleedColorSize*(ExponGlowWrapAll.aspectCalc.aspect.h/100))}}
crop false
name Blur1
xpos 404
ypos 871
}
Merge2 {
inputs 2
operation under
bbox B
name Merge2
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 404
ypos 941
}
Merge2 {
inputs 2
operation under
bbox B
name Merge4
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 404
ypos 999
}
Merge2 {
inputs 2
operation under
bbox B
name Merge8
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 404
ypos 1049
}
Merge2 {
inputs 2
operation under
bbox B
name Merge12
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 404
ypos 1087
}
Unpremult {
name Unpremult2
xpos 404
ypos 1111
}
Blur {
size {{(width/50*parent.bleedColorSize*10*(ExponGlowWrapAll.aspectCalc.aspect.w/100))} {(height/50*parent.bleedColorSize*10*(ExponGlowWrapAll.aspectCalc.aspect.h/100))}}
crop false
name Blur5
xpos 404
ypos 1151
}
CopyBBox {
inputs 2
name CopyBBox1
xpos 404
ypos 1198
}
Unpremult {
name Unpremult5
xpos 404
ypos 2385
}
Colorspace {
channels all
colorspace_out HSV
name Colorspace1
xpos 404
ypos 2456
}
Multiply {
value {1 1 0 1}
name Multiply5
label "\[value value]"
xpos 404
ypos 2532
}
push $N6b6f6d30
push $N6b48df60
push $N6b35ad70
Dot {
name Dot10
xpos 201
ypos 725
}
Clamp {
minimum 0.001
maximum 100
name Clamp1
xpos 167
ypos 996
}
Dot {
name Dot24
xpos 201
ypos 1517
}
Multiply {
channels rgba
value {{globalAmount}}
name MultiplyGlobal
label "\[value value]"
xpos 19
ypos 1507
}
push $N6b32f7f0
Colorspace {
channels all
colorspace_out HSV
name Colorspace6
xpos -13
ypos 1267
}
Multiply {
value {1 1 0 1}
name Multiply4
label "\[value value]"
xpos -123
ypos 1262
}
push $N6bbbc530
Remove {
operation keep
channels rgba
name Remove1
xpos -413
ypos 594
}
Unpremult {
channels all
name Unpremult1
xpos -407
ypos 1094
disable {{premultiplied*-1+1 x1 1}}
}
set N6b2adec0 [stack 0]
Dot {
name Dot12
xpos -226
ypos 1101
}
Colorspace {
channels all
colorspace_out HSV
name Colorspace5
xpos -260
ypos 1140
}
Multiply {
value {0 0 1 1}
name Multiply3
label "\[value value]"
xpos -260
ypos 1188
}
Merge2 {
inputs 2
operation plus
Achannels none
Bchannels none
output none
also_merge all
name Merge3
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -260
ypos 1267
}
Colorspace {
channels all
colorspace_in HSV
name Colorspace7
xpos -260
ypos 1327
}
Dot {
name Dot36
label "BLEND EDGES"
note_font_size 45
xpos -226
ypos 1408
}
push $N6b2adec0
Dot {
name Dot18
note_font_size 41
xpos -373
ypos 1514
}
set N6b115a60 [stack 0]
Merge2 {
inputs 2+1
operation copy
bbox B
Achannels none
Bchannels none
output none
also_merge all
mix {{blendEdgesAmount}}
name Merge10
xpos -260
ypos 1507
}
Dot {
name Dot22
note_font_size 41
xpos -226
ypos 1588
}
push $N6b115a60
Switch {
inputs 2
which {{"blendEdgesAmount == 0 ? 0 : 1"}}
name Switch3
xpos -407
ypos 1585
}
Merge2 {
inputs 2
bbox B
Achannels none
Bchannels none
output none
also_merge all
name Merge5
xpos -407
ypos 1685
}
Merge2 {
inputs 2
bbox B
Achannels none
Bchannels none
output none
also_merge all
name Merge6
xpos -407
ypos 1791
}
Dot {
name Dot34
note_font_size 41
xpos -373
ypos 2417
}
set N6b15eb30 [stack 0]
Colorspace {
channels all
colorspace_out HSV
name Colorspace2
xpos -81
ypos 2410
}
Multiply {
value {0 0 1 1}
name Multiply6
label "\[value value]"
xpos -81
ypos 2458
}
Merge2 {
inputs 2
operation plus
Achannels none
Bchannels none
output none
also_merge all
name Merge11
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -81
ypos 2537
}
Colorspace {
channels all
colorspace_in HSV
name Colorspace8
xpos -81
ypos 2606
}
push $N6b2adec0
Dot {
name Dot13
xpos -579
ypos 1101
}
Dot {
name Dot14
xpos -579
ypos 2559
}
push $N6b15eb30
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos -407
ypos 2549
}
Dot {
name Dot6
note_font_size 41
xpos -373
ypos 2649
}
set N6afd3680 [stack 0]
Merge2 {
inputs 2+1
operation copy
output {rgba.red rgba.green rgba.blue -rgba.alpha}
mix {{bleedColorAmount}}
name Merge9
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -81
ypos 2828
}
push $N6afd3680
Switch {
inputs 2
which {{"parent.bleedColorAmount== 0 ? 0 : 1"}}
name Switch2
xpos -407
ypos 2832
}
Premult {
name Premult3
xpos -407
ypos 2983
disable {{premultiplied*-1+1 i}}
}
Dot {
name Dot19
xpos -373
ypos 3396
}
Switch {
inputs 5
which {{"\[value ls parent.outputView]"}}
name Switch1
xpos 1708
ypos 3395
}
push $N6b9c7750
Dot {
name Dot5
note_font_size 41
xpos -825
ypos 3581
}
Merge2 {
inputs 2+1
operation copy
also_merge all
name MergeCopyLightWrapPro
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 1708
ypos 3580
}
Output {
name Output1
xpos 1708
ypos 3898
}
end_group
push $cut_paste_input
Group {
name CatsEyeDefocus
tile_color 0xb16f43ff
selected true
xpos 42739
ypos -2156
addUserKnob {20 CtrlTab l "Cat's Eye Defocus"}
addUserKnob {4 show l output M {result preview bokeh highlights "" ""}}
addUserKnob {7 size R 1 100}
size 50
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScript1.useGPUIfAvailable}
addUserKnob {26 catseyeeffect l "@b;Cat's eye"}
addUserKnob {7 effectAmount l "effect amount"}
effectAmount 0.5
addUserKnob {7 edgeSoftness l "edge softness"}
edgeSoftness 0.05
addUserKnob {6 interpolate +STARTLINE}
interpolate true
addUserKnob {26 Shape l "@b;Bokeh"}
addUserKnob {3 blades l "blades count"}
blades 6
addUserKnob {7 rounded}
rounded 0.9
addUserKnob {7 sharpness_1 l sharpness}
sharpness_1 0.8
addUserKnob {7 rotate R 0 360}
rotate 12
addUserKnob {26 hr l "       "}
addUserKnob {7 innersize l "inner size"}
innersize 0.8
addUserKnob {7 innerfalloff l "inner falloff"}
innerfalloff 0.6
addUserKnob {7 innerBrightness l "inner brightness"}
innerBrightness 0.5
addUserKnob {6 useimage l "use filter image" +STARTLINE}
addUserKnob {6 linksize l "link size" -STARTLINE}
linksize true
addUserKnob {26 highlightsHr l "@b;Hightlights"}
addUserKnob {7 boostHighlights l boost R 0 10}
boostHighlights 6
addUserKnob {7 highlightsSaturation l saturation}
highlightsSaturation 1
addUserKnob {7 highlightsStart l "range start"}
highlightsStart 0.5
addUserKnob {7 highlightsEnd l "range end"}
highlightsEnd 0.6
addUserKnob {20 Help}
addUserKnob {26 ver l "" +STARTLINE T "CatsEyeDefocus is a manual convolution filter which simulates swirly bokeh.\n\n.kernel/gizmo ver 1.0/2.0\n\nAlexander Kulikov\ncoolikov.com\n"}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x71bec6ff
label "Bokeh Setup"
note_font_size 42
xpos 238
ypos -192
bdwidth 298
bdheight 328
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0x7171c600
label "Filter Image"
note_font_size 42
xpos -68
ypos -69
bdwidth 237
bdheight 208
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0x388e8e00
label SRC
note_font_size 42
xpos -437
ypos -218
bdwidth 297
bdheight 357
}
Input {
inputs 0
name src
xpos -337
ypos -139
}
set N6bbcf100 [stack 0]
Dot {
name Dot3
xpos -303
ypos -79
}
set N6bbd4800 [stack 0]
Dot {
name Dot4
xpos -208
ypos -79
}
Keyer {
operation "luminance key"
range {{parent.highlightsStart x232 0.06} {parent.highlightsEnd x232 0.7912925952} 1 1}
name Keyer3
xpos -242
ypos -10
}
Dot {
name Dot7
xpos -208
ypos 85
}
set N6bbead20 [stack 0]
Shuffle {
red alpha
green alpha
blue alpha
name Highlights
xpos -242
ypos 640
}
Input {
inputs 0
name filter
xpos 15
ypos -1
number 1
}
Shuffle {
green red
blue red
alpha black
name Shuffle1
xpos 15
ypos 38
}
Reformat {
type "to box"
box_width {{int(parent.size)}}
name Reformat2
xpos 15
ypos 91
disable {{!parent.linksize}}
}
Dot {
name Dot14
xpos 49
ypos 209
}
Constant {
inputs 0
channels rgb
format "255 255 0 0 255 255 1 256x256"
name Constant1
label "512x512 Constant"
xpos 276
ypos -97
postage_stamp false
}
Flare {
position {{(width+1)/2} {(height+1)/2}}
offset 3.55
radius {{(radius.2*0.96)*parent.innersize x60 0 x70 0 x71 108} 490 500}
size_mult {{width/radius.2/2}}
inner_color {{parent.innerBrightness}}
outer_falloff 2
inner_falloff {{parent.innerfalloff*10}}
vis_out 1
corners {{parent.blades}}
flattening {{clamp(1-parent.rounded)}}
sharpness {{parent.sharpness_1}}
corners_angle {{parent.rotate}}
asym_repeat 0
name Flare
selected true
xpos 276
ypos -35
}
Shuffle {
alpha black
name Shuffle3
xpos 276
ypos 19
}
Reformat {
type "to box"
box_width {{int(parent.size)}}
name Reformat1
xpos 276
ypos 83
}
Switch {
inputs 2
which {{parent.useimage}}
name SwitchFilter
xpos 276
ypos 206
}
Dot {
name Dot22
xpos 310
ypos 309
}
set N6bc7e7d0 [stack 0]
Transform {
translate {{"src.width/2 - width/2"} {"src.height/2 - height/2"}}
center {{width/2} {height/2}}
name Transform1
xpos -584
ypos 306
}
Dot {
name Dot21
xpos -550
ypos 403
}
push $N6bbcf100
Dot {
name Dot20
xpos -655
ypos -136
}
Shuffle {
red black
green black
blue black
alpha black
name Shuffle4
xpos -689
ypos 306
}
Merge2 {
inputs 2
bbox B
name Merge5
xpos -689
ypos 400
}
Shuffle {
green red
blue red
name Bokeh
xpos -689
ypos 635
}
Dot {
name Dot9
xpos -655
ypos 787
}
push $N6bc7e7d0
Dot {
name Dot1
xpos 310
ypos 379
}
set N6bad8c70 [stack 0]
Dot {
name Dot15
xpos 310
ypos 444
}
set N6bade570 [stack 0]
Dot {
name Dot16
xpos 32
ypos 444
}
push $N6bbead20
push $N6bbd4800
Dot {
name Dot5
xpos -393
ypos -79
}
Multiply {
channels rgb
value {{parent.boostHighlights<0?0:parent.boostHighlights}}
name Multiply1
xpos -427
ypos -18
}
Saturation {
saturation {{1+parent.highlightsSaturation*0.5}}
mode Average
name Saturation1
xpos -427
ypos 6
}
Dot {
name Dot6
xpos -393
ypos 85
}
push $N6bbd4800
Merge2 {
inputs 2+1
operation screen
Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
output {rgba.red rgba.green rgba.blue -rgba.alpha}
name Merge2
xpos -337
ypos 82
}
Dot {
name Dot2
xpos -303
ypos 524
}
Dot {
name Dot17
xpos -75
ypos 524
}
set N6bb27280 [stack 0]
Dot {
name Dot18
xpos -75
ypos 611
}
Convolve2 {
inputs 2
channels rgba
useGPUIfAvailable {{parent.BlinkScript1.useGPUIfAvailable}}
filter_channel rgba.red
name Convolve1
xpos -2
ypos 608
}
Dot {
name Dot11
xpos 32
ypos 709
}
push $N6bad8c70
Radial {
replace true
area {0 0 {input.width} {input.height}}
softness {{parent.edgeSoftness}}
name LensEdge
xpos 390
ypos 376
}
Dot {
name Dot8
xpos 424
ypos 524
}
push $N6bade570
push $N6bb27280
BlinkScript {
inputs 3
ProgramGroup 1
KernelDescription "1 \"CatsEyeConvolve\" iterate pixelWise d3f7f7268f50afeb0ffd385b019c65664a5775e0f4a8983e20044cb012fe17e8 4 \"src\" Read Ranged2D \"filter\" Read Random \"ext\" Read Random \"dst\" Write Point 3 \"Amount\" Float 1 AACAPw== \"Format\" Int 2 AAUAANACAAA= \"Interpolate\" Bool 1 AQ=="
EncodedSource "1 2904 +vduhx3Y8JBmLeiWCjYc02Q9Odx8FJ5dqBe/uX9TgyhEk6K88rIuF+cFmQD78ej6LXg8cuU82LdC7ZdSjjaCt7bMKxSafnhAwKeJiaKUcp/+LiX8yNxidGrQQxLQOP7mJxzynvhLiZBi6jQNXkFsWw9tupyAWMf2qSD10fk3qTUWlMD6XFM/zII9/AmE5qDC2FkhswV5WQTY84O+twxw3U7UMVt3oTZoOTgDFqtGWTVvsk146amMUbTFV1L5euCqLBLp3wqtLoJISJzHd2ZAoqe7Wp2fvMcStAcjK+rH2teU1DYAWu3wiYPfNt4G6DEKr6EhLxyzXbKygpUQGi/bRIBfVwNdNSQAGLJaeVS87Brbg3ya/OJOhIISEsTpTiDj19joP31EUPvdS22/WnBmaa66RIqmbPwnvDbVQCL0r+luwbvaA5LFpEHjh3DOog200fCwwdSuc8Fb7HVmKE7I+9DauBHYIu5cO7AcA4EoVPnAEs89gjGLY8FVUPHpnwERocJRxhgYIxAo3xPT5Djh29RpCA+dupA1bnSQ6BR+yLIvprsdWE9xicWBmfJFuFc/8NcWzaR+JZJy1skX3ZpJm8JQvG8daMu/p3x03cxh+8iwMTePxPr3l4HZrg4gxd5GXhhztiVQ+XqYa21vFChqNo7QofCpFZAjEjKxP/E+9tDko54qg+JeVWXUZgvUR6vr6bwkq5Cr7NRfo2uWCNldENhZz/US7gm2sh52+zzoHNCVuBKeFVTojP1Nk23GH7y0zvv9+fK9BIrp5rBp7cl+di31vaUBLrONMQ14NRx3u//vxY7Uywj6qGC7CUJVJTJ1cw3rnQ0MXhcHpRF6L0Rdn4ibV2logTMVbMoM34m/os0oED2CFnX2W85jab/utQRRQoSXz2VPRMi/XqwbKlsswzLyWbBgSnmKKCHwgQNpeTQyLMkGISozK/247JdCzHyXFDasHp9l4VaRoATHOmsihJIW/PnpNyvKsm2BCkXqN7DrzD13z1SAOeV82KE/QBrxWIyLRDGsdNS9PaS/FUjANfOvVUn92njVkuc2pv/WPL08Z9os37rSrEBByUk5Mqfa4HXJMMYqF7BpSuP5B1pqxiGoQI1N7uDOR5QjsHttqGcTnSa8oZdZHZkcOGFyFv7zsm8hx1LkCwMCIkO8pnSDynoZqe0z7GfWx80RA3eAfEV4ejq0Cdva61MfNddLq77oynH5rYGW/Gf/ylF0YySMf1HKe4akObXLlpbpZxgMsUHAaa6u4xbRZpsL/qlsh4Imaxd7mBYULfj6DbAzYc8fHTAWnJJh1Dt8jQLKg9ESMKWWNNpxZhfRbb8CCsrpIhR5WdLMNlu9dAtJSvnzSpF4WVICjQgKpCn5mW+dSIZIftWKd2tZyRWixvgeuMug4XUQkivl3K8tyzr+o78zDY4axqC5hdyWuYtpht08t5LCrgBFSXF9fdyGdxWxL/e9eixxwbtVr1bfccHnoZOeSImPh9MwE9fYPqitiqR61rNd8JCbYrK2spn9sgN1m7ILSEVupS6JRJiRwWF6HWobjwuzquSXkvZ/EOYzPdIfjb1M0ynQNu1ppjJjTcQksQ3NZZnPLc3HjK48YLB8nZtSX9scvTC9pTji5qSiiIHABqJxIxcED1NIB3wm9DTPoxp3e2mgWEga1N61qGr8QSQy7Rk/aRpFbb3u1x+Kwns/EUErYh4UId2IfxFdLR/5cTiNPIMclEPz4Voj/4AAWBwZLNq1zVVEZRkj2fHNh5VT3L0UtClp0IazpGARc4OtuDhdnz8p7jRE8bzKkIGn1X43Ba5hk7Y7xRUp8ow0zrLDgG3hxtE+7bh4nA4J5ysFiaIgHPXpVHtPMu1bYx+itEvoai8SgF11RjWxsupBlH5vjpisajl11qyYs2zS++3QmbONIxfhsgmEWMNu3uFyX7iMg9uz/pb2hWBCceNvQvPpxODqTaZzdJzRKS9ajlHRktzmJGLimWCGLfFfvDnOOC1Ou2sCPHZ4nF1esuL6jgXkNOfRshYHBYMd4tTNx0zKqTrNAmdZY2XMPyaqkVIqtPi/ygcVCivFsUXtq1D5icJiHLOQHHzdbJGEgoORWVx+x//KKgb+eTqN2ln8sIqcmpv9nqNf9ZWOr54ktg9fKvw0Jl+HTucpd2XBLv3frDDjz3C9pfIBo6GZBiNyvnnv6xUfwsaxT+WG8X3abo8oU3U3OjI8+dztaLyTg1fmKbqyX2iTj46PJO5P2HwBw2otFO0v4zHgnchKc8goMw2WIjjzUGEr/eJtWt+iAeIK1gt9mTKjeBwAxeBO6Vpcri9G4LElTzlSZWENpPBiBXi6o9qkMxL+C+ztrL2q9/ajja+NUGphU/v9ecnh7DqLjZWq0xMWqQ8/NrEs3ldwKCmWETYC3YnxBfL/bhQS5JH3Lv0th7fAKWWO8qxxdBf+EuFi0PVRifBqIOK5fqfYeO82q+dg0HLMrLKhLjuWyKq96SbIke7uvULYwTDwBowzHYC29B91QPurz3Ot7+/GrScjzYf4cA9Bby22TjL2gb7CHMmqRz8JxsPGLmBHd+daGsreA4u4Wv+cZtR3wMRsg3mayzTdQEkulKC8qUpsLSLFMchaZkkjiMhwZe/2u9D5uzuIaqIoZnKHAzinBAIW2JjjyrIXA+UGTytAdiGYC1S3wGax2HawBoPqLphpLGswKYp0k+Baa1iR0PfwElsS6j4h0+MskQpPhEgXCKhJi0wwXAn6oa+hDEMs1BlOPBdv3c7GRV2wrSQqtAujGkRtVW+8D1U9D6ZbpMmrrPA4uukb5Uv4nK9kls2xqBnQuZti8WpskSTYtEYIfn0lT9Yh/yX51ky+4NNcj83NiiQiD2fa7ODTgo8SQ5oRF94/zhjERAohre0OfM5JkTG0uvj+IXXMHIPMMjfwCCxjEDDTx45pEct+iaN3Y+x6GVmh+sI29ZfoWM8RN9PoOfGpXFwgE4ij0MwR89YNIJijazteqm+D2fTrtYaCT+u/sswUfjN06z5NpZF6mJS0cO420s1rKIJbYcNcxz13BCgBAnnfntaeGMQAirZm9LnNu9NbMd9iudakKkYJ6jSz4Q4Ws+UXkInrs63RO2fdkv209RQqNu7u1E53xdh0kNJOFVXM62sihT45JWbxMgn+1MHb6U52vR4/2G6tq73rG0bf0f//hGXwoKAnhWCzda6ctZ14wB9ynCzlZAZ103HVEQ6VcYABgxBF/W4traDQJHx0UvlRFUkMYRqVGbpPBV9fEPNaD5Ke1Auhl7z9gyPIrgJRKBVC0agpEgMuhB3RNP36wvogd4W2xm2FRvdhJ0Od+Ut6WojCNWc7Malpr0s7FcNJJ0Xr55cHKFhfGbK0qgNKkaa8kWhwpEY/mX2xp1fyoXDpUh8ZRcY0QdLqUHdY7qeaqE+0g+aFEemRA1YKuICancWSa+6zPz5BF5JUcAQli5k6f4VG5Ex82infyZnjrVPL2pe1uuEmqrcvdiDxAaHw7xMpeIioqmkdXd+ie7BEXCm8u44ePxx3Bjc65wz9mFPqMjBBqlEcjVffk2ea3/xCBx0VmDjsAhbx2DoOVnsh0kMgt6x8Z4Tk5GwIFftPE/6FgKUkeHsn6CQZtwan2bWJ57aLEKOg9mL/xxkp6n3btOw2bAa7V/gNK8D5BEVIqthFg1ngUDEi7wekIlho+w+Cqvc+nQCQMCEcCJMJDa6N0n6l/hwvl5Q/vPdjcZ26m+sQXt5sPst3Xfw6tkADD/1V/IAxe+/KpYw+vvbG7ipiSgN+N+peoBLrQ9VwwAcku6wK0zMJWWIVtEZS9tExGc29P4JIjo5UAnkqLcVgs97AWnSS2atilRITMnhaqaT+6a2R8WEyaVu39yf75gGeVuM="
vectorize false
rebuild ""
CatsEyeConvolve_Amount {{parent.effectAmount}}
CatsEyeConvolve_Format {{src.width} {src.height}}
CatsEyeConvolve_Interpolate {{parent.interpolate}}
protectKernelWhenPublishing true
rebuild_finalise ""
name BlinkScript1
xpos 276
ypos 515
}
Dot {
name Dot10
label result
note_font_size 30
xpos 310
ypos 787
}
Switch {
inputs 4
which {{parent.show}}
name ShowSwitch
xpos -242
ypos 784
}
Output {
name Output1
xpos -242
ypos 902
}
end_group
push $cut_paste_input
Group {
name GuidedBlur
help "Description:\n\nThe guided filter is an edge-preserving blur,\nuseful to add details to the edges of a roto/matte\nusing a second image as a guide. \n\nHow to use:\n\nConnect the alpha to the 'matte' input\nand the 'guide' image to the 'img' input.\n\nControl the amount of detail using\nthe 'edge detail' slider.\n\n---\n\nThe filter is an implementation of the\n 'Guided Image Filtering', by Kaiming He. \nMore details at http://kaiminghe.com/eccv10/\n"
tile_color 0xcc804eff
note_font "Bitstream Vera Sans Bold"
note_font_color 0xffffffff
selected true
xpos 42736
ypos -2223
addUserKnob {20 GuidedBlur}
addUserKnob {6 replaceRGB l "Replace RGB with img" +STARTLINE}
addUserKnob {41 blur_size l "blur size" T Blur1.size}
addUserKnob {41 tolerance l "edge detail" t "Control the amount of detail that will be preserved. \n\nA value close to 0 makes the filter behave like a regular blur. \n\nValues close to 6 or 7 can introduce artifacts, identifying grain \"as edges\". \n\nRecommended values are between 2.5 and 4." T Constant_eps.multiplier}
addUserKnob {41 filter T Blur1.filter}
addUserKnob {41 quality l "" -STARTLINE T Blur1.quality}
addUserKnob {26 ""}
addUserKnob {41 amount l "sharpen amount" T Sharpen1.amount}
addUserKnob {41 size l "sharpen size" T Sharpen1.size}
addUserKnob {26 ""}
addUserKnob {26 "" l mask T ""}
addUserKnob {41 maskChannelInput l "" -STARTLINE T Merge21.maskChannelInput}
addUserKnob {41 inject -STARTLINE T Merge21.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge21.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge21.fringe}
addUserKnob {41 mix T Merge21.mix}
addUserKnob {20 info l Info}
addUserKnob {26 versionInfo l "" +STARTLINE T "\nCreated by Rafael Silva\nwww.rafael.ai\nrafael@rafael.ai\n\nVersion 1.3\nLast Updated: August 16th, 2020\n\nUpdated by Nikolai Wüstemann 2021\n\nToronto, Canada\n\n---\n\nHelp and more information:\nwww.rafael.ai/guided_blur"}
addUserKnob {26 ""}
}
Input {
inputs 0
name matte
label p
xpos 2050
ypos 95
}
set N6c292e60 [stack 0]
Dot {
name Dot21
note_font_size 41
xpos 1737
ypos 3701
}
set N6c2a5350 [stack 0]
Blur {
size 10
filter box
name Blur1
xpos 289
ypos 3691
}
set C6c2aa800 [stack 0]
Input {
inputs 0
name Inputmask
xpos 644
ypos 3893
number 2
}
Input {
inputs 0
name img
label i
xpos -40
ypos 5
number 1
}
Sharpen {
amount 0
name Sharpen1
xpos -40
ypos 158
}
Clamp {
maximum 1000
name Clamp1
xpos -40
ypos 194
}
Dot {
name Dot16
xpos -6
ypos 330
}
set N6c0e41c0 [stack 0]
Dot {
name Dot4
xpos 544
ypos 498
}
set N6c0e9e80 [stack 0]
Dot {
name Dot6
xpos 654
ypos 498
}
set N6c0ef810 [stack 0]
Dot {
name Dot7
xpos 874
ypos 498
}
set N6c0f5150 [stack 0]
Dot {
name Dot8
xpos 984
ypos 498
}
set N6c0faae0 [stack 0]
Dot {
name Dot15
xpos 2194
ypos 498
}
set N6c100470 [stack 0]
Dot {
name Dot3
xpos 2744
ypos 498
}
NoOp {
name I1
xpos 2710
ypos 1695
}
push $N6c292e60
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle5
xpos 2050
ypos 543
}
set N6c111050 [stack 0]
push $N6c100470
Merge {
inputs 2
operation mult
name Merge5
xpos 2160
ypos 591
}
clone $C6c2aa800 {
xpos 2160
ypos 635
selected false
}
NoOp {
name mean_Ip
xpos 2160
ypos 711
}
push $N6c0e9e80
clone $C6c2aa800 {
xpos 510
ypos 659
selected false
}
NoOp {
name mean_I
xpos 510
ypos 735
}
Dot {
name Dot9
xpos 544
ypos 786
}
set N6c15bbc0 [stack 0]
Dot {
name Dot13
xpos 874
ypos 810
}
set N6c161520 [stack 0]
Dot {
name Dot14
xpos 1424
ypos 834
}
set N6c166eb0 [stack 0]
push $N6c111050
clone $C6c2aa800 {
xpos 2050
ypos 635
selected false
}
NoOp {
name mean_p
xpos 2050
ypos 687
}
set N6c17ba70 [stack 0]
Merge {
inputs 2
operation mult
name Merge8
xpos 1940
ypos 951
}
Merge {
inputs 2
operation minus
name Merge9
xpos 1940
ypos 1023
}
NoOp {
name cov_Ip
xpos 1940
ypos 1095
}
set N6c1a3750 [stack 0]
Constant {
inputs 0
channels rgb
color {{"1/pow(10, multiplier)"}}
name Constant_eps
xpos 400
ypos 1095
addUserKnob {20 User}
addUserKnob {7 multiplier R 1 6}
multiplier 5
}
set N6c1a8f70 [stack 0]
push $N6c0ef810
push $N6c0f5150
Merge2 {
inputs 2
operation multiply
name Merge18
label I*I
xpos 730
ypos 611
}
clone $C6c2aa800 {
xpos 730
ypos 683
selected false
}
set N6bfc5650 [stack 0]
Dot {
name Dot5
xpos 2634
ypos 834
}
NoOp {
name mean_II
xpos 2600
ypos 1023
}
push $N6c166eb0
Dot {
name Dot1
xpos 2524
ypos 882
}
set N6bfdf7b0 [stack 0]
push $N6bfdf7b0
Merge2 {
inputs 2
operation multiply
name Merge4
label "mean I * mean I"
xpos 2490
ypos 1019
}
Merge2 {
inputs 2
operation minus
name Merge2
xpos 2490
ypos 1095
}
NoOp {
name var_I
xpos 2490
ypos 1167
}
Merge {
inputs 2
operation plus
bbox B
name Merge13
xpos 2490
ypos 1287
}
Merge {
inputs 2
operation divide
bbox B
name Merge14
xpos 2490
ypos 1407
}
NoOp {
name a_mono
label a
xpos 2490
ypos 1475
}
set N6c02f100 [stack 0]
clone $C6c2aa800 {
xpos 2600
ypos 1691
selected false
}
Merge {
inputs 2
operation mult
bbox B
name Merge17
xpos 2600
ypos 1815
}
push $N6c17ba70
Dot {
name Dot19
xpos 2084
ypos 1410
}
set N6c054380 [stack 0]
push $N6c166eb0
push $N6c02f100
Merge {
inputs 2
operation mult
bbox B
name Merge15
xpos 2490
ypos 1551
}
Merge {
inputs 2
operation minus
bbox B
name Merge7
xpos 2490
ypos 1671
}
NoOp {
name b_mono
xpos 2490
ypos 1743
}
clone $C6c2aa800 {
xpos 2490
ypos 1811
selected false
}
NoOp {
name mean_b_mono_
xpos 2490
ypos 1887
}
Merge {
inputs 2
operation plus
bbox B
name Merge16
xpos 2490
ypos 1959
}
Dot {
name Dot18
xpos 2524
ypos 2922
}
push $N6c054380
Dot {
name Dot10
xpos 1314
ypos 2346
}
Dot {
name Dot2
xpos 1314
ypos 2562
}
push $N6c1a8f70
push $N6bfc5650
push $N6c15bbc0
Expression {
expr0 r*r
expr1 g*g
expr2 b*b
name Expression3
label "I*I (rr, gg, bb)"
xpos 510
ypos 995
}
Merge {
inputs 2
operation minus
name Merge11
xpos 730
ypos 1119
}
Merge {
inputs 2
operation plus
bbox B
name Merge12
xpos 730
ypos 1215
}
NoOp {
name I___
label "rr, gg, bb"
xpos 730
ypos 1283
}
set N6bee7c00 [stack 0]
push $N6c0faae0
Expression {
expr0 r*g
expr1 r*b
expr2 g*b
name Expression2
label "rg, rb, gb"
xpos 950
ypos 611
}
clone $C6c2aa800 {
xpos 950
ypos 683
selected false
}
push $N6c161520
Expression {
expr0 r*g
expr1 r*b
expr2 g*b
name Expression4
label "rg, rb, gb"
xpos 840
ypos 1019
}
Merge {
inputs 2
operation minus
name Merge10
xpos 950
ypos 1095
}
NoOp {
name I____
label "rg, rb, gb"
xpos 950
ypos 1283
}
set N6bf2c8b0 [stack 0]
MergeExpression {
inputs 2
expr0 Ar*Ab-Bg*Bg
expr1 Bg*Br-Ar*Bb
expr2 Ar*Ag-Br*Br
name MergeExpression2
label "invgg, invgb, invbb"
xpos 730
ypos 1691
}
push $N6bee7c00
push $N6bf2c8b0
MergeExpression {
inputs 2
expr0 Ag*Ab-Bb*Bb
expr1 Bb*Bg-Br*Ab
expr2 Br*Bb-Ag*Bg
name MergeExpression1
label "invrr, invrg, invrb"
xpos 510
ypos 1403
}
set N6bf41580 [stack 0]
push $N6bf2c8b0
MergeExpression {
inputs 2
expr0 Ab*Bg
expr1 0
expr2 0
name MergeExpression5
label invrb*I_rb
xpos 1170
ypos 1475
}
Shuffle {
green red
blue red
alpha red
name Shuffle8
xpos 1170
ypos 1551
}
push 0
push $N6bf41580
push $N6bee7c00
MergeExpression {
inputs 2
expr0 Ar*Br
expr1 0
expr2 0
name MergeExpression3
label invrr*I_rr
xpos 620
ypos 1475
}
Shuffle {
green red
blue red
alpha red
name Shuffle2
xpos 620
ypos 1527
}
push $N6bf41580
push $N6bf2c8b0
MergeExpression {
inputs 2
expr0 Ag*Br
expr1 0
expr2 0
name MergeExpression4
label invrg*I_rg
xpos 950
ypos 1499
}
Shuffle {
green red
blue red
alpha red
name Shuffle3
xpos 950
ypos 1551
}
Merge2 {
inputs 3+1
operation plus
name Merge1
label covDet
xpos 950
ypos 1691
}
set N6bfb1eb0 [stack 0]
MergeExpression {
inputs 2
expr0 Ar/Br
expr1 Ag/Bg
expr2 Ab/Bb
expr3 0
name MergeExpression7
label "invgg, invgb, invbb"
xpos 730
ypos 1883
}
set N6bdc3f10 [stack 0]
push $N6bf41580
push $N6bfb1eb0
MergeExpression {
inputs 2
expr0 Ar/Br
expr1 Ag/Bg
expr2 Ab/Bb
expr3 0
name MergeExpression6
label "invrr, invrg, invrb"
xpos 510
ypos 1883
}
set N6bdd35a0 [stack 0]
ShuffleCopy {
inputs 2
red blue2
green green
blue blue
alpha black
name ShuffleCopy1
label "invrb, invgb, invbb"
xpos 840
ypos 2099
}
push $N6c1a3750
NoOp {
name cov_Ip1
xpos 950
ypos 1887
}
Dot {
name Dot17
xpos 984
ypos 1986
}
set N6bdf8f30 [stack 0]
MergeExpression {
inputs 2
expr0 Ar*Bb
expr1 Ag*Bb
expr2 Ab*Bb
name MergeExpression10
xpos 840
ypos 2175
}
push 0
push $N6bdd35a0
push $N6bdf8f30
MergeExpression {
inputs 2
expr0 Ar*Br
expr1 Ag*Br
expr2 Ab*Br
name MergeExpression8
xpos 620
ypos 2175
}
push $N6bdc3f10
push $N6bdd35a0
ShuffleCopy {
inputs 2
red green2
green red
blue green
alpha black
name ShuffleCopy2
label "invrg, invgg, invgb"
xpos 730
ypos 2099
}
push $N6bdf8f30
MergeExpression {
inputs 2
expr0 Ar*Bg
expr1 Ag*Bg
expr2 Ab*Bg
name MergeExpression9
xpos 730
ypos 2175
}
Merge2 {
inputs 3+1
operation plus
name A
label "a_r, a_g, a_b\n-"
xpos 730
ypos 2262
}
set N6be3ddd0 [stack 0]
push $N6c166eb0
NoOp {
name NoOp2
label mean_I
xpos 1390
ypos 2411
}
Merge2 {
inputs 2
operation multiply
name Merge22
xpos 1390
ypos 2487
}
set N6be55580 [stack 0]
Shuffle {
green red
blue red
alpha red
name a_r_mult_mean_I_r
xpos 1390
ypos 2559
}
Merge2 {
inputs 2
operation minus
name Merge6
xpos 1390
ypos 2679
}
push $N6be55580
Shuffle {
red green
blue green
alpha green
name a_g_mult_mean_I_g
xpos 1500
ypos 2559
}
Merge2 {
inputs 2
operation minus
name Merge19
xpos 1500
ypos 2727
}
push $N6be55580
Shuffle {
red blue
green blue
alpha blue
name a_b_mult_mean_I_b
xpos 1610
ypos 2559
}
Merge2 {
inputs 2
operation minus
name Merge20
xpos 1610
ypos 2775
}
NoOp {
name NoOp4
label B
xpos 1610
ypos 2819
}
clone $C6c2aa800 {
xpos 1610
ypos 2915
selected false
}
NoOp {
name NoOp5
label boxfilter(b)
xpos 1610
ypos 2987
}
push $N6be3ddd0
clone $C6c2aa800 {
xpos 730
ypos 2363
selected false
}
push $N6c0e41c0
Merge2 {
inputs 2
operation multiply
name Merge3
xpos -40
ypos 2799
}
NoOp {
name NoOp6
label "boxfilter(a_\[rgb])"
xpos -40
ypos 3227
}
set N6bd0aca0 [stack 0]
Shuffle {
red blue
green blue
alpha blue
name ab2
xpos 180
ypos 3327
}
push 0
push $N6bd0aca0
Shuffle {
green red
blue red
alpha red
name ar2
label "boxfiler(a_r,r) * I_r"
xpos -40
ypos 3323
}
push $N6bd0aca0
Shuffle {
red green
blue green
alpha green
name ag2
xpos 70
ypos 3327
}
Merge2 {
inputs 4+1
operation plus
name Merge25
xpos -40
ypos 3448
}
Dot {
name Dot11
xpos -6
ypos 3546
}
Switch {
inputs 2
name Switch1
xpos -40
ypos 3616
}
set N6bd5cb60 [stack 0]
push $N6c0e41c0
Dot {
name Dot12
xpos -172
ypos 450
}
Dot {
name Dot20
xpos -189
ypos 3610
}
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos -124
ypos 3685
}
push $N6bd5cb60
Switch {
inputs 2
which {{replaceRGB}}
name Switch2
label "\[value which]"
xpos -40
ypos 3757
}
push $N6c2a5350
Merge2 {
inputs 2+1
operation copy
name Merge21
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
selected true
xpos -40
ypos 3847
addUserKnob {20 TRX}
addUserKnob {22 swap l "swap to Merge All Node" -STARTLINE T "\nntn = nuke.thisNode()\nall = nuke.allNodes()\na = ntn.input(1)\nx = int(ntn\['xpos'].value())\nb = ntn.input(0)\ny = int(ntn\['ypos'].value())\nwith nuke.Root():\n    ma = nuke.nodes.NST_MergeAll()\n    ma.setXYpos(x,y)\n    # copy all values\n    ak = ntn.knobs()\n    for knoB in ma.knobs():\n      try:\n        if knoB not in \[\"name\",\"tile_color\", \"also_merge\"]:\n          ma\[knoB].setValue(ntn\[knoB].value())\n          with ma:\n            newMerge = nuke.toNode(\"MergeAllChannels\")\n            if ntn\[\"mix\"].isAnimated():\n                newMerge\[\"mix\"].copyAnimations(ntn\[\"mix\"].animations())\n            else:\n                newMerge\['mix'].setValue(ntn\['mix'].value())\n            newMerge.knob('also_merge').setValue('all')\n\n      except:\n        pass\n  \n    # try to reconnect\n    try:\n        ma.setInput(0,b);ma.setInput(1,a)\n        for one in all:\n            for i in range(one.inputs()):\n                if one.input(i) == ntn:\n                    one.setInput(i,ma)\n    except:\n        pass\n    nuke.delete(ntn)\n"}
}
CopyBBox {
inputs 2
name CopyBBox1
xpos -40
ypos 3929
disable {{replaceRGB}}
}
Output {
name Output1
xpos -40
ypos 4032
}
end_group
push $cut_paste_input
Group {
name iConvolve
help "iConvolve v0.1 - apEssentials by Adrian Pueyo\n\nQuick tool to convolve an image though a kernel, based on a ctrlMask channel. The ctrlMask must go from 0 to 1..\n\nmin size and max size define the maximum and minimum size in pixels that the kernel will have. Multiplier is an easy way to resize both together.\n\nadrianpueyo.com, 2019"
onCreate "n = nuke.thisNode()\nn\['black'].setFlag(0x00000004)\nn\['white'].setFlag(0x00000004)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() == \"auto_steps\":\n    n\[\"steps\"].setEnabled(not k.value())"
tile_color 0xe88543ff
selected true
xpos 42730
ypos -2286
addUserKnob {20 iConvolve}
addUserKnob {41 channels T ZDefocus.channels}
addUserKnob {26 "" l "Local GPU:" T ""}
addUserKnob {26 "" -STARTLINE T "GeForce GTX 580"}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T ZDefocus.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {41 ctrlMask_channel l ctrlMask T ChannelMerge1.A}
addUserKnob {3 steps +DISABLED}
steps 10
addUserKnob {6 auto_steps l auto -STARTLINE}
auto_steps true
addUserKnob {7 black l "min size (black)" R 0 100}
black 43.5
addUserKnob {7 white l "max size (white)" R 0 100}
white 20
addUserKnob {41 multiplier T ZDefocus.size}
addUserKnob {26 ""}
addUserKnob {41 filter_channel l "filter channel" T ZDefocus.filter_channel}
addUserKnob {41 use_input_channels l "use input channels" -STARTLINE T ZDefocus.use_input_channels}
addUserKnob {41 image_filter l "image filter" T ZDefocus.image_filter}
addUserKnob {41 clamp_image_filter l "clamp image filter" -STARTLINE T ZDefocus.clamp_image_filter}
addUserKnob {26 version_author l " " t "iConvolve v0.1\n2019" T "<span style=\"color:#666\"><br/><b>iConvolve v0.1</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2019</span>"}
}
Input {
inputs 0
name Inputfilter
xpos -152
ypos 64
number 1
}
Input {
inputs 0
name InputctrlMask
xpos -152
ypos -141
number 2
}
set N6c20ca40 [stack 0]
push $N6c20ca40
ChannelMerge {
inputs 2
B none
output rgba.red
bbox A
name ChannelMerge1
xpos -152
ypos -115
}
add_layer {iConvolve iConvolve.red iConvolve.green iConvolve.blue iConvolve.alpha}
Shuffle {
green red
blue red
alpha red
out iConvolve
name ShuffleI
xpos -152
ypos -65
}
Clamp {
channels iConvolve
name ClampI
xpos -152
ypos -39
}
Grade {
channels iConvolve
black {{parent.black}}
white {{parent.white}}
name GradeI
xpos -152
ypos -1
}
Input {
inputs 0
name Inputimage
xpos 0
ypos -58
}
Copy {
inputs 2
from0 iConvolve.red
to0 iConvolve.red
bbox B
name CopyI
xpos 0
ypos -1
}
ZDefocus2 {
inputs 2
channels rgba
z_channel iConvolve.red
math direct
focal_point {350 260}
size 1
max_size {{parent.white*size.w} {parent.white*size.h}}
filter_type {{"\[exists parent.input1] ? 2 : 0"}}
legacy_resize_mode false
show_legacy_resize_mode false
name ZDefocus
onCreate "n = nuke.thisNode()\nn.knob('focal_point').setFlag(0x00008000)\n"
selected true
xpos 0
ypos 60
}
Remove {
channels iConvolve
name RemoveI
xpos 0
ypos 98
}
Output {
name Output1
xpos 0
ypos 161
}
end_group
push $cut_paste_input
Group {
name Diffusion
onCreate "n = nuke.thisNode()\nn.knob('size').setRange(0, 300)"
tile_color 0xcc804eff
note_font "Bitstream Vera Sans Bold"
note_font_color 0xffffffff
selected true
xpos 42725
ypos -2347
addUserKnob {20 Diffusion}
addUserKnob {41 channels T Merge1.also_merge}
addUserKnob {26 ""}
addUserKnob {41 size T Blur33.size}
addUserKnob {7 amount R 0 4}
amount 1
addUserKnob {26 text l " " T " "}
addUserKnob {7 min}
min 1
addUserKnob {7 max}
max 1
addUserKnob {26 ""}
addUserKnob {26 "" l mask T ""}
addUserKnob {41 maskChannelInput l "" -STARTLINE T Merge1.maskChannelInput}
addUserKnob {41 inject -STARTLINE T Merge1.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge1.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge1.fringe}
addUserKnob {41 mix T Merge1.mix}
}
Input {
inputs 0
name Inputmask
xpos -297
ypos 634
number 1
}
Input {
inputs 0
name Input
xpos -458
ypos 115
}
Dot {
name Dot43
xpos -424
ypos 250
}
set N6c3555a0 [stack 0]
Dot {
name Dot6
note_font_size 41
xpos -424
ypos 334
}
set N6c35af40 [stack 0]
Dot {
name Dot3
note_font_size 41
xpos -275
ypos 334
}
set N6c3608d0 [stack 0]
Dot {
name Dot77
xpos -165
ypos 334
}
set N6c366270 [stack 0]
Dot {
name Dot78
xpos -28
ypos 334
}
Blur {
size 100
name Blur33
label "\[value size]"
xpos -62
ypos 366
}
push $N6c366270
Merge2 {
inputs 2
operation minus
Achannels none
Bchannels none
output none
also_merge all
name Merge36
selected true
xpos -199
ypos 371
}
Dot {
name Dot79
xpos -165
ypos 446
}
push $N6c3608d0
Merge2 {
inputs 2
operation plus
Achannels none
Bchannels none
output none
also_merge all
mix {{parent.amount/13}}
name Merge37
xpos -309
ypos 439
}
Dot {
name Dot4
note_font_size 41
xpos -275
ypos 512
}
set N6c3a91c0 [stack 0]
Dot {
name Dot5
note_font_size 41
xpos -275
ypos 572
}
push $N6c3a91c0
push $N6c35af40
Merge2 {
inputs 2
operation min
Achannels none
Bchannels none
output none
also_merge all
mix {{parent.min}}
name Merge2
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -458
ypos 505
}
Merge2 {
inputs 2
operation max
Achannels none
Bchannels none
output none
also_merge all
mix {{parent.max}}
name Merge3
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -458
ypos 565
}
push $N6c3555a0
Dot {
name Dot1
note_font_size 41
xpos -624
ypos 250
}
Dot {
name Dot2
note_font_size 41
xpos -624
ypos 638
}
Merge2 {
inputs 2+1
operation copy
output none
also_merge rgb
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -458
ypos 631
}
Output {
name Output1
xpos -458
ypos 721
}
end_group
push $cut_paste_input
Group {
name HighPass1
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == 'output1':\n    if n.knob('output1').getValue() == 0:\n        n.knob('HighPassAmount').setVisible(False)\n        n.knob('HighContrastAmount').setVisible(True)\n    else:\n        n.knob('HighPassAmount').setVisible(True)\n        n.knob('HighContrastAmount').setVisible(False)"
tile_color 0xcc804eff
note_font "Verdana Bold"
note_font_color 0xffffffff
selected true
xpos 42724
ypos -2418
mapsize {0.15 0.15}
addUserKnob {20 HighPass}
addUserKnob {41 channels T MergeKeymix.also_merge}
addUserKnob {4 output1 l Operation t "High Contrast, Makes details pop out while still maintaining some color\n\nHigh Pass, Makes details pop out more but becomes more grayscale" M {"High Contrast" "High Pass" "" "" "" "" "" "" ""}}
addUserKnob {41 blurSize l "Blur Size" t "controls the blur amount of the input before the difference operation is calculated" T Blur6.size}
addUserKnob {7 HighContrastAmount l Amount t "controls a multiply on the input before the difference is calculated\n\n(only works when operation is set to high contrast)" R 0.6 1}
HighContrastAmount 0.8
addUserKnob {7 HighPassAmount l Amount t "controls an offset (add) on the input before the difference is calculated\n\n(only works when operation is set to high pass)" +HIDDEN R -0.3 0}
HighPassAmount -0.01
addUserKnob {7 postMult l "Post Mult" R 0 4}
postMult 1
addUserKnob {26 ""}
addUserKnob {41 maskChannelMask l mask -STARTLINE T MergeKeymix.maskChannelMask}
addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
addUserKnob {41 mix T MergeKeymix.mix}
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: t "blurs image and minuses with original, producing a sharpened highpass image\n\nGood for use as a sharpen tool\nvery useful as an aid to trackers and as a viewer input to check for errors" T HighPass}
addUserKnob {26 ver l Version: T v05}
}
Input {
inputs 0
name Inputmask
xpos 99
ypos 428
number 1
}
Dot {
name Dot4
label Mask
note_font_size 41
xpos 133
ypos 481
}
Dot {
name Dot6
note_font_size 41
xpos 133
ypos 581
}
Input {
inputs 0
name Inputimg
xpos -273
ypos -335
}
AddChannels {
channels rgba
name AddChannels1
xpos -273
ypos -264
}
Dot {
name Dot8
note_font_size 41
xpos -239
ypos -114
}
set N6c49f090 [stack 0]
Dot {
name Dot3
note_font_size 41
xpos -239
ypos 43
}
set N6c4a4920 [stack 0]
Dot {
name Dot1
note_font_size 41
xpos -367
ypos 43
}
Blur {
size 8
name Blur6
xpos -401
ypos 84
}
set N6c4afc50 [stack 0]
Grade {
channels all
add {{parent.HighPassAmount}}
black_clamp false
name Grade11
xpos -504
ypos 139
}
push $N6c4afc50
Grade {
channels all
multiply {{parent.HighContrastAmount}}
black_clamp false
name Grade1
xpos -401
ypos 138
}
Switch {
inputs 2
which {{"parent.output1==1 ? 1 : 0"}}
name Switch1
xpos -401
ypos 192
}
Dot {
name Dot5
xpos -367
ypos 244
}
push $N6c4a4920
Merge2 {
inputs 2
operation from
Achannels none
Bchannels none
output none
also_merge all
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos -273
ypos 237
}
Multiply {
value {{parent.postMult*4}}
name Multiply1
label "\[value value]"
xpos -273
ypos 300
}
Dot {
name Dot17
label A
note_font_size 41
xpos -239
ypos 493
}
push $N6c49f090
Dot {
name Dot9
note_font_size 41
xpos -580
ypos -114
}
Dot {
name Dot18
label B
note_font_size 41
xpos -580
ypos 490
}
Dot {
name Dot7
note_font_size 41
xpos -580
ypos 581
}
Merge2 {
inputs 2+1
operation copy
bbox B
Achannels none
Bchannels none
output none
also_merge rgb
name MergeKeymix
xpos -273
ypos 574
}
Output {
name Output1
xpos -273
ypos 650
}
end_group
push $cut_paste_input
Group {
name Halation
tile_color 0xcc804eff
note_font "Verdana Bold"
note_font_color 0xffffffff
selected true
xpos 42723
ypos -2486
addUserKnob {20 Halation}
addUserKnob {4 outputView l "Output View" M {"Final Output" "Luma Key" "Effect Only"}}
addUserKnob {26 key l Key:}
addUserKnob {7 black l blackpoint R 0 10}
black 2
addUserKnob {7 white l whitepoint R 0 10}
white 6
addUserKnob {41 size_1 l size T Glow1.size}
addUserKnob {26 ""}
addUserKnob {7 red R 0 4}
red 1
addUserKnob {7 green R 0 4}
green 0.25
addUserKnob {7 blue R 0 4}
blue 0.08
addUserKnob {7 globalAmount l "Global Amount" R 0 4}
globalAmount 1
addUserKnob {26 ""}
addUserKnob {26 "" l mask T ""}
addUserKnob {41 maskChannelInput l "" -STARTLINE T Merge1.maskChannelInput}
addUserKnob {41 inject -STARTLINE T Merge1.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge1.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge1.fringe}
addUserKnob {7 mix}
mix 1
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: T Halation}
addUserKnob {26 ver l Version: T v01}
}
Input {
inputs 0
name Input
xpos -852
ypos 177
}
Dot {
name Dot45
note_font_size 41
xpos -818
ypos 236
}
set N6c4c4e20 [stack 0]
Saturation {
saturation 0
name Saturation1
xpos -661
ypos 233
}
Grade {
blackpoint {{parent.black}}
whitepoint {{parent.white}}
white_clamp true
name Grade2
xpos -661
ypos 257
}
Shuffle {
green red
blue red
alpha red
name Shuffle1
label "\[value in]"
xpos -661
ypos 291
}
Dot {
name Dot48
note_font_size 41
xpos -627
ypos 352
}
set N6c4fa850 [stack 0]
push $N6c4fa850
Dot {
name Dot49
note_font_size 41
xpos -420
ypos 352
}
set N6c500110 [stack 0]
Dot {
name Dot51
note_font_size 41
xpos -310
ypos 352
}
set N6c505a10 [stack 0]
Dot {
name Dot52
note_font_size 41
xpos -200
ypos 352
}
set N6c50b3a0 [stack 0]
Glow2 {
effect_only true
size {{parent.Glow1.size.w*4} {parent.Glow1.size.h*4}}
name Glow3
xpos -234
ypos 403
}
Dot {
name Dot54
note_font_size 41
xpos -200
ypos 496
}
push $N6c505a10
Glow2 {
effect_only true
size {{parent.Glow1.size.w*2} {parent.Glow1.size.h*2}}
name Glow2
xpos -344
ypos 404
}
Dot {
name Dot53
note_font_size 41
xpos -310
ypos 453
}
push $N6c500110
Glow2 {
effect_only true
size 1.2
name Glow1
xpos -454
ypos 401
}
Merge2 {
inputs 2
operation screen
name Merge8
xpos -454
ypos 449
}
Merge2 {
inputs 2
operation screen
name Merge13
xpos -454
ypos 492
}
Merge2 {
inputs 2
operation from
name Merge9
xpos -661
ypos 492
}
Clamp {
channels rgba
maximum_enable false
name Clamp4
xpos -661
ypos 529
}
Shuffle {
green red
blue red
alpha red
name Shuffle3
label "\[value in]"
xpos -661
ypos 555
}
Dot {
name Dot50
note_font_size 41
xpos -627
ypos 628
}
set N6c5a8af0 [stack 0]
Dot {
name Dot55
note_font_size 41
xpos -517
ypos 628
}
Blur {
channels rgba
size {{parent.Glow1.size.w} {parent.Glow1.size.h}}
name Blur11
label "\[value size]"
xpos -551
ypos 681
}
push $N6c5a8af0
Merge2 {
inputs 2
operation max
name Merge7
xpos -661
ypos 687
}
Grade {
multiply {{parent.red} {parent.green} {parent.blue} 1}
gamma {1 1 1 1}
name Grade17
xpos -661
ypos 754
}
Multiply {
channels rgba
value {{parent.globalAmount}}
name Multiply2
label "\[value value]"
xpos -661
ypos 795
}
Shuffle {
alpha black
name Shuffle2
label "\[value in]"
xpos -661
ypos 867
}
Dot {
name Dot57
note_font_size 41
xpos -627
ypos 961
}
set N6c405d20 [stack 0]
Multiply {
value {{parent.Merge1.mix}}
name Multiply1
label "\[value value]"
xpos -661
ypos 1136
}
push $N6c50b3a0
Dot {
name Dot2
note_font_size 41
xpos 48
ypos 352
}
Dot {
name Dot1
note_font_size 41
xpos 48
ypos 1284
}
Input {
inputs 0
name Inputmask
xpos -380
ypos 686
number 1
}
Dot {
name Dot60
xpos -346
ypos 1042
}
push $N6c405d20
push $N6c4c4e20
Dot {
name Dot56
note_font_size 41
xpos -818
ypos 617
}
Merge2 {
inputs 2
operation plus
bbox B
name Merge14
xpos -852
ypos 957
}
push $N6c4c4e20
Dot {
name Dot58
note_font_size 41
xpos -969
ypos 236
}
Dot {
name Dot59
note_font_size 41
xpos -962
ypos 1042
}
Merge2 {
inputs 2+1
operation copy
mix {{parent.mix}}
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
selected true
xpos -852
ypos 1039
}
Switch {
inputs 3
which {{parent.outputView}}
name OutputView
label "\[value which]"
xpos -852
ypos 1277
}
Output {
name Output1
xpos -852
ypos 1437
}
end_group
push $cut_paste_input
Group {
name BlacksExpon
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"steps\":    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        with n:\n            ebs1 = nuke.toNode(\"ExponBlurSimple\")\n            ebs2 = nuke.toNode(\"ExponBlurSimple1\")\n            ebs1.knob('steps').setValue(s)\n            ebs2.knob('steps').setValue(s)\n            \n            both = \[ebs1, ebs2]\n            for ebs in both:\n                with ebs:   \n                    start = nuke.toNode(\"Start\")\n                    end   = nuke.toNode(\"End\")\n                    b1    = nuke.toNode(\"Blur1\")\n                    merge = nuke.toNode(\"Merge1\")\n                    AvgMult = nuke.toNode(\"AverageMult\")\n                    \n                    b1x   = b1.xpos()\n                    b1y   = b1.ypos()\n                    b1n   = b1.name()\n                    \n                    steps = int(n.knob('steps').getValue())\n                    size  = ebs1.knob('size').getValue()\n                    mult  = ebs1.knob('mult').getValue()\n                    \n                    #b1.setInput(0, start)\n                    for i in range(1,merge.inputs()):\n                        merge.setInput(i,None)\n                    merge.setInput(0, b1)\n                    \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n                    for i in range(1,steps):\n                        # Blur\n                        b = nuke.nodes.Blur()\n                        b.setXYpos(b1x+i*100,b1y)\n                        b.setInput(0,start)\n                        b\[\"channels\"].setValue(\"rgba\")\n                        b\[\"crop\"].setValue(0)\n                        b\[\"size\"].setValue(0, 1)\n                        b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n                        b\[\"label\"].setValue(\"\[value size]\")\n                        merge.setInput(i if i<2 else i+1, b)\n                        AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n\n            \n\n"
tile_color 0x262626ff
note_font "Verdana Bold"
note_font_color 0xccccccff
selected true
xpos 42717
ypos -2550
addUserKnob {20 BlacksExpon}
addUserKnob {41 maskChannelInput l "area mask" T Merge1.maskChannelInput}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge1.invert_mask}
addUserKnob {41 operation2 l operation T Keyer1.operation}
addUserKnob {6 previewKey l "Preview Key" -STARTLINE}
addUserKnob {6 invertKey l "invert key" -STARTLINE}
invertKey true
addUserKnob {7 blackpoint}
blackpoint 0.1
addUserKnob {7 whitepoint}
whitepoint 0.2
addUserKnob {26 ""}
addUserKnob {41 steps l "  Steps Min" T ExponBlurSimple.steps}
addUserKnob {41 steps_1 l "  Steps Over" -STARTLINE T ExponBlurSimple1.steps}
addUserKnob {7 size l Size R 0 20}
size 3
addUserKnob {7 mult l Multiply R 1 8}
mult 2
addUserKnob {14 postBlur R 0 100}
addUserKnob {26 ""}
addUserKnob {26 "" l mask T ""}
addUserKnob {41 maskChannelInput_1 l "" -STARTLINE T Merge2.maskChannelInput}
addUserKnob {41 inject -STARTLINE T Merge2.inject}
addUserKnob {41 invert_mask_1 l invert -STARTLINE T Merge2.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge2.fringe}
addUserKnob {41 mix T Merge2.mix}
addUserKnob {41 bbox l "set bbox to " T Merge2.bbox}
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: T BlacksExpon}
addUserKnob {26 ver l Version: T v02}
}
Input {
inputs 0
name Inputmask
xpos 198
ypos 1042
number 2
}
Input {
inputs 0
name Inputarea
xpos 371
ypos 371
number 1
}
Input {
inputs 0
name Inputimg
xpos 52
ypos 109
}
Dot {
name Dot1
note_font_size 41
xpos 86
ypos 202
}
set N6dbf65e0 [stack 0]
Keyer {
operation "luminance key"
name Keyer1
xpos 177
ypos 192
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle1
tile_color 0xffffffff
xpos 177
ypos 230
}
Grade {
channels rgba
blackpoint {{parent.blackpoint}}
whitepoint {{parent.whitepoint}}
white_clamp true
name Grade1
xpos 177
ypos 272
}
Invert {
channels rgba
name Invert1
xpos 177
ypos 298
disable {{!parent.invertKey}}
}
Constant {
inputs 0
color 1
name Constant1
xpos 299
ypos 303
postage_stamp false
}
Merge2 {
inputs 2+1
operation copy
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 177
ypos 371
}
Dot {
name Dot2
note_font_size 41
xpos 211
ypos 450
}
set N6dc52840 [stack 0]
Dot {
name Dot3
note_font_size 41
xpos 211
ypos 984
}
push $N6dc52840
push $N6dbf65e0
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos 52
ypos 440
}
Premult {
name Premult1
xpos 52
ypos 478
}
Unpremult {
name Unpremult1
xpos 52
ypos 504
}
Group {
name BinaryAlpha
tile_color 0x2a2a2aff
label "(\[value an] --> \[value output1])"
note_font Verdana
note_font_color 0xfffff9ff
xpos 52
ypos 580
addUserKnob {20 BinaryAlpha}
addUserKnob {4 an l Analyze: M {rgb rgba alpha "" "" ""}}
addUserKnob {4 output1 l Output: M {rgba alpha "" "" "" ""}}
output1 alpha
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: t "Analyzes channel input and creates a binary result 0 or 1 and outputs it into output channel" T BinaryAlpha}
addUserKnob {26 ver l Version: T v03}
}
Input {
inputs 0
name Input
xpos -398
ypos 275
}
Expression {
temp_name0 rgb_an
temp_expr0 "r !=0 || g!=0 || b!=0?1:0"
temp_name1 rgba_an
temp_expr1 "r!=0 || g!=0 || b!=0 || a!=0?1:0"
temp_name2 alpha_an
temp_expr2 a!=0?1:0
expr3 "parent.an == 0 ? rgb_an : parent.an == 1 ? rgba_an : alpha_an"
name Expression
xpos -398
ypos 341
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle
label "\[value in]"
xpos -398
ypos 367
disable {{parent.output1}}
}
Output {
name Output1
xpos -398
ypos 456
}
end_group
Group {
name ExponBlurSimple
onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
tile_color 0xcc804eff
label "(\[value output2])"
note_font "Verdana Bold"
note_font_color 0xffffffff
xpos 52
ypos 645
addUserKnob {20 ExponBlurSimple}
addUserKnob {41 channels T Shuffle1.in}
addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
addUserKnob {26 ""}
addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
output2 Min
addUserKnob {3 steps l "  Steps" -STARTLINE}
steps 8
addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
addUserKnob {26 text l " " -STARTLINE T " "}
addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
includeOriginal true
addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
addUserKnob {14 size l Size R -100 100}
size {{parent.ExponBlurSimple1.size} {parent.ExponBlurSimple1.size}}
addUserKnob {7 mult l Multiplier R 1 8}
mult {{parent.mult}}
addUserKnob {14 postBlur l "Post Blur" R 0 100}
postBlur {0 0}
addUserKnob {26 text_1 l " " -STARTLINE T " "}
addUserKnob {26 ""}
addUserKnob {20 bboxControl l "BBox Control" n 1}
bboxControl 0
addUserKnob {26 text_2 l " " T " "}
addUserKnob {4 bbox l "BBox: " -STARTLINE M {union intersectionMask A B "input format" "" "" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
safeBBox true
addUserKnob {26 safeBBoxText l "" +STARTLINE T " "}
addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer  " -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
safetyBBoxMethod percent
addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
safeBBoxPercent 1.1
addUserKnob {26 text_3 l "" +STARTLINE T " "}
addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
addUserKnob {26 ""}
addUserKnob {20 endGroup n -1}
addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
addUserKnob {41 mix T MergeKeymix.mix}
addUserKnob {14 safeBBoxPixels l "" +STARTLINE +HIDDEN R 0 400}
safeBBoxPixels 100
addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
adjustBBoxPercent 1
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "Tony Lyons"}
addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
addUserKnob {26 ver l Version: T v02}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x535e5a00
label "BBox Management"
note_font_size 30
note_font_color 0xffffffff
xpos -529
ypos 492
bdwidth 341
bdheight 525
}
Input {
inputs 0
name Inputimg
xpos 0
ypos -969
}
Dot {
name Dot16
note_font_size 41
xpos 34
ypos -802
}
set N6dad9960 [stack 0]
Dot {
name Dot2
note_font_size 41
xpos -367
ypos -802
}
Dot {
name Dot18
label B
note_font_size 41
xpos -367
ypos 434
}
Dot {
name Dot11
note_font_size 41
xpos -367
ypos 623
}
set N6daea460 [stack 0]
Dot {
name Dot3
note_font_size 41
xpos -367
ypos 675
}
set N6daefd90 [stack 0]
Dot {
name Dot8
note_font_size 41
xpos -463
ypos 675
}
Dot {
name Dot15
note_font_size 41
xpos -463
ypos 831
}
push $N6dad9960
Dot {
name Dot1
note_font_size 41
xpos 461
ypos -802
}
Shuffle {
name Shuffle1
label "\[value in]"
xpos 427
ypos -756
}
Remove {
operation keep
channels rgba
name Remove1
xpos 427
ypos -718
}
Dot {
name Dot21
note_font_size 41
xpos 461
ypos -597
}
set N6db20b90 [stack 0]
Invert {
channels rgba
name Invert1
xpos 695
ypos -601
disable {{"parent.size < 0 ? 0 : 1"}}
}
set N6db263a0 [stack 0]
Dot {
name Dot4
note_font_size 41
xpos 540
ypos -543
}
NoOp {
name Original
xpos 506
ypos -327
}
set N6db38990 [stack 0]
Dot {
name Dot5
note_font_size 41
xpos 540
ypos 14
}
Crop {
inputs 0
box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
reformat true
crop false
name Crop1
xpos 210
ypos -750
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
AddChannels {
channels rgba
name AddChannels2
xpos 210
ypos -724
}
push $N6dad9960
Merge2 {
inputs 2
name Merge3
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 83
ypos -671
}
NoOp {
name BBoxInput
xpos 83
ypos -628
addUserKnob {20 User}
addUserKnob {15 bbox}
bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
}
push $N6db38990
Input {
inputs 0
name Inputarea
xpos 289
ypos -638
number 2
}
AddChannels {
channels alpha
color 1
name AddChannels1
xpos 289
ypos -580
}
Invert {
channels rgba
name Invert3
xpos 289
ypos -503
}
push $N6db263a0
Multiply {
inputs 1+1
channels rgba
value 0
name Multiply1
label "\[value value]"
xpos 695
ypos -509
}
NoOp {
name Start
xpos 695
ypos -450
}
set N6dba5530 [stack 0]
Blur {
channels rgba
size {{(Blur1.size)*(mult)**7} {(Blur1.size)*(mult)**7}}
crop false
name Blur8
label "\[value size]"
xpos 1395
ypos -370
}
push $N6dba5530
Blur {
channels rgba
size {{(Blur1.size)*(mult)**6} {(Blur1.size)*(mult)**6}}
crop false
name Blur7
label "\[value size]"
xpos 1295
ypos -370
}
push $N6dba5530
Blur {
channels rgba
size {{(Blur1.size)*(mult)**5} {(Blur1.size)*(mult)**5}}
crop false
name Blur6
label "\[value size]"
xpos 1195
ypos -370
}
push $N6dba5530
Blur {
channels rgba
size {{(Blur1.size)*(mult)**4} {(Blur1.size)*(mult)**4}}
crop false
name Blur5
label "\[value size]"
xpos 1095
ypos -370
}
push $N6dba5530
Blur {
channels rgba
size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
crop false
name Blur4
label "\[value size]"
xpos 995
ypos -370
}
push $N6dba5530
Blur {
channels rgba
size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
crop false
name Blur3
label "\[value size]"
xpos 895
ypos -370
}
push 0
push $N6dba5530
Blur {
channels rgba
size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
crop false
name Blur2
label "\[value size]"
xpos 795
ypos -370
}
push $N6dba5530
Blur {
channels rgba
size {{parent.size.w} {parent.size.h}}
name Blur1
label "\[value size]"
xpos 695
ypos -370
}
Merge2 {
inputs 9+1
operation {{parent.mergeNumber}}
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 695
ypos -256
}
NoOp {
name End
xpos 695
ypos -230
}
set N6da36a40 [stack 0]
CopyBBox {
inputs 2
name CopyBBox1
xpos 585
ypos -175
}
Group {
name BBoxToFormat
onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
tile_color 0xa57aaaff
note_font "Verdana Bold"
note_font_color 0xffffffff
xpos 585
ypos -151
addUserKnob {20 CropBBox}
addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
addUserKnob {41 intersect T Crop6.intersect}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
overscanType {{parent.safetyBBoxMethod}}
addUserKnob {14 overscan l Overscan R 0 400}
overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
addUserKnob {20 inputBbox l "BBox Data" n 1}
addUserKnob {15 inputFormat l "Input Format"}
inputFormat {0 0 {input.width} {input.height}}
addUserKnob {15 inputBBox l "Input BBox"}
inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
addUserKnob {15 outputBBox l "Output BBox"}
outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
addUserKnob {20 endGroup n -1}
addUserKnob {20 info_1 l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
addUserKnob {26 ver l Version: T v02}
}
Input {
inputs 0
name Input
xpos 261
ypos 394
}
Dot {
name Dot2
note_font_size 41
xpos 295
ypos 462
}
set N6da5b560 [stack 0]
Dot {
name Dot1
note_font_size 41
xpos -160
ypos 462
}
set N6da60b50 [stack 0]
push $N6da5b560
Crop {
box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
crop {{parent.blackOutside}}
name Crop6
xpos 261
ypos 510
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
set N6da66540 [stack 0]
Remove {
operation keep
channels none
name Remove1
xpos 120
ypos 504
}
set N6da72ae0 [stack 0]
Transform {
scale {{parent.overscanPercent} {parent.overscanPercent}}
center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
shutteroffset centred
name Transform1
selected true
xpos 120
ypos 553
}
push $N6da72ae0
AdjBBox {
numpixels {{parent.overscan} {parent.overscan}}
name AdjBBox1
xpos -5
ypos 510
}
Switch {
inputs 2
which {{overscanType}}
name Switch2
label "\[value which]"
xpos -5
ypos 549
}
Merge2 {
inputs 2
bbox intersection
Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
name Merge1
xpos -5
ypos 647
disable {{!parent.Crop6.intersect}}
}
push $N6da60b50
CopyBBox {
inputs 2
name CopyBBox1
xpos -194
ypos 653
}
BlackOutside {
name BlackOutside1
xpos -194
ypos 692
disable {{!parent.blackOutside}}
}
Dot {
name Dot4
note_font_size 41
xpos -160
ypos 769
}
push $N6da66540
Switch {
inputs 2
which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
name Switch1
label "\[value which]"
xpos 261
ypos 759
}
set N6d8c6e00 [stack 0]
Output {
name Output1
xpos 261
ypos 921
}
push $N6d8c6e00
NoOp {
name OutputBBox1
xpos 378
ypos 821
addUserKnob {20 User}
addUserKnob {15 OutputBBox l "Output BBox"}
OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
}
end_group
push $N6da36a40
Merge2 {
inputs 2
bbox intersection
name Merge4
xpos 585
ypos -127
}
push $N6da36a40
CopyBBox {
inputs 2
name CopyBBox2
xpos 585
ypos -101
}
push $N6da36a40
Switch {
inputs 2
which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
name Switch2
label "\[value which]"
xpos 695
ypos -106
}
Grade {
channels rgba
whitepoint 9
black_clamp false
name AverageMult
xpos 695
ypos -37
disable {{"output2 == 4 ? 0 : 1"}}
}
Merge2 {
inputs 2
operation max
name Merge2
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 695
ypos 10
disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
}
Blur {
channels rgba
size {{postBlur} {postBlur}}
name BlurOriginal
label "\[value size]"
xpos 695
ypos 59
}
Invert {
channels rgba
name Invert2
xpos 695
ypos 97
disable {{"parent.size < 0 ? 0 : 1"}}
}
push $N6db20b90
Switch {
inputs 2
which {{"parent.size == 0 ? 0 : 1"}}
name Switch1
label "\[value which]"
xpos 427
ypos 93
}
push $N6dad9960
ShuffleCopy {
inputs 2
in2 none
black red
white green
red2 blue
green2 alpha
out none
out2 {{{parent.Shuffle1.in}}}
name ShuffleCopy1
xpos 0
ypos 97
}
Dot {
name Dot17
label A
note_font_size 41
xpos 34
ypos 455
}
Dot {
name Dot7
note_font_size 41
xpos 34
ypos 585
}
set N6d95fd60 [stack 0]
Dot {
name Dot12
note_font_size 41
xpos -260
ypos 585
}
Dot {
name Dot13
note_font_size 41
xpos -260
ypos 799
}
push $N6daea460
Input {
inputs 0
name Inputmask
xpos 346
ypos 325
number 1
}
Dot {
name Dot19
label Mask
note_font_size 41
xpos 380
ypos 438
}
set N6d976230 [stack 0]
Dot {
name Dot20
note_font_size 41
xpos 270
ypos 438
}
push $N6d95fd60
Merge2 {
inputs 2
bbox intersection
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
name MergeIntersection
xpos 236
ypos 575
disable {{"!\[exists parent.input1]"}}
}
Merge2 {
inputs 2
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
name MergeUnion
xpos 236
ypos 613
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot6
label "intersection\nof (Mask and A) + B"
note_font_size 14
note_font_color 0xffffffff
xpos 270
ypos 773
}
push $N6d976230
Dot {
name Dot10
note_font_size 41
xpos 380
ypos 675
}
push $N6d95fd60
push $N6daefd90
Merge2 {
inputs 2+1
operation copy
Achannels none
Bchannels none
output none
also_merge all
name MergeKeymix
xpos 0
ypos 665
}
Dot {
name Dot14
note_font_size 41
xpos 34
ypos 747
}
set N6d7c2780 [stack 0]
push $N6daefd90
CopyBBox {
inputs 2
name CopyBBoxUnion
xpos -401
ypos 743
disable {{parent.bbox==0?0:1}}
}
CopyBBox {
inputs 2
name CopyBBoxIntersection
xpos -401
ypos 769
disable {{"parent.bbox==1 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBoxA
xpos -401
ypos 795
disable {{"parent.bbox==2 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBoxB
xpos -401
ypos 827
disable {{"parent.bbox==3 ? 0 : 1"}}
}
Crop {
box {0 0 {parent.width} {parent.height}}
crop false
name CopyBBoxFormat
xpos -401
ypos 853
disable {{"parent.bbox==4 ? 0 : 1"}}
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
set N6d7eae80 [stack 0]
Transform {
scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
black_outside false
shutteroffset centred
name TransformBBoxAdjustPercent
xpos -516
ypos 898
}
push $N6d7eae80
AdjBBox {
numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
name AdjBBoxPixels
xpos -401
ypos 901
}
Switch {
inputs 2
which {{adjustBBoxExtra}}
name Switch3
xpos -401
ypos 940
}
Dot {
name Dot9
note_font_size 41
xpos -367
ypos 993
}
push $N6d7c2780
CopyBBox {
inputs 2
name CopyBBox
xpos 0
ypos 989
}
BlackOutside {
name BlackOutside1
xpos 0
ypos 1015
disable {{!parent.blackOutside}}
}
Output {
name Output1
xpos 0
ypos 1155
}
push $N6da36a40
NoOp {
name BBoxResult
xpos 588
ypos -223
addUserKnob {20 User}
addUserKnob {15 bbox}
bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
}
end_group
Group {
name BinaryAlpha1
tile_color 0x2a2a2aff
label "(\[value an] --> \[value output1])"
note_font Verdana
note_font_color 0xfffff9ff
xpos 52
ypos 741
addUserKnob {20 BinaryAlpha}
addUserKnob {4 an l Analyze: M {rgb rgba alpha "" "" ""}}
addUserKnob {4 output1 l Output: M {rgba alpha "" "" "" ""}}
output1 alpha
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: t "Analyzes channel input and creates a binary result 0 or 1 and outputs it into output channel" T BinaryAlpha}
addUserKnob {26 ver l Version: T v03}
}
Input {
inputs 0
name Input
xpos -398
ypos 275
}
Expression {
temp_name0 rgb_an
temp_expr0 "r !=0 || g!=0 || b!=0?1:0"
temp_name1 rgba_an
temp_expr1 "r!=0 || g!=0 || b!=0 || a!=0?1:0"
temp_name2 alpha_an
temp_expr2 a!=0?1:0
expr3 "parent.an == 0 ? rgb_an : parent.an == 1 ? rgba_an : alpha_an"
name Expression
xpos -398
ypos 341
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle
label "\[value in]"
xpos -398
ypos 367
disable {{parent.output1}}
}
Output {
name Output1
xpos -398
ypos 456
}
end_group
Group {
name ExponBlurSimple1
onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"rgba\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
tile_color 0xcc804eff
label "(\[value output2])"
note_font "Verdana Bold"
note_font_color 0xffffffff
selected true
xpos 52
ypos 823
addUserKnob {20 ExponBlurSimple}
addUserKnob {41 channels T Shuffle1.in}
addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
addUserKnob {26 ""}
addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
output2 Over
addUserKnob {3 steps l "  Steps" -STARTLINE}
steps 8
addUserKnob {3 mergeNumber -STARTLINE +INVISIBLE}
mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
addUserKnob {26 text l " " -STARTLINE T " "}
addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
addUserKnob {14 size l Size R -100 100}
size {{parent.size} {parent.size}}
addUserKnob {7 mult l Multiplier R 1 8}
mult {{parent.mult}}
addUserKnob {26 text_1 l " " T " "}
addUserKnob {14 postBlur l "Post Blur" R 0 100}
postBlur {{parent.postBlur} {parent.postBlur}}
addUserKnob {26 ""}
addUserKnob {20 bboxControl l "BBox Control" n 1}
bboxControl 0
addUserKnob {26 text_2 l " " T " "}
addUserKnob {4 bbox l "BBox: " -STARTLINE M {union intersectionMask A B "input format" "" "" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
safeBBox true
addUserKnob {26 safeBBoxText l "" +STARTLINE T " "}
addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer  " -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
safetyBBoxMethod percent
addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
safeBBoxPercent 1.1
addUserKnob {26 text_3 l "" +STARTLINE T " "}
addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
addUserKnob {26 ""}
addUserKnob {20 endGroup n -1}
addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
addUserKnob {41 mix T MergeKeymix.mix}
addUserKnob {14 safeBBoxPixels l "" +STARTLINE +HIDDEN R 0 400}
safeBBoxPixels 100
addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
adjustBBoxPercent 1
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "Tony Lyons"}
addUserKnob {26 desc l Description: t "Add description and tooltip for gizmo" T ExponBlurSimple}
addUserKnob {26 ver l Version: T v02}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x535e5a00
label "BBox Management"
note_font_size 30
note_font_color 0xffffffff
xpos -529
ypos 492
bdwidth 341
bdheight 525
}
Input {
inputs 0
name Inputimg
xpos 0
ypos -969
}
Dot {
name Dot16
note_font_size 41
xpos 34
ypos -802
}
set N6d896140 [stack 0]
Dot {
name Dot2
note_font_size 41
xpos -367
ypos -802
}
Dot {
name Dot18
label B
note_font_size 41
xpos -367
ypos 434
}
Dot {
name Dot11
note_font_size 41
xpos -367
ypos 623
}
set N6d8a6c30 [stack 0]
Dot {
name Dot3
note_font_size 41
xpos -367
ypos 675
}
set N6d8ac520 [stack 0]
Dot {
name Dot8
note_font_size 41
xpos -463
ypos 675
}
Dot {
name Dot15
note_font_size 41
xpos -463
ypos 831
}
push $N6d896140
Dot {
name Dot1
note_font_size 41
xpos 461
ypos -802
}
Shuffle {
name Shuffle1
label "\[value in]"
xpos 427
ypos -756
}
Remove {
operation keep
channels rgba
name Remove1
xpos 427
ypos -718
}
Dot {
name Dot21
note_font_size 41
xpos 461
ypos -597
}
set N6d6dd360 [stack 0]
Invert {
channels rgba
name Invert1
xpos 695
ypos -601
disable {{"parent.size < 0 ? 0 : 1"}}
}
set N6d6e2b70 [stack 0]
Dot {
name Dot4
note_font_size 41
xpos 540
ypos -543
}
NoOp {
name Original
xpos 506
ypos -327
}
Dot {
name Dot5
note_font_size 41
xpos 540
ypos 14
}
Crop {
inputs 0
box {{input.format.x} {input.format.y} {input.format.r} {input.format.t}}
reformat true
crop false
name Crop1
xpos 210
ypos -750
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
AddChannels {
channels rgba
name AddChannels2
xpos 210
ypos -724
}
push $N6d896140
Merge2 {
inputs 2
name Merge3
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 83
ypos -671
}
NoOp {
name BBoxInput
xpos 83
ypos -628
addUserKnob {20 User}
addUserKnob {15 bbox}
bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
}
Input {
inputs 0
name Inputarea
xpos 289
ypos -638
number 2
}
AddChannels {
channels alpha
color 1
name AddChannels1
xpos 289
ypos -580
}
Invert {
channels rgba
name Invert3
xpos 289
ypos -503
}
push $N6d6e2b70
Multiply {
inputs 1+1
channels rgba
value 0
name Multiply1
label "\[value value]"
xpos 695
ypos -509
}
NoOp {
name Start
xpos 695
ypos -450
}
set N6d757d20 [stack 0]
Blur {
channels rgba
size {{(Blur1.size)*(mult)**7} {(Blur1.size)*(mult)**7}}
crop false
name Blur8
label "\[value size]"
xpos 1395
ypos -370
}
push $N6d757d20
Blur {
channels rgba
size {{(Blur1.size)*(mult)**6} {(Blur1.size)*(mult)**6}}
crop false
name Blur7
label "\[value size]"
xpos 1295
ypos -370
}
push $N6d757d20
Blur {
channels rgba
size {{(Blur1.size)*(mult)**5} {(Blur1.size)*(mult)**5}}
crop false
name Blur6
label "\[value size]"
xpos 1195
ypos -370
}
push $N6d757d20
Blur {
channels rgba
size {{(Blur1.size)*(mult)**4} {(Blur1.size)*(mult)**4}}
crop false
name Blur5
label "\[value size]"
xpos 1095
ypos -370
}
push $N6d757d20
Blur {
channels rgba
size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
crop false
name Blur4
label "\[value size]"
xpos 995
ypos -370
}
push $N6d757d20
Blur {
channels rgba
size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
crop false
name Blur3
label "\[value size]"
xpos 895
ypos -370
}
push 0
push $N6d757d20
Blur {
channels rgba
size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
crop false
name Blur2
label "\[value size]"
xpos 795
ypos -370
}
push $N6d757d20
Blur {
channels rgba
size {{parent.size.w} {parent.size.h}}
name Blur1
label "\[value size]"
xpos 695
ypos -370
}
Merge2 {
inputs 8+1
operation {{parent.mergeNumber}}
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 695
ypos -256
}
NoOp {
name End
xpos 695
ypos -230
}
set N6d5e91e0 [stack 0]
CopyBBox {
inputs 2
name CopyBBox1
xpos 585
ypos -175
}
Group {
name BBoxToFormat
onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
tile_color 0xa57aaaff
note_font "Verdana Bold"
note_font_color 0xffffffff
xpos 585
ypos -151
addUserKnob {20 CropBBox}
addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
addUserKnob {41 intersect T Crop6.intersect}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
overscanType {{parent.safetyBBoxMethod}}
addUserKnob {14 overscan l Overscan R 0 400}
overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
addUserKnob {20 inputBbox l "BBox Data" n 1}
addUserKnob {15 inputFormat l "Input Format"}
inputFormat {0 0 {input.width} {input.height}}
addUserKnob {15 inputBBox l "Input BBox"}
inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
addUserKnob {15 outputBBox l "Output BBox"}
outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
addUserKnob {20 endGroup n -1}
addUserKnob {20 info_1 l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
addUserKnob {26 ver l Version: T v02}
}
Input {
inputs 0
name Input
xpos 261
ypos 394
}
Dot {
name Dot2
note_font_size 41
xpos 295
ypos 462
}
set N6d60dd00 [stack 0]
Dot {
name Dot1
note_font_size 41
xpos -160
ypos 462
}
set N6d6132f0 [stack 0]
push $N6d60dd00
Crop {
box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
crop {{parent.blackOutside}}
name Crop6
xpos 261
ypos 510
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
set N6d618ce0 [stack 0]
Remove {
operation keep
channels none
name Remove1
xpos 120
ypos 504
}
set N6d625280 [stack 0]
Transform {
scale {{parent.overscanPercent} {parent.overscanPercent}}
center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
shutteroffset centred
name Transform1
selected true
xpos 120
ypos 553
}
push $N6d625280
AdjBBox {
numpixels {{parent.overscan} {parent.overscan}}
name AdjBBox1
xpos -5
ypos 510
}
Switch {
inputs 2
which {{overscanType}}
name Switch2
label "\[value which]"
xpos -5
ypos 549
}
Merge2 {
inputs 2
bbox intersection
Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
name Merge1
xpos -5
ypos 647
disable {{!parent.Crop6.intersect}}
}
push $N6d6132f0
CopyBBox {
inputs 2
name CopyBBox1
xpos -194
ypos 653
}
BlackOutside {
name BlackOutside1
xpos -194
ypos 692
disable {{!parent.blackOutside}}
}
Dot {
name Dot4
note_font_size 41
xpos -160
ypos 769
}
push $N6d618ce0
Switch {
inputs 2
which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
name Switch1
label "\[value which]"
xpos 261
ypos 759
}
set N6d6793a0 [stack 0]
Output {
name Output1
xpos 261
ypos 921
}
push $N6d6793a0
NoOp {
name OutputBBox1
xpos 378
ypos 821
addUserKnob {20 User}
addUserKnob {15 OutputBBox l "Output BBox"}
OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
}
end_group
push $N6d5e91e0
Merge2 {
inputs 2
bbox intersection
name Merge4
xpos 585
ypos -127
}
push $N6d5e91e0
CopyBBox {
inputs 2
name CopyBBox2
xpos 585
ypos -101
}
push $N6d5e91e0
Switch {
inputs 2
which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
name Switch2
label "\[value which]"
xpos 695
ypos -106
}
Grade {
channels rgba
whitepoint 8
black_clamp false
name AverageMult
xpos 695
ypos -37
disable {{"output2 == 4 ? 0 : 1"}}
}
Merge2 {
inputs 2
operation max
name Merge2
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 695
ypos 10
disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
}
Blur {
channels rgba
size {{postBlur} {postBlur}}
name BlurOriginal
label "\[value size]"
xpos 695
ypos 59
}
Invert {
channels rgba
name Invert2
xpos 695
ypos 97
disable {{"parent.size < 0 ? 0 : 1"}}
}
push $N6d6dd360
Switch {
inputs 2
which {{"parent.size == 0 ? 0 : 1"}}
name Switch1
label "\[value which]"
xpos 427
ypos 93
}
push $N6d896140
ShuffleCopy {
inputs 2
in2 none
black red
white green
red2 blue
green2 alpha
out none
out2 {{{parent.Shuffle1.in}}}
name ShuffleCopy1
xpos 0
ypos 97
}
Dot {
name Dot17
label A
note_font_size 41
xpos 34
ypos 455
}
Dot {
name Dot7
note_font_size 41
xpos 34
ypos 585
}
set N6d5122b0 [stack 0]
Dot {
name Dot12
note_font_size 41
xpos -260
ypos 585
}
Dot {
name Dot13
note_font_size 41
xpos -260
ypos 799
}
push $N6d8a6c30
Input {
inputs 0
name Inputmask
xpos 346
ypos 325
number 1
}
Dot {
name Dot19
label Mask
note_font_size 41
xpos 380
ypos 438
}
set N6d529a60 [stack 0]
Dot {
name Dot20
note_font_size 41
xpos 270
ypos 438
}
push $N6d5122b0
Merge2 {
inputs 2
bbox intersection
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
name MergeIntersection
xpos 236
ypos 575
disable {{"!\[exists parent.input1]"}}
}
Merge2 {
inputs 2
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
name MergeUnion
xpos 236
ypos 613
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot6
label "intersection\nof (Mask and A) + B"
note_font_size 14
note_font_color 0xffffffff
xpos 270
ypos 773
}
push $N6d529a60
Dot {
name Dot10
note_font_size 41
xpos 380
ypos 675
}
push $N6d5122b0
push $N6d8ac520
Merge2 {
inputs 2+1
operation copy
Achannels none
Bchannels none
output none
also_merge all
name MergeKeymix
xpos 0
ypos 665
}
Dot {
name Dot14
note_font_size 41
xpos 34
ypos 747
}
set N6d575fa0 [stack 0]
push $N6d8ac520
CopyBBox {
inputs 2
name CopyBBoxUnion
xpos -401
ypos 743
disable {{parent.bbox==0?0:1}}
}
CopyBBox {
inputs 2
name CopyBBoxIntersection
xpos -401
ypos 769
disable {{"parent.bbox==1 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBoxA
xpos -401
ypos 795
disable {{"parent.bbox==2 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBoxB
xpos -401
ypos 827
disable {{"parent.bbox==3 ? 0 : 1"}}
}
Crop {
box {0 0 {parent.width} {parent.height}}
crop false
name CopyBBoxFormat
xpos -401
ypos 853
disable {{"parent.bbox==4 ? 0 : 1"}}
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
set N6d59e6b0 [stack 0]
Transform {
scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
black_outside false
shutteroffset centred
name TransformBBoxAdjustPercent
xpos -516
ypos 898
}
push $N6d59e6b0
AdjBBox {
numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
name AdjBBoxPixels
xpos -401
ypos 901
}
Switch {
inputs 2
which {{adjustBBoxExtra}}
name Switch3
xpos -401
ypos 940
}
Dot {
name Dot9
note_font_size 41
xpos -367
ypos 993
}
push $N6d575fa0
CopyBBox {
inputs 2
name CopyBBox
xpos 0
ypos 989
}
BlackOutside {
name BlackOutside1
xpos 0
ypos 1015
disable {{!parent.blackOutside}}
}
Output {
name Output1
xpos 0
ypos 1155
}
push $N6d5e91e0
NoOp {
name BBoxResult
xpos 588
ypos -223
addUserKnob {20 User}
addUserKnob {15 bbox}
bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
}
end_group
Unpremult {
name Unpremult6
xpos 52
ypos 929
}
Switch {
inputs 2
which {{parent.previewKey}}
name Switch1
label "\[value which]"
xpos 52
ypos 977
}
push $N6dbf65e0
Dot {
name Dot4
note_font_size 41
xpos -124
ypos 202
}
Dot {
name Dot5
note_font_size 41
xpos -124
ypos 1046
}
Merge2 {
inputs 2+1
operation copy
name Merge2
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 52
ypos 1043
}
Output {
name Output1
xpos 52
ypos 1163
}
end_group
push $cut_paste_input
Group {
name BeautifulSkin
tile_color 0xb2776dff
note_font "Verdana Bold"
note_font_color 0xffffffff
selected true
xpos 42713
ypos -2617
addUserKnob {20 BeautifulSkin}
addUserKnob {41 channels l Channels T Merge1.also_merge}
addUserKnob {41 size l "Dilate size" T Dilate5.size}
addUserKnob {26 ""}
addUserKnob {4 blurType l "Blur Type" M {Blur Defocus Median}}
blurType Median
addUserKnob {7 blurDefocusSize l "Blur/Defocus size" R 0 100}
blurDefocusSize 5
addUserKnob {41 size_2 l "Median size" T Median2.size}
addUserKnob {6 guiblur l "use blur in gui, switch to defocus/median at render time" +STARTLINE}
guiblur true
addUserKnob {26 ""}
addUserKnob {41 mixMax l "mix Max back in" T Merge8.mix}
addUserKnob {41 mixMin l "mix Min back in" T Merge7.mix}
addUserKnob {26 ""}
addUserKnob {26 "" l mask T ""}
addUserKnob {41 maskChannelInput l "" -STARTLINE T Merge1.maskChannelInput}
addUserKnob {41 inject -STARTLINE T Merge1.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge1.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge1.fringe}
addUserKnob {41 mix T Merge1.mix}
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: T BeautifulSkin}
addUserKnob {26 ver l Version: T v02}
}
Input {
inputs 0
name Inputmask
xpos 626
ypos -370
number 1
}
Input {
inputs 0
name Input
xpos 462
ypos -1126
}
Dot {
name Dot9
xpos 496
ypos -1018
}
set N6dd25560 [stack 0]
Dot {
name Dot10
xpos 264
ypos -1018
}
Dot {
name Dot12
xpos 264
ypos -530
}
set N6dd30760 [stack 0]
Dot {
name Dot13
xpos 264
ypos -454
}
set N6dd36180 [stack 0]
push $N6dd30760
push $N6dd25560
Dilate {
size 3
name Dilate5
xpos 462
ypos -959
}
Dilate {
size {{-parent.Dilate5.size i}}
name Dilate6
xpos 462
ypos -895
}
Dot {
name Dot14
xpos 496
ypos -819
}
set N6dd547b0 [stack 0]
Blur {
size {{parent.blurDefocusSize}}
name Blur10
label "\[value size]"
xpos 343
ypos -736
}
set N6dd5a160 [stack 0]
push $N6dd547b0
Median {
channels all
size 2
ignore_top_line false
name Median2
xpos 573
ypos -729
}
push $N6dd547b0
Defocus {
defocus {{parent.blurDefocusSize i}}
name Defocus1
xpos 462
ypos -728
}
push $N6dd5a160
Switch {
inputs 3
which {{parent.blurType i}}
name Switch1
xpos 462
ypos -660
}
Switch {
inputs 2
which {{guiblur i}}
name Switch2
xpos 462
ypos -602
}
Merge2 {
inputs 2
operation max
also_merge all
mix 0.5
name Merge8
xpos 462
ypos -534
}
Merge2 {
inputs 2
operation min
also_merge all
mix 0.2
name Merge7
xpos 462
ypos -458
}
push $N6dd36180
Dot {
name Dot11
xpos 264
ypos -367
}
Merge2 {
inputs 2+1
operation copy
Achannels none
Bchannels none
output none
also_merge rgb
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 462
ypos -374
}
Output {
name Output1
xpos 462
ypos -225
}
end_group
push $cut_paste_input
Group {
name apGlow
help "apeGlow v1.0 - apEssentials by Adrian Pueyo\n\nExponential glow with advanced controls, using the traditional multi-blur approach.\n\nWith the \"area\" input (optional) you can set only a part of the image to emit glow.\nNaN's will be turned black, on rgba only.\n\nadrianpueyo.com, 2015-2019."
onCreate "n = nuke.thisNode()\nfor i in \['intensity','response','max_size','src_black','src_white','response']:\n    n\[i].setFlag(0x00000004)\nn\['max_size'].setRange(0,10000)\nn\['overscan'].setRange(0,1000)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() in \[\"crop\",\"enableOverscan\"]:\n    kcv = n\[\"crop\"].value()\n    kov = n\[\"enableOverscan\"].value()\n    n\[\"enableOverscan\"].setEnabled(not kcv)\n    n\['overscan'].setEnabled(not kcv and kov)\nelif k.name() == \"s\":\n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        nd = nuke.toNode(\"DP\")\n        nm = nuke.toNode(\"MergeBlurs\")\n        b0 = nuke.toNode(\"Blur0\")\n        b0x = b0.xpos()\n        b0y = b0.ypos()\n        b0n = b0.name()\n        for i in range(1,nm.inputs()):\n            nm.setInput(i,None)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>nd.xpos()]\n        for i in range(1,s):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b0x+i*100,b0y)\n            b.setInput(0,nd)\n            b\[\"channels\"].setValue(\"all\")\n            for bk in \[\"filter\",\"quality\"]:\n                b\[bk].setExpression(b0n+\".\"+bk)\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(\[0,0])\n            b\[\"size\"].setExpression(\"DP.j((1/parent.s)*%s)/ parent.f\"%(i+1))\n            # Multiply\n            m = nuke.nodes.Multiply()\n            m.setXYpos(b0x+i*100,b0y+38)\n            m.setInput(0,b)\n            m\[\"channels\"].setValue(\"all\")\n            m\[\"value\"].setValue(\[0,0,0,0])\n            m\[\"value\"].setExpression( \"parent.p*%s+%s\"%((i+1)/(s),1-(i+1)/(s)))\n            # Merge\n            nm.setInput(i if i<2 else i+1, m)"
tile_color 0xe88543ff
selected true
xpos 42713
ypos -2685
addUserKnob {20 apeGlow}
addUserKnob {41 channels T KeepWhat.channels}
addUserKnob {7 intensity t "Intensity multiplier for the resulting glow." R 0 10}
intensity 1
addUserKnob {18 p l persistance t "Color gain of the largest step. Affects the other steps progressively, with the least effect on the smallest one.\n\nUse as an inverse falloff or as a progressive color tint." R 0 10}
p 1
addUserKnob {6 p_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 tint t "Overall color multiplier for the intensity."}
tint 1
addUserKnob {6 tint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 effect_only l "effect only" +STARTLINE}
effect_only true
addUserKnob {26 ""}
addUserKnob {7 src_black l "src black" t "Black point of the source image's luminance.\nClip the effect below this luminance value." R 0 4}
addUserKnob {7 src_white l "src white" t "White point of the source image's luminance." R 0 4}
src_white 1
addUserKnob {41 white_clamp l clamp -STARTLINE T Grade1.white_clamp}
addUserKnob {7 response t "Gamma on the source image's luminance, to change the response curve falloff." R 0 4}
response 1
addUserKnob {26 ""}
addUserKnob {14 max_size l "max size" t "Maximum pixel size of the exponential glow." R 0 10000}
max_size 2000
addUserKnob {14 f l "size falloff" t "Falloff adjustment on the exponential distribution of the blur sizes.\n\nReduce this to have the glow more diffuse (starting with larger blurs).\nIncrease to have the glow tighter and more defined (start with smaller blurs)." R 0 10}
f 1
addUserKnob {3 s l steps t "Number of blur iterations to combine together."}
s 10
addUserKnob {41 filter T Blur0.filter}
addUserKnob {41 quality l "" -STARTLINE T Blur0.quality}
addUserKnob {6 crop l "crop to format" -STARTLINE}
addUserKnob {14 overscan R 0 1000}
overscan 100
addUserKnob {6 enableOverscan l enable -STARTLINE}
enableOverscan true
addUserKnob {26 ""}
addUserKnob {41 maskChannelArea l area -STARTLINE T ExpressionArea.maskChannelMask}
addUserKnob {41 inject_area l inject -STARTLINE T ExpressionArea.inject}
addUserKnob {41 invert_area l invert -STARTLINE T ExpressionArea.invert_mask}
addUserKnob {41 fringe_area l fringe -STARTLINE T ExpressionArea.fringe}
addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
addUserKnob {41 inject -STARTLINE T Merge.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge.fringe}
addUserKnob {41 mix T Merge.mix}
addUserKnob {26 version_author l "" t "apeGlow v1.0\n2019" +STARTLINE T "<span style=\"color:#666\"><br/><b>apeGlow v1.0</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2015-2019</span>"}
}
Input {
inputs 0
name Inputmask
xpos -883
ypos 975
number 2
}
Input {
inputs 0
name Inputarea
xpos -638
ypos 383
number 1
}
Input {
inputs 0
name Inputimg
xpos -773
ypos 220
}
Dot {
name Dot6
xpos -739
ypos 308
}
set N5afefd40 [stack 0]
Dot {
name Dot8
xpos -494
ypos 308
}
set N5aff5630 [stack 0]
Remove {
name RemoveAll
xpos -528
ypos 345
}
Expression {
inputs 1+1
channel0 rgba
expr0 1
name ExpressionArea
xpos -528
ypos 383
disable {{"!\[exists parent.input1]"}}
}
Shuffle {
red white
green white
blue white
alpha white
name ShuffleWhite
xpos -528
ypos 409
disable {{"\[exists parent.input1]"}}
}
push $N5aff5630
Dot {
name Dot7
xpos -384
ypos 308
}
Remove {
operation keep
channels rgba
name KeepWhat
xpos -418
ypos 377
}
add_layer {apGlowArea apGlowArea.red}
Copy {
inputs 2
from0 rgba.alpha
to0 apGlowArea.red
name Copy1
xpos -418
ypos 403
disable {{"!\[exists parent.input1]"}}
}
Premult {
channels all
alpha apGlowArea.red
name Premult1
xpos -418
ypos 441
disable {{"!\[exists parent.input1]"}}
}
Remove {
channels apGlowArea
name RemoveArea
xpos -418
ypos 479
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot5
xpos -384
ypos 538
}
set N5ae56e20 [stack 0]
Dot {
name Dot1
xpos -494
ypos 538
}
Saturation {
channels all
saturation 0
name Saturation1
xpos -528
ypos 556
}
set N5ae61f30 [stack 0]
Grade {
channels all
blackpoint {{parent.src_black}}
whitepoint {{parent.src_white}}
gamma {{parent.response}}
name Grade1
xpos -528
ypos 594
}
push $N5ae56e20
push $N5ae61f30
Merge2 {
inputs 2
operation divide
also_merge all
name Merge4
xpos -418
ypos 562
}
Merge2 {
inputs 2
operation multiply
also_merge all
name Merge3
xpos -418
ypos 600
}
Dot {
name DP
xpos -384
ypos 671
addUserKnob {20 User}
addUserKnob {14 j R 0 100}
j {{"pow(2, t*(log(parent.max_size*parent.f)/log(2)) )"} {"pow(2, t*(log(parent.max_size*parent.f)/log(2)) )"}}
}
set N5aea55c0 [stack 0]
Blur {
size {{"DP.j((1/parent.s)*10)/ parent.f"} {"DP.j((1/parent.s)*10)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur9
xpos 482
ypos 729
}
Multiply {
value {{parent.p*1.0+0.0} {parent.p*1.0+0.0} {parent.p*1.0+0.0} {parent.p*1.0+0.0}}
name Multiply9
xpos 482
ypos 767
}
push $N5aea55c0
Blur {
size {{"DP.j((1/parent.s)*9)/ parent.f"} {"DP.j((1/parent.s)*9)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur8
xpos 382
ypos 729
}
Multiply {
value {{parent.p*0.9+0.1} {parent.p*0.9+0.1} {parent.p*0.9+0.1} {parent.p*0.9+0.1}}
name Multiply8
xpos 382
ypos 767
}
push $N5aea55c0
Blur {
size {{"DP.j((1/parent.s)*8)/ parent.f"} {"DP.j((1/parent.s)*8)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur7
xpos 282
ypos 729
}
Multiply {
value {{parent.p*0.8+0.2} {parent.p*0.8+0.2} {parent.p*0.8+0.2} {parent.p*0.8+0.2}}
name Multiply7
xpos 282
ypos 767
}
push $N5aea55c0
Blur {
size {{"DP.j((1/parent.s)*7)/ parent.f"} {"DP.j((1/parent.s)*7)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur6
xpos 182
ypos 729
}
Multiply {
value {{parent.p*0.7+0.3} {parent.p*0.7+0.3} {parent.p*0.7+0.3} {parent.p*0.7+0.3}}
name Multiply6
xpos 182
ypos 767
}
push $N5aea55c0
Blur {
size {{"DP.j((1/parent.s)*6)/ parent.f"} {"DP.j((1/parent.s)*6)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur5
xpos 82
ypos 729
}
Multiply {
value {{parent.p*0.6+0.4} {parent.p*0.6+0.4} {parent.p*0.6+0.4} {parent.p*0.6+0.4}}
name Multiply5
xpos 82
ypos 767
}
push $N5aea55c0
Blur {
size {{"DP.j((1/parent.s)*5)/ parent.f"} {"DP.j((1/parent.s)*5)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur4
xpos -18
ypos 729
}
Multiply {
value {{parent.p*0.5+0.5} {parent.p*0.5+0.5} {parent.p*0.5+0.5} {parent.p*0.5+0.5}}
name Multiply4
xpos -18
ypos 767
}
push $N5aea55c0
Blur {
size {{"DP.j((1/parent.s)*4)/ parent.f"} {"DP.j((1/parent.s)*4)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur3
xpos -118
ypos 729
}
Multiply {
value {{parent.p*0.4+0.6} {parent.p*0.4+0.6} {parent.p*0.4+0.6} {parent.p*0.4+0.6}}
name Multiply3
xpos -118
ypos 767
}
push $N5aea55c0
Blur {
size {{"DP.j((1/parent.s)*3)/ parent.f"} {"DP.j((1/parent.s)*3)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur2
xpos -218
ypos 729
}
Multiply {
value {{parent.p*0.3+0.7} {parent.p*0.3+0.7} {parent.p*0.3+0.7} {parent.p*0.3+0.7}}
name Multiply2
xpos -218
ypos 767
}
push 0
push $N5aea55c0
Blur {
size {{"DP.j((1/parent.s)*2)/ parent.f"} {"DP.j((1/parent.s)*2)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur1
xpos -318
ypos 729
}
Multiply {
value {{parent.p*0.2+0.8} {parent.p*0.2+0.8} {parent.p*0.2+0.8} {parent.p*0.2+0.8}}
name Multiply1
xpos -318
ypos 767
}
push $N5aea55c0
Blur {
size {{"DP.j(1/parent.s + 0) / parent.f"} {"DP.j(1/parent.s + 0) / parent.f"}}
crop false
name Blur0
xpos -418
ypos 729
}
Multiply {
value {{"parent.p * 1/parent.s + (1-1/parent.s)"}}
name Multiply0
xpos -418
ypos 767
}
Merge2 {
inputs 10+1
operation plus
name MergeBlurs
xpos -418
ypos 864
}
Multiply {
value {{parent.intensity*parent.tint/parent.s} {parent.intensity*parent.tint/parent.s} {parent.intensity*parent.tint/parent.s} {parent.intensity*parent.tint/parent.s}}
name MultiplyR
xpos -418
ypos 890
}
Expression {
expr0 isnan(r)?0:r
expr1 isnan(g)?0:g
expr2 isnan(b)?0:b
expr3 isnan(a)?0:a
name NanToBlack
xpos -418
ypos 928
}
push $N5afefd40
Dot {
name Dot4
xpos -739
ypos 769
}
set N5ac00010 [stack 0]
Dot {
name Dot2
xpos -629
ypos 769
}
Shuffle {
red black
green black
blue black
name Shuffle
xpos -663
ypos 847
disable {{!parent.effect_only}}
}
Remove {
operation keep
channels rgb
name Remove1
xpos -663
ypos 873
disable {{!parent.effect_only}}
}
Merge2 {
inputs 2
operation plus
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
name Merge1
xpos -663
ypos 928
}
Dot {
name Dot3
xpos -629
ypos 978
}
push $N5ac00010
Merge2 {
inputs 2+1
operation copy
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
name Merge
xpos -773
ypos 974
}
Crop {
box {{parent.crop?0:-parent.overscan} {parent.crop?0:-parent.overscan} {parent.crop?width:width+parent.overscan.w} {parent.crop?height:height+parent.overscan.h}}
intersect true
name CropOverscan
selected true
xpos -773
ypos 1000
disable {{"!parent.enableOverscan && !parent.crop"}}
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
Output {
name Output
xpos -773
ypos 1026
}
end_group
push $cut_paste_input
Group {
name X_Soften
help "An accelerated weighted blur filter. This does a similar operation to the bilinear filter with a very reduced computational cost."
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"radius\":\n        k.setValue(max(k.value(),0))\n        \nif k.name() == \"quality\":\n        k.setValue(max(k.value(),1))\n        \nif k.name() == \"bias\":\n        k.setValue(max(k.value(),0))"
tile_color 0xcc804eff
selected true
xpos 42712
ypos -2748
addUserKnob {20 Soften}
addUserKnob {41 "Local GPU: " T BlinkScript1.gpuName}
addUserKnob {41 "Use GPU if Available" T BlinkScript1.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {41 channels t "Channels to apply the smoothing to." T Merge1.Achannels}
addUserKnob {7 radius t "Radius to apply the smoothing to." R 0 100}
radius 15
addUserKnob {7 bias t "This allows you to bias the blur in order to preserve edges.\n\nHigher values will preserve finer details. Lower values will smooth out more features.\n\nA value of 0 is equivalent to Nuke's box blur." R 0 100}
bias 40
addUserKnob {3 quality l "  quality " t "The maximum number of samples to use for the smoothing. When using very large radius the filter can become very slow. Limiting the number of samples will hugely increase performance at the cost of smoothing out some fine details." -STARTLINE}
quality 15
addUserKnob {41 unpremult T Unpremult1.alpha}
addUserKnob {6 luma_only l "luma only" t "If checked, only the luminance of the rgb will be smoothed, keeping the same hue and saturation as the input." +STARTLINE}
luma_only true
addUserKnob {20 about l About}
addUserKnob {26 about_1 l "" t "A bunny:\n(\\(\\ \n( - -)\n((') (')" +STARTLINE T "<br>\n<b>Xavier Martín © 2017</b>"}
addUserKnob {26 ""}
addUserKnob {26 website l "" +STARTLINE T "<a href=\"http://www.xaviermartinvfx.com\"><span style=\"color:#C8C8C8;\">www.xaviermartinvfx.com</span></a>"}
addUserKnob {26 space4_1 l "" +STARTLINE T <br>}
addUserKnob {22 version l <center>version</center> T "nuke.message('X_Soften Gizmo <i>v1.0</i><br><b>Xavier Martín © 2017</b>')" +STARTLINE}
addUserKnob {22 help_documentation l <center>?</center> -STARTLINE T "nuke.message('You can find more documentation<br>on <a href=\"http://www.nukepedia.com/blink/filters/x_soften\"><span style=\"color:#BCBCBC;\">Nukepedia</span></a> or my <a href=\"http://www.xaviermartinvfx.com/x_sharpen/\"><span style=\"color:#BCBCBC;\">website</span></a>.')"}
}
Input {
inputs 0
name Source
xpos 2960
ypos -610
}
Unpremult {
channels all
alpha -rgba.alpha
name Unpremult1
xpos 2960
ypos -566
}
set N5af2e060 [stack 0]
push $N5af2e060
Remove {
name Remove1
xpos 3060
ypos -566
}
Merge2 {
inputs 2
operation copy
Achannels rgb
name Merge1
xpos 3060
ypos -510
}
Dot {
name Dot3
xpos 3094
ypos -456
}
set N5af51a80 [stack 0]
Dot {
name Dot2
xpos 3094
ypos -206
}
push $N5af51a80
Dot {
name Dot4
xpos 3194
ypos -456
}
Saturation {
saturation 0
mode Average
name Saturation1
xpos 3160
ypos -410
disable {{1-parent.luma_only}}
}
Dot {
name Dot1
xpos 3194
ypos -356
}
set N5af6fed0 [stack 0]
Blur {
channels rgba
size {{parent.radius/parent.quality}}
filter box
crop false
name Blur1
xpos 3260
ypos -310
disable {{parent.radius/parent.quality<=1}}
}
push $N5af6fed0
BlinkScript {
inputs 2
ProgramGroup 1
KernelDescription "1 \"FastWeightedBlur\" iterate componentWise 7db38cadf585143162376d5e48625a8d4ef028893bbb529123eef77a2122fd98 3 \"src\" Read Point \"downres\" Read Ranged2D \"dst\" Write Point 4 \"Radius\" Float 1 AAAAAA== \"bias\" Float 1 AAAAAA== \"Quality\" Int 1 AAAAAA== \"luma\" Int 1 AAAAAA=="
kernelSource "kernel FastWeightedBlur : public ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eRead, eAccessRanged2D, eEdgeClamped> downres;\n  Image<eWrite, eAccessPoint> dst;\n\n  param:\n    float Radius;\n    float bias;\n    int Quality;\n    int luma;\n\n  void init() \{\n    downres.setRange(-Radius*Quality,-Radius*Quality,Radius*Quality,Radius*Quality);\n  \}\n\n  void process(int c) \{\n    int channel = 0;\n    if(luma==0)\n      channel = c;\n    if(c==channel) \{\n      float sum = 0.0f;\n      float sumWeight = 0.0f;\n      float source = src();\n      float weight = 0.0f;\n      float sample = 0.0f;\n      for(int j = -Quality; j <= Quality; j++) \{\n        for(int i = -Quality; i <= Quality; i++) \{\n          sample = downres(int(Radius*i),int(Radius*j));\n          weight = 1.0/(pow(bias*(sample-source),2)+1);\n          sum += sample*weight;\n          sumWeight += weight;\n        \}\n      \}\n      dst() = sum/sumWeight;\n    \}\n  \}\n\};"
rebuild ""
FastWeightedBlur_Radius {{max(parent.radius/parent.quality,1)}}
FastWeightedBlur_bias {{parent.bias}}
FastWeightedBlur_Quality {{min(parent.quality,radius)}}
FastWeightedBlur_luma {{parent.luma_only}}
rebuild_finalise ""
name BlinkScript1
xpos 3160
ypos -266
}
MergeExpression {
inputs 2
temp_name0 Al
temp_expr0 (Ar+Ag+Ab)/3
expr0 Al==0?0:Ar*Br/Al
expr1 Al==0?0:Ag*Br/Al
expr2 Al==0?0:Ab*Br/Al
expr3 Aa
name MergeExpression1
selected true
xpos 3160
ypos -210
disable {{1-parent.luma_only}}
}
push $N5af2e060
Dot {
name Dot5
xpos 2994
ypos -156
}
Merge2 {
inputs 2
operation copy
Bchannels {{{parent.Merge1.Achannels}}}
output {{{parent.Merge1.Achannels}}}
name Merge2
xpos 3160
ypos -160
}
Premult {
channels all
alpha {{{parent.Unpremult1.alpha}}}
invert {{parent.Unpremult1.invert}}
name Premult1
xpos 3160
ypos -116
}
Output {
name Output1
xpos 3160
ypos -60
}
end_group
push $cut_paste_input
Group {
name X_Sharpen
help "An accelerated weighted sharpen filter. This does a similar operation to nuke's sharpen solving three of its issues: negative values, dark edges and hue inversions."
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"radius\":\n        k.setValue(max(k.value(),0))\n        \nif k.name() == \"quality\":\n        k.setValue(max(k.value(),1))\n        \nif k.name() == \"bias\":\n        k.setValue(max(k.value(),0))\n        \nif k.name() == \"sharpen\":\n        k.setValue(max(k.value(),0))"
tile_color 0xcc804eff
selected true
xpos 42707
ypos -2814
addUserKnob {20 Sharpen}
addUserKnob {41 "Local GPU: " T BlinkScript1.gpuName}
addUserKnob {41 "Use GPU if Available" T BlinkScript1.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {41 channels t "Channels to apply the smoothing to." T Merge1.Achannels}
addUserKnob {7 sharpen t "Increase the local contrast of your image.\nA value of 0 will leave the image untouched.\nHigher values will result in crispier images." R 0 4}
sharpen 1
addUserKnob {7 radius t "Radius to apply the sharpening to." R 0 100}
radius 15
addUserKnob {7 bias t "In order to sharpen the image, a blurred copy of the image needs to be created.\n\nControlling the bias of the blur will avoid created banding or negative loves around edges.\n\nHigher values will apply the sharpen only to similar pixels, avoiding cross-object contamination  and unwanted artefacts.\n\nA value of 0 is equivalent to Nuke's sharpen." R 0 100}
bias 40
addUserKnob {3 quality l "  quality " t "The maximum number of samples to use for the smoothing. When using very large radius the filter can become very slow. Limiting the number of samples will hugely increase performance at the cost of smoothing out some fine details." -STARTLINE}
quality 15
addUserKnob {41 unpremult T Unpremult1.alpha}
addUserKnob {6 luma_only l "luma only" t "If checked, only the luminance of the rgb will be sharpened, keeping the same hue and saturation as the input." +STARTLINE}
luma_only true
addUserKnob {20 about l About}
addUserKnob {26 about_1 l "" t "A bunny:\n(\\(\\ \n( - -)\n((') (')" +STARTLINE T "<br>\n<b>Xavier Martín © 2017</b>"}
addUserKnob {26 ""}
addUserKnob {26 website l "" +STARTLINE T "<a href=\"http://www.xaviermartinvfx.com\"><span style=\"color:#C8C8C8;\">www.xaviermartinvfx.com</span></a>"}
addUserKnob {26 space4_1 l "" +STARTLINE T <br>}
addUserKnob {22 version l <center>version</center> T "nuke.message('X_Soften Gizmo <i>v1.0</i><br><b>Xavier Martín © 2017</b>')" +STARTLINE}
addUserKnob {22 help_documentation l <center>?</center> -STARTLINE T "nuke.message('You can find more documentation<br>on <a href=\"http://www.nukepedia.com/blink/filters/x_sharpen\"><span style=\"color:#BCBCBC;\">Nukepedia</span></a> or my <a href=\"http://www.xaviermartinvfx.com/x_sharpen/\"><span style=\"color:#BCBCBC;\">website</span></a>.')"}
}
Input {
inputs 0
name Source
xpos 2960
ypos -660
}
Unpremult {
channels all
alpha -rgba.alpha
name Unpremult1
xpos 2960
ypos -616
}
Dot {
name Dot8
xpos 2994
ypos -556
}
set N5b0631f0 [stack 0]
push $N5b0631f0
Remove {
name Remove1
xpos 3060
ypos -566
}
Merge2 {
inputs 2
operation copy
Achannels rgb
name Merge1
xpos 3060
ypos -510
}
Dot {
name Dot3
xpos 3094
ypos -456
}
set N5b083af0 [stack 0]
Dot {
name Dot2
xpos 3094
ypos -156
}
push $N5b083af0
Dot {
name Dot4
xpos 3194
ypos -456
}
Saturation {
saturation 0
mode Average
name Saturation1
xpos 3160
ypos -410
disable {{1-parent.luma_only}}
}
set N5b094540 [stack 0]
Dot {
name Dot6
xpos 3394
ypos -406
}
Dot {
name Dot7
xpos 3394
ypos -206
}
push $N5b094540
Dot {
name Dot1
xpos 3194
ypos -356
}
set N5b0ad070 [stack 0]
Blur {
channels rgba
size {{parent.radius/parent.quality}}
filter box
crop false
name Blur1
xpos 3260
ypos -310
disable {{parent.radius/parent.quality<=1}}
}
push $N5b0ad070
BlinkScript {
inputs 2
ProgramGroup 1
KernelDescription "1 \"FastWeightedBlur\" iterate componentWise 7db38cadf585143162376d5e48625a8d4ef028893bbb529123eef77a2122fd98 3 \"src\" Read Point \"downres\" Read Ranged2D \"dst\" Write Point 4 \"Radius\" Float 1 AAAAAA== \"bias\" Float 1 AAAAAA== \"Quality\" Int 1 AAAAAA== \"luma\" Int 1 AAAAAA=="
kernelSource "kernel FastWeightedBlur : public ImageComputationKernel<eComponentWise>\n\{\n  Image<eRead, eAccessPoint, eEdgeClamped> src;\n  Image<eRead, eAccessRanged2D, eEdgeClamped> downres;\n  Image<eWrite, eAccessPoint> dst;\n\n  param:\n    float Radius;\n    float bias;\n    int Quality;\n    int luma;\n\n  void init() \{\n    downres.setRange(-Radius*Quality,-Radius*Quality,Radius*Quality,Radius*Quality);\n  \}\n\n  void process(int c) \{\n    int channel = 0;\n    if(luma==0)\n      channel = c;\n    if(c==channel) \{\n      float sum = 0.0f;\n      float sumWeight = 0.0f;\n      float source = src();\n      float weight = 0.0f;\n      float sample = 0.0f;\n      for(int j = -Quality; j <= Quality; j++) \{\n        for(int i = -Quality; i <= Quality; i++) \{\n          sample = downres(int(Radius*i),int(Radius*j));\n          weight = 1.0/(pow(bias*(sample-source),2)+1);\n          sum += sample*weight;\n          sumWeight += weight;\n        \}\n      \}\n      dst() = sum/sumWeight;\n    \}\n  \}\n\};"
rebuild ""
FastWeightedBlur_Radius {{max(parent.radius/parent.quality,1)}}
FastWeightedBlur_bias {{parent.bias}}
FastWeightedBlur_Quality {{min(parent.quality,radius)}}
FastWeightedBlur_luma {{parent.luma_only}}
rebuild_finalise ""
name BlinkScript1
xpos 3160
ypos -266
}
MergeExpression {
inputs 2
expr0 Br==0?0:((Ar/Br)**sharpen)*Br
expr1 Bg==0?0:((Ag/Bg)**sharpen)*Bg
expr2 Bb==0?0:((Ab/Bb)**sharpen)*Bb
expr3 Ba==0?0:((Aa/Ba)**sharpen)*Ba
name MergeExpression2
xpos 3160
ypos -210
addUserKnob {20 User}
addUserKnob {7 sharpen}
sharpen {{parent.sharpen+1}}
}
MergeExpression {
inputs 2
temp_name0 Al
temp_expr0 (Ar+Ag+Ab)/3
expr0 Al==0?0:Ar*Br/Al
expr1 Al==0?0:Ag*Br/Al
expr2 Al==0?0:Ab*Br/Al
expr3 Aa
name MergeExpression1
xpos 3160
ypos -160
disable {{1-parent.luma_only}}
}
push $N5b0631f0
Dot {
name Dot5
xpos 2994
ypos -104
}
Merge2 {
inputs 2
operation copy
Bchannels {{{parent.Merge1.Achannels}}}
output {{{parent.Merge1.Achannels}}}
name Merge2
xpos 3160
ypos -108
}
Premult {
channels all
alpha {{{parent.Unpremult1.alpha}}}
invert {{parent.Unpremult1.invert}}
name Premult1
xpos 3160
ypos -66
}
Output {
name Output1
xpos 3160
ypos -8
}
end_group
push $cut_paste_input
Group {
name X_Denoise
help "Clean digital noise on video"
knobChanged "import math\nn = nuke.thisNode()\nk = nuke.thisKnob()\ni = n\['iterations'].value()\nm = n\['x2'].value()\n\n\nif k.name() == \"iterations\":\n  n\['active_frames'].setValue(1+math.ceil(i)*2*(1+m))\nelif k.name() == \"x2\":\n  n\['active_frames'].setValue(1+math.ceil(i)*2*(1+m))\nif n\['fix_artifacts'].value() == 0:\n  n\['motion_threshold'].setEnabled(False)\n  n\['smooth_threshold'].setEnabled(False)\n  n\['preview_mask'].setEnabled(False)\n  n\['median'].setEnabled(False)\nelse:\n  n\['motion_threshold'].setEnabled(True)\n  n\['smooth_threshold'].setEnabled(True)\n  n\['preview_mask'].setEnabled(True)\n  n\['median'].setEnabled(True)\n\nif n\['static'].value() == 1:\n  n\['vectorDetail'].setEnabled(False)\n  n\['smoothness'].setEnabled(False)\n  n\['flickerCompensation'].setEnabled(False)\nelse:\n  n\['vectorDetail'].setEnabled(True)\n  n\['smoothness'].setEnabled(True)\n  n\['flickerCompensation'].setEnabled(True)"
tile_color 0xcc804eff
note_font_color 0xffffffff
selected true
xpos 42715
ypos -2879
addUserKnob {20 NoiseReduction l "Noise Reduction"}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T VectorGenerator2.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {7 luminance l "fix luminance" t "The <b>brightness</b> of the pixels will remain untouched at 0 and will be changed at 1. Values over 1 do not have any effect."}
luminance 1
addUserKnob {7 chrominance l "fix chrominance" t "The <b>color</b> of the pixels will remain untouched at 0 and will be changed at 1. Values over 1 do not have any effect."}
chrominance 1
addUserKnob {26 ""}
addUserKnob {7 iterations t "\nThe more <b>iterations</b>, the more noise will be reduced. Increasing too much the iterations will slow down the render and could cause artifacts or blur in some areas.\n\nEach iteration loads the previous and next frames to use them in the calculation. The further a frame is from the current frame, the less effect it will have on the calculation.\n\nUsing <b>intigers</b> instead of decimals will lead to a much efficient process and therefore faster render times.\n\nYou can use the <b>x2</b> multiplier at the right of this slider to drastically increase the number of frames that will be used in the calculation.\n\nCheck the <b>Active Frames</b> to see how many frames are being processed with the noise reduction algorithm.\n" R 1 5}
iterations 2
addUserKnob {6 x2 t "\nBy default, each iteration will look to the previous and next frame. If the <b>x2</b> multiplier is activated, each iteration will add the 2 previous frames and the 2 next frames, increasing the quality of the calculation at the cost of really slow renders.\n\nFurther frames have less consitency, so they will have less effect to the final output.\n" -STARTLINE}
addUserKnob {3 active_frames l " " t "\nThis shows <b>how many frames are being used </b>in the calculation. \n\nBy default, each <b>iteration</b> will load the next two closest frames to the current frame. The further a loaded frame is from the current frame, the less effect it will have on the calculation. \n\nThe amount of iterations is doubled if the <b>x2</b> multiplier is checked. Keep in mind that each new frame added to the calculation will increase the render time.\n\nTherefore, the total amount of frames that are being used is calculated with this formula:\n\n1 + 2 * iterations * multiplier\n\n" +DISABLED}
active_frames 5
addUserKnob {26 active_frames_text l "" t "\nThis shows <b>how many frames are being used</b> in the calculation. \n\nBy default, each <b>iteration </b>will load the next two closest frames to the current frame. The further a loaded frame is from the current frame, the less effect it will have on the calculation. \n\nThe amount of iterations is doubled if the <b>x2</b> multiplier is checked. Keep in mind that each new frame added to the calculation will increase the render time. \n\nTherefore, the total amount of frames that are being used is calculated with this formula: \n\n1 + 2 * iterations * multiplier \n" -STARTLINE T "active frames"}
addUserKnob {26 active_frames_python l INVISIBLE t "w = nuke.toNode(\"X_Denoise\")\nw\['active_frames'].setEnabled(False)\n\ndef activeFrames():\n import math\n n = nuke.thisNode()\n k = nuke.thisKnob()\n i = n\['iterations'].value()\n m = n\['x2'].value()\n\n \n if k.name() == \"iterations\":\n   n\['active_frames'].setValue(1+math.ceil(i)*2*(1+m))\n elif k.name() == \"x2\":\n   n\['active_frames'].setValue(1+math.ceil(i)*2*(1+m))\nnuke.addKnobChanged(activeFrames, nodeClass=\"Group\")\n\nif n\['fix_artifacts'].value() == 1:\n  n\['motion_threshold'].setEnabled(False)\n  n\['smooth_threshold'].setEnabled(False)\n  n\['preview_mask'].setEnabled(False)\n  n\['median'].setEnabled(False)\nelse:\n  n\['motion_threshold'].setEnabled(True)\n  n\['smooth_threshold'].setEnabled(True)\n  n\['preview_mask'].setEnabled(True)\n  n\['median'].setEnabled(True)\n\nif n\['static'].value() == 1:\n  n\['vectorDetail'].setEnabled(False)\n  n\['smoothness'].setEnabled(False)\n  n\['flickerCompensation'].setEnabled(False)\nelse:\n  n\['vectorDetail'].setEnabled(True)\n  n\['smoothness'].setEnabled(True)\n  n\['flickerCompensation'].setEnabled(True)" -STARTLINE +INVISIBLE}
addUserKnob {26 ""}
addUserKnob {41 filter t "<b>Impulse</b> is the fastes but will create really poor results.\n<b>Cubic</b> will work fine in most cases, but it will smooth the detail.\n<b>Lanczos</b> will sharpen the image a little bit to contrarrest the softness of the image. It will also keep borders intact.\n<b>Sinc4</b> will drastically sharpen the image, and could cause the noise to reappear." T IDistort16.filter}
addUserKnob {4 node_output l "    output" t "Choose if you want to output the <b>Result</b> image without the noise or to visualize the <b>Noise</b> separately.\n\nYou can also output the <b>Mask</b> where artifacts are ocurring (but first you need to select the <b>fix artifacts</b> checkbox in the Qaulity tab." -STARTLINE M {Result Noise Mask}}
addUserKnob {20 Quality}
addUserKnob {6 fix_artifacts l "fix artifacts" t "\nThe noise reduction algorithm fails when an object is moving too fast. That will cause <b>artifacts</b> to appear.\n\nIf the <b>Fix Artifacts</b> checkbox is activated, a procedural mask will be created around moving abjects. The objects inside the mask will not be affected.\n\nYou can see how the mask looks like with the <b>preview</b> checkbox. Use the <b>motion threshold</b> and the <b>smooth</b> sliders to adjust the mask.\n\nBy default, a <b>median</b> filter is applied to the moving objects instead of the noise reduction algorithm, but you can disable that option.\n\nRemember that you can select the <b>Mask</b> as the <b>Output</b> of this node. You can use this mask to apply the Nuke Denoise to the fast moving areas and X_Distort to the rest of the image for a professional accurate noise reduction.\n" +STARTLINE}
addUserKnob {7 motion_threshold l "motion threshold" t "This determines the maximum velocity which a pixel can have in order to be used in the noise reduction process. The higher the value, the less object will be excluded from the algorithm.\n\nUse the <b>preview</b> checkbox in order to see the mask." +DISABLED R 0 10}
motion_threshold 2.9
addUserKnob {7 smooth_threshold l smooth t "This blurs the mask that determines which objects are used in the noise reduction algorithm.\n\nUse the <b>preview</b> checkbox in order to see the mask." +DISABLED R 0 20}
smooth_threshold 10
addUserKnob {6 preview_mask l preview t "Use the <b>preview</b> checkbox in order to see the mask that determines which objects are used in the algorithm.\n\nWhite areas will be excluded from the effect, and black areas will be denoised." +DISABLED +STARTLINE}
addUserKnob {6 median t "Use this so apply a subtle <b>median</b> filter to those areas that move too fast for the algorithm. This will also apply some chromatic noise reduction." -STARTLINE +DISABLED}
median true
addUserKnob {26 ""}
addUserKnob {41 vectorDetail l "Vector Detail" +INVISIBLE T VectorGenerator2.vectorDetail}
addUserKnob {41 smoothness l Smoothness +INVISIBLE T VectorGenerator2.smoothness}
addUserKnob {41 flickerCompensation l "Flicker Compensation" T VectorGenerator2.flickerCompensation}
addUserKnob {6 static l "static shot" t "Check this if the image is static and no object is moving at all. This will drastically increase the speed but any moving objects will be blurred out." -STARTLINE}
addUserKnob {20 Tolerances n 2}
addUserKnob {41 weightRed l "Weight Red" T VectorGenerator2.weightRed}
addUserKnob {41 weightGreen l "Weight Green" T VectorGenerator2.weightGreen}
addUserKnob {41 weightBlue l "Weight Blue" T VectorGenerator2.weightBlue}
addUserKnob {20 "" n -1}
addUserKnob {20 about l About}
addUserKnob {26 about_1 l "" t "A bunny:\n(\\(\\ \n( - -)\n((') (')" +STARTLINE T "<br>\n<b>Xavier Martín © 2015</b>"}
addUserKnob {26 ""}
addUserKnob {26 website l "" +STARTLINE T "<a href=\"http://www.xaviermartinvfx.com\"><span style=\"color:#C8C8C8;\">www.xaviermartinvfx.com</span></a>"}
addUserKnob {26 space4_1 l "" +STARTLINE T <br>}
addUserKnob {22 version l <center>version</center> T "nuke.message('X_Denoise Gizmo <i>v1.0</i><br><b>Xavier Martín © 2015</b>')" +STARTLINE}
addUserKnob {22 help_documentation l <center>?</center> -STARTLINE T "nuke.message('You can find more documentation<br>on <a href=\"http://www.nukepedia.com/gizmos/filter/x_denoise\"><span style=\"color:#BCBCBC;\">Nukepedia</span></a> or my <a href=\"http://www.xaviermartinvfx.com/x_denoise/\"><span style=\"color:#BCBCBC;\">website</span></a>.')"}
}
Input {
inputs 0
name Source
xpos -451
ypos 109
}
set N5b94b290 [stack 0]
Dot {
name Dot53
xpos -673
ypos 112
}
Dot {
name Dot2
xpos -673
ypos 1214
}
set N5b969be0 [stack 0]
Dot {
name Dot54
xpos -673
ypos 1314
}
set N5b96f550 [stack 0]
Dot {
name Dot55
xpos -775
ypos 1314
}
set N5b974ef0 [stack 0]
Dot {
name Dot7
xpos -828
ypos 1314
}
set N5b97a8d0 [stack 0]
Dot {
name Dot8
xpos -828
ypos 1587
}
push $N5b94b290
Dot {
name Dot16
xpos -417
ypos 133
}
set N5b985c10 [stack 0]
VectorGenerator {
vectorDetailLocal 1
smoothnessLocal 0.05
Advanced 1
Tolerances 1
name VectorGenerator2
xpos -265
ypos 124
cached true
}
set N5b98b510 [stack 0]
Dot {
name Dot3
xpos -949
ypos 133
}
Dot {
name Dot4
xpos -949
ypos 779
}
set N5b9a0b50 [stack 0]
push $N5b9a0b50
Merge2 {
inputs 2
operation average
Achannels forward
Bchannels backward
output forward
name Merge2
xpos -983
ypos 774
}
Shuffle {
in forward
blue black
alpha black
name Shuffle1
xpos -983
ypos 810
}
push 0
Merge2 {
inputs 2
metainput A
name Merge5
xpos -983
ypos 834
}
Matrix {
channels {rgba.red rgba.green -rgba.blue none}
matrix {
    {-1 -1 -1}
    {-1 8 -1}
    {-1 -1 -1}
  }
name Matrix1
xpos -983
ypos 857
}
Expression {
channel0 alpha
expr0 (abs(r)+abs(g))*.5
channel1 none
channel2 none
channel3 none
name Expression1
xpos -983
ypos 893
}
Blur {
channels alpha
size 2
name Blur3
xpos -983
ypos 917
}
FrameBlend {
channels alpha
numframes 3
startframe {{frame-(1+x2)}}
endframe {{frame+(1+x2)}}
userange true
name FrameBlend1
xpos -983
ypos 953
}
FrameBlend {
channels alpha
numframes 3
startframe {{frame-(1+x2)}}
endframe {{frame+(1+x2)}}
userange true
name FrameBlend2
xpos -983
ypos 989
disable {{"iterations < 2"}}
}
FrameBlend {
channels alpha
numframes 3
startframe {{frame-(1+x2)}}
endframe {{frame+(1+x2)}}
userange true
name FrameBlend3
xpos -983
ypos 1025
disable {{"iterations < 3"}}
}
FrameBlend {
channels alpha
numframes 3
startframe {{frame-(1+x2)}}
endframe {{frame+(1+x2)}}
userange true
name FrameBlend4
xpos -983
ypos 1061
disable {{"iterations < 4"}}
}
FrameBlend {
channels alpha
numframes 3
startframe {{frame-(1+x2)}}
endframe {{frame+(1+x2)}}
userange true
name FrameBlend5
xpos -983
ypos 1097
disable {{"iterations < 5"}}
}
Grade {
channels alpha
add {{-(motion_threshold**2)}}
name Grade1
xpos -983
ypos 1133
}
Blur {
channels alpha
size {{abs(smooth_threshold)+.5}}
name Blur2
xpos -983
ypos 1169
}
set N5b85e4a0 [stack 0]
Clamp {
channels alpha
name Clamp2
xpos -983
ypos 1364
}
Shuffle {
red alpha
green alpha
blue alpha
name Shuffle2
xpos -983
ypos 1400
}
set N5b87d040 [stack 0]
Dot {
name Dot6
xpos -949
ypos 1516
}
Dot {
name Dot5
xpos -559
ypos 1516
}
push $N5b85e4a0
push $N5b969be0
Copy {
inputs 2
from0 rgba.alpha
to0 rgba.alpha
name Copy1
xpos -983
ypos 1205
}
Median {
size 1
ignore_top_line false
name Median1
xpos -983
ypos 1241
disable {{1-median}}
}
Premult {
name Premult1
xpos -983
ypos 1265
}
push $N5b985c10
Expression {
channel0 motion
expr0 0
channel1 none
channel2 none
channel3 none
name Expression2
xpos -451
ypos 160
}
push $N5b98b510
Switch {
inputs 2
which {{static}}
name Switch7
xpos -265
ypos 160
}
Blur {
channels motion
size {{1+parent.VectorGenerator2.smoothness*5}}
filter triangle
name Blur1
xpos -265
ypos 184
}
Dot {
name Dot12
xpos -231
ypos 262
}
set N5b8e6da0 [stack 0]
Dot {
name Dot18
xpos -231
ypos 336
}
set N5b8ec660 [stack 0]
Dot {
name Dot20
xpos -231
ypos 474
}
set N5b8f1ff0 [stack 0]
Dot {
name Dot21
xpos -231
ypos 548
}
set N5b8f7980 [stack 0]
Dot {
name Dot22
xpos -231
ypos 608
}
Dot {
name Dot19
xpos -231
ypos 686
}
set N5b702cf0 [stack 0]
Dot {
name Dot28
xpos -231
ypos 760
}
set N5b7085a0 [stack 0]
Dot {
name Dot29
xpos -231
ypos 820
}
Dot {
name Dot35
xpos -231
ypos 898
}
set N5b713840 [stack 0]
Dot {
name Dot36
xpos -231
ypos 972
}
set N5b7191a0 [stack 0]
Dot {
name Dot37
xpos -231
ypos 1110
}
set N5b71eb30 [stack 0]
Dot {
name Dot43
xpos -231
ypos 1184
}
set N5b724450 [stack 0]
push $N5b71eb30
TimeOffset {
time_offset -1
time ""
name TimeOffset39
xpos 182
ypos 1107
}
push $N5b7191a0
push $N5b713840
TimeOffset {
time_offset -1
time ""
name TimeOffset33
xpos 182
ypos 895
}
push $N5b7085a0
push $N5b702cf0
TimeOffset {
time_offset -1
time ""
name TimeOffset27
xpos 182
ypos 683
}
push $N5b8f7980
push $N5b8f1ff0
TimeOffset {
time_offset -1
time ""
name TimeOffset21
xpos 182
ypos 471
}
push $N5b8ec660
push $N5b8e6da0
TimeOffset {
time_offset 1
time ""
name TimeOffset18
xpos -25
ypos 259
}
push $N5b985c10
Dot {
name Dot11
xpos -417
ypos 205
}
set N5b75d450 [stack 0]
Dot {
name Dot15
xpos -95
ypos 205
}
set N5b762c50 [stack 0]
TimeOffset {
time_offset 2
time ""
name TimeOffset17
xpos -129
ypos 223
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy17
xpos -129
ypos 249
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort17
xpos -129
ypos 297
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy18
xpos -129
ypos 321
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort18
xpos -129
ypos 369
}
push $N5b8e6da0
push $N5b75d450
TimeOffset {
time_offset -1
time ""
name TimeOffset15
xpos -341
ypos 223
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy15
xpos -341
ypos 247
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort15
xpos -341
ypos 295
}
set N5b7c6020 [stack 0]
push 0
push $N5b8ec660
push $N5b8e6da0
TimeOffset {
time_offset -1
time ""
name TimeOffset19
xpos 182
ypos 259
}
push $N5b762c50
Dot {
name Dot17
xpos 106
ypos 205
}
TimeOffset {
time_offset -2
time ""
name TimeOffset20
xpos 72
ypos 223
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy19
xpos 72
ypos 247
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort19
xpos 72
ypos 295
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy20
xpos 72
ypos 321
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort20
xpos 72
ypos 369
}
push $N5b8e6da0
push $N5b75d450
TimeOffset {
time_offset 1
time ""
name TimeOffset16
xpos -451
ypos 223
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy16
xpos -451
ypos 247
}
IDistort {
channels rgb
uv forward
filter Lanczos4
name IDistort16
xpos -451
ypos 295
}
set N5b640450 [stack 0]
Merge2 {
inputs 4+1
operation average
name Merge14
xpos -341
ypos 369
}
push $N5b7c6020
push $N5b640450
Merge2 {
inputs 2
operation average
name Merge13
xpos -451
ypos 369
}
Switch {
inputs 2
which {{parent.x2}}
name Switch1
xpos -451
ypos 393
}
set N5b670800 [stack 0]
Dot {
name Dot23
xpos -417
ypos 417
}
set N5b679890 [stack 0]
Dot {
name Dot24
xpos -95
ypos 417
}
set N5b67f180 [stack 0]
Dot {
name Dot25
xpos 106
ypos 417
}
TimeOffset {
time_offset -2
time ""
name TimeOffset22
xpos 72
ypos 435
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy21
xpos 72
ypos 459
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort21
xpos 72
ypos 507
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy22
xpos 72
ypos 533
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort22
xpos 72
ypos 581
}
push $N5b8f7980
push $N5b8f1ff0
TimeOffset {
time_offset 1
time ""
name TimeOffset23
xpos -25
ypos 471
}
push $N5b67f180
TimeOffset {
time_offset 2
time ""
name TimeOffset24
xpos -129
ypos 435
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy23
xpos -129
ypos 461
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort23
xpos -129
ypos 509
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy24
xpos -129
ypos 533
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort24
xpos -129
ypos 581
}
push $N5b8f1ff0
push $N5b679890
TimeOffset {
time_offset -1
time ""
name TimeOffset25
xpos -341
ypos 435
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy25
xpos -341
ypos 459
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort25
xpos -341
ypos 507
}
set N5b535050 [stack 0]
push 0
push $N5b679890
Dot {
name Dot26
xpos -520
ypos 417
}
Dot {
name Dot27
xpos -520
ypos 584
}
set N5b5474e0 [stack 0]
push $N5b8f1ff0
push $N5b679890
TimeOffset {
time_offset 1
time ""
name TimeOffset26
xpos -451
ypos 435
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy26
xpos -451
ypos 459
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort26
xpos -451
ypos 507
}
set N5b5670f0 [stack 0]
Merge2 {
inputs 5+1
operation average
name Merge15
xpos -341
ypos 581
}
push $N5b5474e0
push 0
push $N5b535050
push $N5b5670f0
Merge2 {
inputs 3+1
operation average
name Merge16
xpos -451
ypos 581
}
Switch {
inputs 2
which {{parent.Switch1.which}}
name Switch2
xpos -451
ypos 605
}
set N5b599240 [stack 0]
Dot {
name Dot30
xpos -417
ypos 629
}
set N5b5a22f0 [stack 0]
Dot {
name Dot31
xpos -95
ypos 629
}
set N5b5a7bd0 [stack 0]
Dot {
name Dot32
xpos 106
ypos 629
}
TimeOffset {
time_offset -2
time ""
name TimeOffset28
xpos 72
ypos 647
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy27
xpos 72
ypos 671
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort27
xpos 72
ypos 719
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy28
xpos 72
ypos 745
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort28
xpos 72
ypos 793
}
push $N5b7085a0
push $N5b702cf0
TimeOffset {
time_offset 1
time ""
name TimeOffset29
xpos -25
ypos 683
}
push $N5b5a7bd0
TimeOffset {
time_offset 2
time ""
name TimeOffset30
xpos -129
ypos 647
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy29
xpos -129
ypos 673
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort29
xpos -129
ypos 721
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy30
xpos -129
ypos 745
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort30
xpos -129
ypos 793
}
push $N5b702cf0
push $N5b5a22f0
TimeOffset {
time_offset -1
time ""
name TimeOffset31
xpos -341
ypos 647
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy31
xpos -341
ypos 671
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort31
xpos -341
ypos 719
}
set N5b45d480 [stack 0]
push 0
push $N5b5a22f0
Dot {
name Dot33
xpos -520
ypos 629
}
Dot {
name Dot34
xpos -520
ypos 796
}
set N5b46f910 [stack 0]
push $N5b702cf0
push $N5b5a22f0
TimeOffset {
time_offset 1
time ""
name TimeOffset32
xpos -451
ypos 647
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy32
xpos -451
ypos 671
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort32
xpos -451
ypos 719
}
set N5b48f520 [stack 0]
Merge2 {
inputs 5+1
operation average
name Merge17
xpos -341
ypos 793
}
push $N5b46f910
push 0
push $N5b45d480
push $N5b48f520
Merge2 {
inputs 3+1
operation average
name Merge18
xpos -451
ypos 793
}
Switch {
inputs 2
which {{parent.Switch1.which}}
name Switch3
xpos -451
ypos 817
}
set N5b4bfdf0 [stack 0]
Dot {
name Dot38
xpos -417
ypos 841
}
set N5b4c8ea0 [stack 0]
Dot {
name Dot39
xpos -95
ypos 841
}
set N5b4ce780 [stack 0]
Dot {
name Dot40
xpos 106
ypos 841
}
TimeOffset {
time_offset -2
time ""
name TimeOffset34
xpos 72
ypos 859
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy33
xpos 72
ypos 883
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort33
xpos 72
ypos 931
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy34
xpos 72
ypos 957
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort34
xpos 72
ypos 1005
}
push $N5b7191a0
push $N5b713840
TimeOffset {
time_offset 1
time ""
name TimeOffset35
xpos -25
ypos 895
}
push $N5b4ce780
TimeOffset {
time_offset 2
time ""
name TimeOffset36
xpos -129
ypos 859
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy35
xpos -129
ypos 885
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort35
xpos -129
ypos 933
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy36
xpos -129
ypos 957
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort36
xpos -129
ypos 1005
}
push $N5b713840
push $N5b4c8ea0
TimeOffset {
time_offset -1
time ""
name TimeOffset37
xpos -341
ypos 859
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy37
xpos -341
ypos 883
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort37
xpos -341
ypos 931
}
set N5b384b20 [stack 0]
push 0
push $N5b4c8ea0
Dot {
name Dot41
xpos -520
ypos 841
}
Dot {
name Dot42
xpos -520
ypos 1008
}
set N5b396fb0 [stack 0]
push $N5b713840
push $N5b4c8ea0
TimeOffset {
time_offset 1
time ""
name TimeOffset38
xpos -451
ypos 859
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy38
xpos -451
ypos 883
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort38
xpos -451
ypos 931
}
set N5b3b6bc0 [stack 0]
Merge2 {
inputs 5+1
operation average
name Merge19
xpos -341
ypos 1005
}
push $N5b396fb0
push 0
push $N5b384b20
push $N5b3b6bc0
Merge2 {
inputs 3+1
operation average
name Merge20
xpos -451
ypos 1005
}
Switch {
inputs 2
which {{parent.Switch1.which}}
name Switch4
xpos -451
ypos 1029
}
set N5b3e7490 [stack 0]
Dot {
name Dot44
xpos -417
ypos 1053
}
set N5b3f0540 [stack 0]
Dot {
name Dot45
xpos -95
ypos 1053
}
set N5b3f5db0 [stack 0]
Dot {
name Dot46
xpos 106
ypos 1053
}
TimeOffset {
time_offset -2
time ""
name TimeOffset40
xpos 72
ypos 1071
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy39
xpos 72
ypos 1095
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort39
xpos 72
ypos 1143
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy40
xpos 72
ypos 1169
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort40
xpos 72
ypos 1217
}
push $N5b724450
push $N5b71eb30
TimeOffset {
time_offset 1
time ""
name TimeOffset41
xpos -25
ypos 1107
}
push $N5b3f5db0
TimeOffset {
time_offset 2
time ""
name TimeOffset42
xpos -129
ypos 1071
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy41
xpos -129
ypos 1097
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort41
xpos -129
ypos 1145
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy42
xpos -129
ypos 1169
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort42
xpos -129
ypos 1217
}
push $N5b71eb30
push $N5b3f0540
TimeOffset {
time_offset -1
time ""
name TimeOffset43
xpos -341
ypos 1071
}
Copy {
inputs 2
from0 forward.u
to0 forward.u
from1 forward.v
to1 forward.v
name Copy43
xpos -341
ypos 1095
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort43
xpos -341
ypos 1143
}
set N5b2abcf0 [stack 0]
push 0
push $N5b3f0540
Dot {
name Dot47
xpos -520
ypos 1053
}
Dot {
name Dot48
xpos -520
ypos 1220
}
set N5b2be110 [stack 0]
push $N5b71eb30
push $N5b3f0540
TimeOffset {
time_offset 1
time ""
name TimeOffset44
xpos -451
ypos 1071
}
Copy {
inputs 2
from0 backward.u
to0 forward.u
from1 backward.v
to1 forward.v
name Copy44
xpos -451
ypos 1095
}
IDistort {
channels rgb
uv forward
filter {{IDistort16.filter}}
name IDistort44
xpos -451
ypos 1143
}
set N5b2dde10 [stack 0]
Merge2 {
inputs 5+1
operation average
name Merge21
xpos -341
ypos 1217
}
push $N5b2be110
push 0
push $N5b2abcf0
push $N5b2dde10
Merge2 {
inputs 3+1
operation average
name Merge22
xpos -451
ypos 1217
}
Switch {
inputs 2
which {{parent.Switch1.which}}
name Switch6
xpos -451
ypos 1241
}
push $N5b3e7490
Dot {
name Dot49
xpos -578
ypos 1032
}
push $N5b4bfdf0
Dot {
name Dot50
xpos -578
ypos 820
}
push 0
push $N5b599240
Dot {
name Dot51
xpos -578
ypos 608
}
push $N5b670800
Dot {
name Dot52
xpos -578
ypos 396
}
Dissolve {
inputs 5+1
channels rgb
which {{parent.iterations-1}}
name Dissolve1
xpos -612
ypos 1241
}
Merge2 {
inputs 2
output rgb
name Merge1
xpos -612
ypos 1265
disable {{1-fix_artifacts}}
}
push 0
Merge2 {
inputs 2
bbox A
metainput A
Achannels rgb
Bchannels rgb
output rgb
name Merge3
xpos -612
ypos 1289
}
Clamp {
channels rgb
name Clamp1
xpos -612
ypos 1313
}
Dot {
name Dot56
xpos -578
ypos 1337
}
set N5b16da00 [stack 0]
Expression {
channel0 rgb
expr0 r+g+b
channel1 none
channel2 none
channel3 none
enable_mix_luminance false
name Expression4
xpos -612
ypos 1355
}
push $N5b96f550
Expression {
channel0 rgb
expr0 r+g+b
channel1 none
channel2 none
channel3 none
enable_mix_luminance false
name Expression5
xpos -707
ypos 1332
}
Dot {
name Dot1
xpos -673
ypos 1382
}
Dissolve {
inputs 2
channels rgb
which {{luminance}}
name Dissolve2
xpos -612
ypos 1379
}
Dot {
name Dot59
xpos -578
ypos 1497
}
push $N5b87d040
push $N5b16da00
Dot {
name Dot57
xpos -474
ypos 1337
}
Expression {
temp_name0 L
temp_expr0 r+g+b
expr0 "L == 0 ? 0.5 : r/L"
expr1 "L == 0 ? 0.5 : g/L"
expr2 "L == 0 ? 0.5 : b/L"
channel3 none
enable_mix_luminance false
name Expression8
xpos -508
ypos 1355
}
Blur {
inputs 1+1
size 12
mix 0.5
name Blur4
xpos -508
ypos 1394
disable {{(1-fix_artifacts*median)}}
}
push $N5b974ef0
Expression {
temp_name0 L
temp_expr0 r+g+b
expr0 "L == 0 ? 0.5 : r/L"
expr1 "L == 0 ? 0.5 : g/L"
expr2 "L == 0 ? 0.5 : b/L"
channel3 none
enable_mix_luminance false
name Expression6
xpos -809
ypos 1332
}
Dot {
name Dot58
xpos -775
ypos 1473
}
Dissolve {
inputs 2
channels rgb
which {{chrominance}}
name Dissolve3
xpos -508
ypos 1470
}
Merge2 {
inputs 2
operation multiply
Achannels rgb
Bchannels rgb
output rgb
name Merge23
xpos -508
ypos 1494
}
Dot {
name Dot60
xpos -474
ypos 1542
}
set N5b004640 [stack 0]
push $N5b97a8d0
Dot {
name Dot61
xpos -885
ypos 1314
}
Merge2 {
inputs 2
operation minus
Achannels rgb
Bchannels rgb
output rgb
name Merge24
xpos -919
ypos 1539
}
Dot {
name Dot62
xpos -885
ypos 1563
}
push $N5b004640
Switch {
inputs 3
which {{(node_output)*(1-preview_mask)+preview_mask*2}}
name Switch5
xpos -508
ypos 1560
}
Merge2 {
inputs 2
operation copy
Achannels rgb
Bchannels rgb
output rgb
name Merge4
xpos -508
ypos 1584
disable {{"1-(disable == 2)"}}
}
Output {
name Output1
xpos -508
ypos 1608
}
end_group
push $cut_paste_input
Group {
name WaveletBlur
tile_color 0x1f00ffff
selected true
xpos 42717
ypos -2940
addUserKnob {20 User l General}
addUserKnob {26 info_header l "" +STARTLINE T "Wavelet Blur \nby Mads Hagbarth Lund 2015 - www.hagbarth.net"}
addUserKnob {41 useGPUIfAvailable l "Use GPU if available" T BlinkScript3.useGPUIfAvailable}
addUserKnob {26 ""}
addUserKnob {41 range l "Frequency Range" T Controller.range}
addUserKnob {26 ""}
addUserKnob {4 Algorithm M {"Edge Preserving" Gaussian}}
addUserKnob {7 BlurSize l "Blur Size"}
BlurSize 0.84
addUserKnob {7 EdgeThreshold l "Edge Threshold"}
EdgeThreshold 0.08
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0xf3f3f3ff
xpos 599
ypos 601
bdwidth 122
bdheight 147
}
BackdropNode {
inputs 0
name BackdropNode2
tile_color 0xf3f3f3ff
xpos 472
ypos 602
bdwidth 125
bdheight 388
}
BackdropNode {
inputs 0
name BackdropNode3
tile_color 0xf3f3f3ff
xpos 358
ypos 741
bdwidth 125
bdheight 388
}
Input {
inputs 0
name InputMask
xpos 583
ypos 1317
number 1
}
Input {
inputs 0
name Input1
xpos 427
ypos 340
}
Dot {
name Dot3
xpos 461
ypos 438
}
set N59e20c80 [stack 0]
Grade {
gamma 5
black_clamp false
name Grade7
xpos 427
ypos 517
}
Dot {
name Dot15
xpos 461
ypos 595
}
set N59e384c0 [stack 0]
Dot {
name Dot20
xpos 461
ypos 734
}
set N59e3de60 [stack 0]
Dot {
name Dot21
xpos 351
ypos 734
}
push $N59e3de60
Blur {
size {{parent.Controller.range.A*100}}
name Blur5
xpos 427
ypos 823
}
set C59e491a0 [stack 0]
set N59e491a0 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge9
xpos 317
ypos 829
}
Dot {
name Dot16
xpos 351
ypos 1125
}
push $N59e384c0
Dot {
name Dot19
xpos 593
ypos 595
}
set N59e6f5c0 [stack 0]
Dot {
name Dot23
xpos 718
ypos 595
}
Blur {
size {{parent.BlurSize*50}}
name Blur7
xpos 684
ypos 661
}
Dot {
name Dot27
xpos 718
ypos 743
}
push $N59e6f5c0
BlinkScript {
recompileCount 3
ProgramGroup 1
KernelDescription "2 \"SaturationKernel\" iterate pixelWise 395e3a3b2514398fbe769be874921fe9db9395d0bc5cc92a7bd3c6ab150f5430 2 \"src\" Read Random \"dst\" Write Point 3 \"FilterSize\" Int 1 DwAAAA== \"PositionalSigma\" Float 1 AAAgQQ== \"ColorSigma\" Float 1 zczMPQ== 3 \"MSIZE\" 1 1 \"SIGMA\" 1 1 \"BSIGMA\" 1 1 1 \"coefficients\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA=="
kernelSource "//Port of mrharicot's bilateral implamentation.\n\nkernel SaturationKernel : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    int MSIZE; // This parameter is made available to the user.\n    float SIGMA;\n    float BSIGMA;\n\n  local:\n    float3 coefficients;  // This local variable is not exposed to the user.\n\n  // In define(), parameters can be given labels and default values.\n  void define() \{\n    defineParam(MSIZE, \"FilterSize\", 15);\n    defineParam(SIGMA, \"PositionalSigma\", 10.0f);\n    defineParam(BSIGMA, \"ColorSigma\", 0.1f);    \n  \}\n\nfloat normpdf(float x, float sigma)\n\{\n  return 0.39894f*exp(-0.5f*x*x/(sigma*sigma))/sigma;\n\}\n\nfloat normpdf3(float3 v, float sigma)\n\{\n  return 0.39894f*exp(-0.5f*dot(v,v)/(sigma*sigma))/sigma;\n\}\n\n  void process(int2 pos) \{\n  float4 ss = src(pos.x,pos.y);\n  float3 c = float3(ss.x,ss.y,ss.z);\n   \n\n    const int kSize = (MSIZE-1)/2;\n\n    float kernelB\[100];\n    float3 final_colour = float3(0.0);\n    \n\n    float Z = 0.0;\n    for (int j = 0; j <= kSize; ++j)\n    \{\n      kernelB\[kSize+j] = kernelB\[kSize-j] = normpdf(float(j), SIGMA);\n    \}\n    \n    \n    float3 cc;\n    float factor;\n    float bZ = 1.0f/normpdf(0.0f, BSIGMA);\n    for (int i=-kSize; i <= kSize; ++i)\n    \{\n      for (int j=-kSize; j <= kSize; ++j)\n      \{\n        ss = src(pos.x+i,pos.y+j);\n        cc = float3(ss.x,ss.y,ss.z);\n        factor = normpdf3(cc-c, BSIGMA)*bZ*kernelB\[kSize+j]*kernelB\[kSize+i];\n        Z += factor;\n        final_colour += factor*cc;\n\n      \}\n    \}    \n    final_colour = final_colour/Z;\n    dst() = float4(final_colour.x,final_colour.y,final_colour.z, 1.0f);\n  \}\n\};\n"
rebuild ""
SaturationKernel_FilterSize {{parent.BlurSize*50}}
SaturationKernel_ColorSigma {{(parent.EdgeThreshold/2)+0.00000000001}}
rebuild_finalise ""
name BlinkScript3
selected true
xpos 559
ypos 647
}
Switch {
inputs 2
which {{parent.Algorithm}}
name Switch2
xpos 559
ypos 739
}
clone $C59e491a0 {
xpos 559
ypos 823
selected false
}
Dot {
name Dot24
xpos 593
ypos 909
}
set N59eba060 [stack 0]
Dot {
name Dot25
xpos 733
ypos 909
}
push $N59eba060
Blur {
size {{(parent.Controller.range.B*100)-(parent.Controller.range.A*100)}}
name Blur6
xpos 559
ypos 975
}
set C59ec50c0 [stack 0]
Merge2 {
inputs 2
operation minus
name Merge14
xpos 699
ypos 981
}
Dot {
name Dot22
xpos 733
ypos 1053
}
push $N59e491a0
Dot {
name Dot17
xpos 461
ypos 907
}
clone $C59ec50c0 {
xpos 427
ypos 973
selected false
}
Merge2 {
inputs 2
operation plus
name Merge12
xpos 427
ypos 1049
}
Merge2 {
inputs 2
operation plus
name Merge13
xpos 427
ypos 1121
}
Grade {
gamma {{1/parent.Grade7.gamma}}
black_clamp false
name Grade8
xpos 427
ypos 1193
}
push $N59e20c80
Dot {
name Dot2
xpos 120
ypos 438
}
Dot {
name Dot1
xpos 120
ypos 1321
}
Merge2 {
inputs 2+1
operation copy
name Merge1
xpos 427
ypos 1317
}
Output {
name Output1
xpos 427
ypos 1427
}
Keyer {
inputs 0
operation "luminance key"
range {0.03182369132 0.8689237646 1 1}
name Controller
xpos 183
ypos 819
}
end_group
push $cut_paste_input
Group {
name MotionBlurPaint
onCreate "n = nuke.thisNode()\nn\['format'].setFlag(nuke.DISABLED)"
tile_color 0xcc804e00
note_font "Verdana Bold"
selected true
xpos 42716
ypos -3023
addUserKnob {20 Parameters}
addUserKnob {26 instructions l "" +STARTLINE T "<i>Click the button 'Select brush' below to select the right brush.<br/> Paint on the image to apply the motion blur<br/>\nClose the 'Paint' Tab to disable the node with D key"}
addUserKnob {26 ""}
addUserKnob {26 output_1_1 l "<b><font color=\"dodgerblue\">OUTPUT"}
addUserKnob {41 channels T VectorBlur9.channels}
addUserKnob {41 format T Constant1.format}
addUserKnob {6 img_format l "format from img" -STARTLINE}
img_format true
addUserKnob {7 overscan R 0 100}
addUserKnob {26 ""}
addUserKnob {4 output t "Select which output you want to have: the final result with the distortion or the Vector Map" M {"Final Result" Vector "" "" "" "" "" "" "" ""}}
addUserKnob {26 ""}
addUserKnob {26 motion_blur l "<b><font color=\"sandybrown\">MOTION BLUR" T ""}
addUserKnob {41 scale l "motion amount" T VectorBlur9.scale}
addUserKnob {41 offset l "shutter offset" T VectorBlur9.offset}
addUserKnob {41 grow_bbox l "expand bbox" T VectorBlur9.grow_bbox}
addUserKnob {41 constant l "uv offset" T VectorBlur9.constant}
addUserKnob {41 method T VectorBlur9.method}
addUserKnob {26 line l "" +STARTLINE +HIDDEN}
addUserKnob {26 ""}
addUserKnob {22 move l "<font color=\"tomato\">Select brush" t "Select automatically the right brush" T "n = nuke.thisNode()\nn\['toolbox'].setValue(0)\nn\['toolbox'].setValue(25)" +STARTLINE}
addUserKnob {6 check l "check painting" t "Use the checkerboard to check your paint" -STARTLINE}
addUserKnob {41 size l smooth t "Smooth the paint" T Blur1.size}
addUserKnob {26 paint l "<b><font color=\"lightgreen\">PAINT"}
addUserKnob {20 paints l "" +STARTLINE n 1}
addUserKnob {41 opacity l INVISIBLE +INVISIBLE T RotoPaint.opacity}
addUserKnob {41 toolbar_opacity l opacity T RotoPaint.toolbar_opacity}
addUserKnob {41 brush_hardness l "brush hardness" T RotoPaint.brush_hardness}
addUserKnob {41 brush_spacing l "brush spacing" T RotoPaint.brush_spacing}
addUserKnob {26 ""}
addUserKnob {41 opacity_1 l opacity T RotoPaint.opacity}
addUserKnob {41 lifetime_type l "lifetime type" T RotoPaint.lifetime_type}
addUserKnob {41 lifetime_start l from -STARTLINE T RotoPaint.lifetime_start}
addUserKnob {41 lifetime_end l to -STARTLINE T RotoPaint.lifetime_end}
addUserKnob {41 toolbox l "" +STARTLINE T RotoPaint.toolbox}
addUserKnob {41 curves l "" -STARTLINE T RotoPaint.curves}
addUserKnob {20 endGroup n -1}
addUserKnob {26 ""}
addUserKnob {41 maskChannelMask l mask -STARTLINE T VectorBlur9.maskChannelMask}
addUserKnob {41 invert_mask l invert -STARTLINE T VectorBlur9.invert_mask}
addUserKnob {26 ""}
addUserKnob {41 mix T VectorBlur9.mix}
addUserKnob {20 "" l Transform}
addUserKnob {41 transform T RotoPaint.transform}
addUserKnob {41 translate T RotoPaint.translate}
addUserKnob {41 rotate T RotoPaint.rotate}
addUserKnob {41 scale_1 l scale T RotoPaint.scale}
addUserKnob {41 skewX l "skew X" T RotoPaint.skewX}
addUserKnob {41 skewY l "skew Y" T RotoPaint.skewY}
addUserKnob {41 skew_order l "skew order" T RotoPaint.skew_order}
addUserKnob {41 center T RotoPaint.center}
addUserKnob {20 "extra matrix" n 2}
"extra matrix" 1
addUserKnob {41 transform_matrix l "" -STARTLINE T RotoPaint.transform_matrix}
addUserKnob {20 "" n -1}
addUserKnob {20 email l @}
addUserKnob {26 message l "" +STARTLINE T "<b><font color=\"SandyBrown\">MotionBlur Paint v1.0</font></b><br>\n<font size=“1”><i>by Andrea Geremia</i><br>\n<br>\nandrea.geremia89@gmail.com<br>\nwww.andreageremia.it</font>"}
}
Constant {
inputs 0
channels rgb
format "2048 2048 0 0 2048 2048 1 square_2K"
name Constant1
xpos -178
ypos -455
}
Input {
inputs 0
name img
xpos 178
ypos -568
}
Dot {
name Dot10
xpos 212
ypos -522
}
set N5a098b80 [stack 0]
Remove {
name Remove1
xpos -7
ypos -529
}
Switch {
inputs 2
which {{!parent.img_format}}
name Switch_Format
label "\[value which]"
xpos -7
ypos -437
}
AdjBBox {
numpixels {{parent.overscan}}
name AdjBBox1
xpos -7
ypos -362
}
Expression {
expr0 x
expr1 y
expr2 0
expr3 1
name Expression6
xpos -7
ypos -314
}
Dot {
name Dot8
xpos 22
ypos -268
}
set N5a0c8520 [stack 0]
Dot {
name Dot3
xpos 23
ypos -107
}
set N5a0cdec0 [stack 0]
push $N5a0c8520
Dot {
name Dot9
xpos -125
ypos -268
}
set N5a0d3940 [stack 0]
RotoPaint {
cliptype none
curves {{{v x3f99999a}

  {f 0}

  {n

   {layer Root

    {f 2097664}

    {t x4493a000 x440b8000}

    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}}}}}
toolbox {dodge {
  { selectAll bs 1000 h 1 src 1 str 1 ssx 1 ssy 1 sf 1 ep1 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush bs 180 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1034 ltm 1034 tt 17 }
  { eraser bs 86.2 src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1033 ltm 1033 tt 18 }
  { clone opc 0.1 bs 44.8 src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 19 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 21 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 22 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 ep1 5 tt 23 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 tt 24 }
  { smear bs 1000 h 1 src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 2 ltm 2 tt 25 }
} }
toolbar_blending_mode color-dodge
toolbar_brush_hardness 0.200000003
toolbar_lifetime_type single
toolbar_paint_source fg
toolbar_source_transform_scale {1 1}
toolbar_source_transform_center {2048 1152}
colorOverlay {0 0 0 0}
paint_source foreground
lifetime_start 2
lifetime_end 2
view {}
motionblur_on true
motionblur_shutter_offset_type centred
brush_type smear
brush_size 1000
brush_spacing 0.05000000075
brush_hardness 1
effect_parameter1 1
source_black_outside true
name RotoPaint
xpos -154
ypos -226
}
set N5a0d99a0 [stack 0]
push $N5a0d3940
Dot {
name Dot2
xpos -364
ypos -265
}
Difference {
inputs 2
gain 1000000
name Difference1
xpos -398
ypos -230
}
Dilate {
channels alpha
size {{parent.Blur1.size}}
name Dilate1
label "\[value size]"
xpos -398
ypos -149
}
push $N5a0d99a0
Blur {
inputs 1+1
channels rgb
name Blur1
label "\[value size]"
xpos -154
ypos -144
}
CopyBBox {
inputs 2
name CopyBBox1
xpos -153
ypos -21
}
push $N5a0cdec0
Merge2 {
inputs 2
operation from
name Merge1
xpos -10
ypos -21
}
set N59f84d60 [stack 0]
Dot {
name Dot1
xpos 23
ypos 197
}
Input {
inputs 0
name mask
xpos 388
ypos -31
number 1
}
Dot {
name Dot7
xpos 417
ypos 52
}
push $N59f84d60
CheckerBoard2 {
inputs 0
format {{{parent.input.format}}}
name CheckerBoard1
selected true
xpos 306
ypos -379
}
push $N5a098b80
Switch {
inputs 2
which {{parent.check}}
name Switch1
label "\[value which]"
xpos 179
ypos -361
}
Copy {
inputs 2
from0 rgba.red
to0 forward.u
from1 rgba.green
to1 forward.v
name Copy28
xpos 179
ypos -30
}
VectorBlur {
inputs 1+1
channels rgba
uv forward
name VectorBlur9
xpos 179
ypos 53
}
Remove {
operation keep
channels rgba
name Remove2
xpos 179
ypos 107
}
Switch {
inputs 2
which {{parent.output}}
name Switch_output
label "\[value which]"
xpos 179
ypos 193
}
Output {
name Output1
xpos 179
ypos 279
}
end_group
push $cut_paste_input
Group {
name DirectionalBlur
tile_color 0xcc804eff
note_font "Lucida Grande Bold"
note_font_color 0xffffffff
selected true
xpos 42716
ypos -3063
addUserKnob {20 DirectionalBlur}
addUserKnob {41 channels T MergeKeymix.also_merge}
addUserKnob {26 ""}
addUserKnob {4 type l Type M {Blur Defocus}}
type Defocus
addUserKnob {4 filter -STARTLINE M {Impulse Cubic Keys Simon Rifman Mitchell Parzen Notch Lanczos4 Lancsos6 Sinc4 ""}}
filter Cubic
addUserKnob {6 clampNeg l "Clamp Negatives (if changing filters)" +STARTLINE}
addUserKnob {6 blackOutsideBefore l "Black Outside Before Rotation" +STARTLINE}
blackOutsideBefore true
addUserKnob {7 rotate l Rotate R -180 180}
addUserKnob {7 size l Size R 0 100}
size 25
addUserKnob {7 additionalBlur l "Perpendicular Blur" R 0 100}
addUserKnob {26 ""}
addUserKnob {4 bbox l "Set BBox to" M {Union "Mask Intersect" B "Input Format" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {14 adjustBBox l "Adjust BBox" R 0 100}
addUserKnob {26 ""}
addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
addUserKnob {41 mix T MergeKeymix.mix}
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Name: t "Add description and tooltip for gizmo" T DirectionalBlur}
addUserKnob {26 ver l Version: T v04}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x535e5a00
label "BBox Management"
note_font_size 30
note_font_color 0xffffffff
xpos -930
ypos 381
bdwidth 538
bdheight 628
}
Input {
inputs 0
name Input
xpos 0
ypos -515
}
Dot {
name Dot1
note_font_size 41
xpos 34
ypos -421
}
set N71fc4b70 [stack 0]
Dot {
name Dot20
note_font_size 41
xpos -135
ypos -421
}
set N71fca200 [stack 0]
Dot {
name Dot22
note_font_size 41
xpos -135
ypos 31
}
set N71fcfb90 [stack 0]
AdjBBox {
numpixels {{ceil((parent.BBoxCalculator.widthResult*1.5)+(parent.BBoxCalculator.widthResult/4))} {ceil(parent.BBoxCalculator.heightResult*1.5)+(parent.BBoxCalculator.heightResult/4)}}
name AdjBBoxSizeRotated
xpos -169
ypos 87
}
AdjBBox {
numpixels {{ceil((parent.additionalBlurBBoxCalculator.widthResult*1.5)+(parent.additionalBlurBBoxCalculator.widthResult/4))} {ceil((parent.additionalBlurBBoxCalculator.heightResult*1.5)+(parent.additionalBlurBBoxCalculator.heightResult/4))}}
name AdjBBoxAdditionalBlurRotated
xpos -169
ypos 141
}
AdjBBox {
numpixels {{"ceil(max(input.format.w, input.format.h)*.0025)"}}
name AdjBBoxExtra
xpos -169
ypos 187
}
Dot {
name Dot21
note_font_size 41
xpos -135
ypos 254
}
push $N71fcfb90
push $N71fc4b70
Transform {
rotate {{parent.rotate}}
center {{input.width/2} {input.height/2}}
filter {{parent.filter}}
black_outside {{parent.blackOutsideBefore}}
name Transform1
xpos 0
ypos -351
}
Dot {
name Dot125
xpos 34
ypos -293
}
set N72006550 [stack 0]
Dot {
name Dot126
xpos 170
ypos -293
}
Defocus {
defocus {{parent.Blur28.size.w}}
scale {1 1e-05}
name Defocus6
xpos 136
ypos -256
}
Dot {
name Dot127
xpos 170
ypos -199
}
push $N72006550
Blur {
size {{parent.size} 0}
crop false
name Blur28
label "\[value size]"
xpos 0
ypos -261
}
Switch {
inputs 2
which {{parent.type}}
name BlurType
xpos 0
ypos -202
}
Blur {
size {0 {parent.additionalBlur}}
crop false
name Blur1
label "\[value size]"
xpos 0
ypos -161
}
Transform {
rotate {{-parent.Transform1.rotate}}
center {{parent.Transform1.center} {parent.Transform1.center}}
filter {{parent.filter}}
black_outside false
name Transform2
xpos 0
ypos -99
}
Clamp {
maximum_enable false
name Clamp1
xpos 0
ypos -39
disable {{!clampNeg}}
}
Switch {
inputs 2
which 1
name Switch1
xpos 0
ypos 28
disable {{"size == 0 && additionalBlur == 0 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBox1
xpos 0
ypos 251
}
Dot {
name Dot17
label A
note_font_size 41
xpos 34
ypos 344
}
Dot {
name Dot7
note_font_size 41
xpos 34
ypos 443
}
set N72083410 [stack 0]
Dot {
name Dot12
note_font_size 41
xpos -516
ypos 443
}
Crop {
box {{-adjustBBox.w} {-adjustBBox.h} {parent.width+adjustBBox.w} {parent.height+adjustBBox.h}}
intersect true
crop false
name CopyBBoxFormat
xpos -550
ypos 711
}
Dot {
name Dot16
note_font_size 41
xpos -516
ypos 759
}
push $N71fca200
Dot {
name Dot2
note_font_size 41
xpos -768
ypos -421
}
Dot {
name Dot18
label B
note_font_size 41
xpos -768
ypos 323
}
Dot {
name Dot11
note_font_size 41
xpos -768
ypos 512
}
set N720aaa60 [stack 0]
Dot {
name Dot8
note_font_size 41
xpos -864
ypos 512
}
Dot {
name Dot15
note_font_size 41
xpos -864
ypos 711
}
push $N720aaa60
Input {
inputs 0
name Inputmask
xpos 346
ypos 202
number 1
}
Dot {
name Dot5
label Mask
note_font_size 41
xpos 380
ypos 332
}
set N71ec1090 [stack 0]
Dot {
name Dot10
note_font_size 41
xpos 270
ypos 332
}
push $N72083410
Merge2 {
inputs 2
bbox intersection
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
name MergeIntersection
xpos 236
ypos 436
disable {{"!\[exists parent.input1]"}}
}
Merge2 {
inputs 2
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
name MergeUnion
xpos 236
ypos 505
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot6
label "intersection\nof (Mask and A) + B"
note_font_size 14
note_font_color 0xffffffff
xpos 270
ypos 669
}
push $N71ec1090
Dot {
name Dot4
note_font_size 41
xpos 380
ypos 564
}
push $N72083410
push $N720aaa60
Dot {
name Dot3
note_font_size 41
xpos -768
ypos 564
}
set N71efb620 [stack 0]
Merge2 {
inputs 2+1
operation copy
Achannels none
Bchannels none
output none
also_merge rgba
name MergeKeymix
xpos 0
ypos 557
}
Dot {
name Dot14
note_font_size 41
xpos 34
ypos 623
}
set N71f12b70 [stack 0]
push $N71efb620
CopyBBox {
inputs 2
name CopyBBoxUnion
xpos -802
ypos 620
disable {{parent.bbox==0?0:1}}
}
CopyBBox {
inputs 2
name CopyBBoxIntersection
xpos -802
ypos 666
disable {{"parent.bbox==1 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBoxB
xpos -802
ypos 708
disable {{"parent.bbox==2 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBoxFormatIntersect
xpos -802
ypos 756
disable {{"parent.bbox==3 ? 0 : 1"}}
}
AdjBBox {
numpixels {{parent.adjustBBox.w} {parent.adjustBBox.h}}
name AdjBBox
xpos -802
ypos 805
disable {{"parent.bbox==4 ? 1 : 0"}}
}
Dot {
name Dot9
note_font_size 41
xpos -768
ypos 910
}
push $N71f12b70
CopyBBox {
inputs 2
name CopyBBox
xpos 0
ypos 906
}
BlackOutside {
name BlackOutside1
xpos 0
ypos 930
disable {{!parent.blackOutside}}
}
Output {
name Output1
xpos 0
ypos 1029
}
NoOp {
inputs 0
name BBoxCalculator
xpos -310
ypos 85
addUserKnob {20 User}
addUserKnob {7 angle l Angle R -180 180}
angle {{parent.rotate}}
addUserKnob {7 length l Length R 0 100}
length {{parent.size}}
addUserKnob {7 widthResult l "Width Result"}
widthResult {{abs(cos(radians(angle))*length)}}
addUserKnob {7 heightResult l "Height Result"}
heightResult {{abs(sin(radians(angle))*length)}}
}
NoOp {
inputs 0
name additionalBlurBBoxCalculator
xpos -317
ypos 143
addUserKnob {20 User}
addUserKnob {7 angle l Angle R -180 180}
angle {{parent.rotate}}
addUserKnob {7 length l Length R 0 100}
length {{parent.additionalBlur}}
addUserKnob {7 widthResult l "Width Result"}
widthResult {{abs(sin(radians(angle))*length)}}
addUserKnob {7 heightResult l "Height Result"}
heightResult {{abs(cos(radians(angle))*length)}}
}
end_group
push $cut_paste_input
Group {
name ExponBlurSimple
onCreate "n = nuke.thisNode()\nn.knob('size').setRange(-100, 100)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n        \n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n        \nelif k.name() == \"steps\":\n    \n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n        \n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n        \n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('mult').getValue()\n        \n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, b1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"all\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression(\"(Blur1.size)*(mult)**%s\"%(i))\n            b\[\"label\"].setValue(\"\[value size]\")\n            merge.setInput(i if i<2 else i+1, b)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n            \n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n            \nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n        \nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n        \n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n            \nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n        \nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
tile_color 0xcc804eff
label "(\[value output2])"
note_font "Verdana Bold"
note_font_color 0xffffffff
selected true
xpos 42720
ypos -3135
addUserKnob {20 ExponBlurSimple}
addUserKnob {41 channels T Remove1.channels}
addUserKnob {41 maskChannelMask_1 l area T Multiply1.maskChannelMask}
addUserKnob {41 inject_1 l inject -STARTLINE T Multiply1.inject}
addUserKnob {41 invert_mask_1 l invert -STARTLINE T Multiply1.invert_mask}
addUserKnob {41 fringe_1 l fringe -STARTLINE T Multiply1.fringe}
addUserKnob {26 ""}
addUserKnob {4 output2 l Operation: M {Screen Plus Over Hypot Average Max Min "" "" "" "" ""}}
addUserKnob {3 steps l "  Steps" -STARTLINE}
steps 4
addUserKnob {26 text l " " -STARTLINE T " "}
addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
includeOriginal true
addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
addUserKnob {14 size l Size R -100 100}
size 2
addUserKnob {7 mult l Multiplier R 1 5}
mult 2
addUserKnob {6 clamp +STARTLINE}
addUserKnob {14 postBlur l "Post Blur" R 0 100}
addUserKnob {26 ""}
addUserKnob {20 bboxControl l "BBox Control" n 1}
bboxControl 0
addUserKnob {26 text_2 l " " T " "}
addUserKnob {4 bbox l "BBox: " -STARTLINE M {union intersectionMask A B "input format" "" "" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
safeBBox true
addUserKnob {26 safeBBoxText l "" +STARTLINE T " "}
addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer  " -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
safetyBBoxMethod percent
addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
safeBBoxPixels 100
addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
safeBBoxPercent 1.1
addUserKnob {26 text_3 l "" +STARTLINE T " "}
addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
adjustBBoxPercent 1
addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
addUserKnob {26 ""}
addUserKnob {20 endGroup n -1}
addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
addUserKnob {41 mix T MergeKeymix.mix}
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "Tony Lyons"}
addUserKnob {26 desc l Description: T ExponBlurSimple}
addUserKnob {26 ver l Version: T v03}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x535e5a00
label "BBox Management"
note_font_size 30
note_font_color 0xffffffff
xpos -529
ypos 492
bdwidth 341
bdheight 525
}
Input {
inputs 0
name Inputimg
xpos 0
ypos -969
}
Dot {
name Dot16
note_font_size 41
xpos 34
ypos -802
}
set N72498320 [stack 0]
Dot {
name Dot2
note_font_size 41
xpos -367
ypos -802
}
Dot {
name Dot18
label B
note_font_size 41
xpos -367
ypos 434
}
Dot {
name Dot11
note_font_size 41
xpos -367
ypos 623
}
set N724a8e20 [stack 0]
Dot {
name Dot3
note_font_size 41
xpos -367
ypos 675
}
set N724ae750 [stack 0]
Dot {
name Dot8
note_font_size 41
xpos -463
ypos 675
}
Dot {
name Dot15
note_font_size 41
xpos -463
ypos 831
}
push $N72498320
Dot {
name Dot1
note_font_size 41
xpos 461
ypos -802
}
Remove {
operation keep
channels rgba
name Remove1
xpos 427
ypos -718
}
Dot {
name Dot21
note_font_size 41
xpos 461
ypos -597
}
set N722ce470 [stack 0]
Invert {
name Invert1
xpos 695
ypos -604
disable {{"parent.size < 0 ? 0 : 1"}}
}
set N722d3c70 [stack 0]
Dot {
name Dot4
note_font_size 41
xpos 540
ypos -543
}
NoOp {
name Original
xpos 506
ypos -327
}
set N722e5fa0 [stack 0]
Dot {
name Dot5
note_font_size 41
xpos 540
ypos 14
}
Crop {
inputs 0
box {{"!\[exists parent.input0] ? 0 : input.format.x"} {"!\[exists parent.input0] ? 0 : input.format.y"} {"!\[exists parent.input0] ? 0 : input.format.r"} {"!\[exists parent.input0] ? 0 : input.format.t"}}
reformat true
crop false
name Crop1
xpos 210
ypos -750
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
AddChannels {
channels rgba
name AddChannels2
xpos 210
ypos -724
}
push $N72498320
Merge2 {
inputs 2
name Merge3
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 83
ypos -671
}
NoOp {
name BBoxInput
xpos 83
ypos -628
addUserKnob {20 User}
addUserKnob {15 bbox}
bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
}
push $N722e5fa0
Input {
inputs 0
name Inputarea
xpos 289
ypos -638
number 2
}
AddChannels {
channels alpha
color 1
name AddChannels1
xpos 289
ypos -580
}
Invert {
channels rgba
name Invert3
xpos 289
ypos -503
}
push $N722d3c70
Multiply {
inputs 1+1
value 0
name Multiply1
label "\[value value]"
xpos 695
ypos -512
}
NoOp {
name Start
xpos 695
ypos -450
}
set N72348480 [stack 0]
Blur {
size {{(Blur1.size)*(mult)**3} {(Blur1.size)*(mult)**3}}
crop false
name Blur4
label "\[value size]"
xpos 995
ypos -370
}
push $N72348480
Blur {
size {{(Blur1.size)*(mult)**2} {(Blur1.size)*(mult)**2}}
crop false
name Blur3
label "\[value size]"
xpos 895
ypos -370
}
push 0
push $N72348480
Blur {
size {{(Blur1.size)*(mult)**1} {(Blur1.size)*(mult)**1}}
crop false
name Blur2
label "\[value size]"
xpos 795
ypos -370
}
push $N72348480
Blur {
size {{parent.size.w} {parent.size.h}}
name Blur1
label "\[value size]"
xpos 695
ypos -370
}
Merge2 {
inputs 5+1
operation {{mergeNumber.mergeNumber}}
also_merge all
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 695
ypos -273
}
NoOp {
name End
xpos 695
ypos -230
}
set N7239ca70 [stack 0]
CopyBBox {
inputs 2
name CopyBBox1
xpos 585
ypos -175
}
Group {
name BBoxToFormat
onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
tile_color 0xa57aaaff
note_font "Verdana Bold"
note_font_color 0xffffffff
xpos 585
ypos -151
addUserKnob {20 CropBBox}
addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
addUserKnob {41 intersect T Crop6.intersect}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
overscanType {{parent.safetyBBoxMethod}}
addUserKnob {14 overscan l Overscan R 0 400}
overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
addUserKnob {20 inputBbox l "BBox Data" n 1}
addUserKnob {15 inputFormat l "Input Format"}
inputFormat {0 0 {input.width} {input.height}}
addUserKnob {15 inputBBox l "Input BBox"}
inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
addUserKnob {15 outputBBox l "Output BBox"}
outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
addUserKnob {20 endGroup n -1}
addUserKnob {20 info_1 l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
addUserKnob {26 ver l Version: T v02}
}
Input {
inputs 0
name Input
xpos 261
ypos 394
}
Dot {
name Dot2
note_font_size 41
xpos 295
ypos 462
}
set N721c14d0 [stack 0]
Dot {
name Dot1
note_font_size 41
xpos -160
ypos 462
}
set N721c6ac0 [stack 0]
push $N721c14d0
Crop {
box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
crop {{parent.blackOutside}}
name Crop6
xpos 261
ypos 510
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
set N721cc4b0 [stack 0]
Remove {
operation keep
channels none
name Remove1
xpos 120
ypos 504
}
set N721d8a50 [stack 0]
Transform {
scale {{parent.overscanPercent} {parent.overscanPercent}}
center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
shutteroffset centred
name Transform1
selected true
xpos 120
ypos 553
}
push $N721d8a50
AdjBBox {
numpixels {{parent.overscan} {parent.overscan}}
name AdjBBox1
xpos -5
ypos 510
}
Switch {
inputs 2
which {{overscanType}}
name Switch2
label "\[value which]"
xpos -5
ypos 549
}
Merge2 {
inputs 2
bbox intersection
Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
name Merge1
xpos -5
ypos 647
disable {{!parent.Crop6.intersect}}
}
push $N721c6ac0
CopyBBox {
inputs 2
name CopyBBox1
xpos -194
ypos 653
}
BlackOutside {
name BlackOutside1
xpos -194
ypos 692
disable {{!parent.blackOutside}}
}
Dot {
name Dot4
note_font_size 41
xpos -160
ypos 769
}
push $N721cc4b0
Switch {
inputs 2
which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
name Switch1
label "\[value which]"
xpos 261
ypos 759
}
set N7222cb70 [stack 0]
Output {
name Output1
xpos 261
ypos 921
}
push $N7222cb70
NoOp {
name OutputBBox1
xpos 378
ypos 821
addUserKnob {20 User}
addUserKnob {15 OutputBBox l "Output BBox"}
OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
}
end_group
push $N7239ca70
Merge2 {
inputs 2
bbox intersection
also_merge all
name Merge4
xpos 585
ypos -127
}
push $N7239ca70
CopyBBox {
inputs 2
name CopyBBox2
xpos 585
ypos -101
}
push $N7239ca70
Switch {
inputs 2
which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
name Switch2
label "\[value which]"
xpos 695
ypos -106
}
Grade {
channels all
whitepoint 5
black_clamp false
name AverageMult
xpos 695
ypos -37
disable {{"output2 == 4 ? 0 : 1"}}
}
Merge2 {
inputs 2
operation max
also_merge all
name Merge2
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 695
ypos 10
disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
}
Clamp {
name Clamp1
selected true
xpos 695
ypos 50
disable {{!parent.clamp}}
}
Blur {
size {{postBlur} {postBlur}}
name BlurOriginal
label "\[value size]"
xpos 695
ypos 102
}
Invert {
name Invert2
xpos 695
ypos 144
disable {{"parent.size < 0 ? 0 : 1"}}
}
push $N722ce470
Switch {
inputs 2
which {{"parent.size == 0 ? 0 : 1"}}
name Switch1
label "\[value which]"
xpos 427
ypos 190
}
Dot {
name Dot17
label A
note_font_size 41
xpos 34
ypos 455
}
Dot {
name Dot7
note_font_size 41
xpos 34
ypos 579
}
set N720c4c60 [stack 0]
Dot {
name Dot12
note_font_size 41
xpos -260
ypos 579
}
Dot {
name Dot13
note_font_size 41
xpos -260
ypos 799
}
push $N724a8e20
Input {
inputs 0
name Inputmask
xpos 512
ypos 322
number 1
}
Dot {
name Dot19
label Mask
note_font_size 41
xpos 546
ypos 435
}
set N720db140 [stack 0]
Dot {
name Dot20
note_font_size 41
xpos 436
ypos 435
}
push $N720c4c60
Merge2 {
inputs 2
bbox intersection
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
name MergeIntersection
xpos 402
ypos 572
disable {{"!\[exists parent.input1]"}}
}
Merge2 {
inputs 2
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
name MergeUnion
xpos 402
ypos 610
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot6
label "intersection\nof (Mask and A) + B"
note_font_size 14
note_font_color 0xffffffff
xpos 436
ypos 770
}
push $N720db140
Dot {
name Dot10
note_font_size 41
xpos 546
ypos 672
}
push $N720c4c60
push $N724ae750
Merge2 {
inputs 2+1
operation copy
Achannels none
Bchannels none
output none
also_merge {{{parent.Remove1.channels}}}
name MergeKeymix
xpos 0
ypos 665
}
Dot {
name Dot14
note_font_size 41
xpos 34
ypos 747
}
set N721275b0 [stack 0]
push $N724ae750
CopyBBox {
inputs 2
name CopyBBoxUnion
xpos -401
ypos 743
disable {{parent.bbox==0?0:1}}
}
CopyBBox {
inputs 2
name CopyBBoxIntersection
xpos -401
ypos 769
disable {{"parent.bbox==1 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBoxA
xpos -401
ypos 795
disable {{"parent.bbox==2 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBoxB
xpos -401
ypos 827
disable {{"parent.bbox==3 ? 0 : 1"}}
}
Crop {
box {0 0 {parent.width} {parent.height}}
crop false
name CopyBBoxFormat
xpos -401
ypos 853
disable {{"parent.bbox==4 ? 0 : 1"}}
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
set N7214f7f0 [stack 0]
Transform {
scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
black_outside false
shutteroffset centred
name TransformBBoxAdjustPercent
xpos -516
ypos 898
}
push $N7214f7f0
AdjBBox {
numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
name AdjBBoxPixels
xpos -401
ypos 901
}
Switch {
inputs 2
which {{adjustBBoxExtra}}
name Switch3
xpos -401
ypos 940
}
Dot {
name Dot9
note_font_size 41
xpos -367
ypos 993
}
push $N721275b0
CopyBBox {
inputs 2
name CopyBBox
xpos 0
ypos 989
}
BlackOutside {
name BlackOutside1
xpos 0
ypos 1015
disable {{!parent.blackOutside}}
}
Output {
name Output1
xpos 0
ypos 1155
}
NoOp {
inputs 0
name mergeNumber
xpos 229
ypos -862
addUserKnob {20 User}
addUserKnob {3 mergeNumber}
mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
}
push $N7239ca70
NoOp {
name BBoxResult
xpos 585
ypos -230
addUserKnob {20 User}
addUserKnob {15 bbox}
bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
}
end_group
push $cut_paste_input
Group {
name Glow_Exponential
help "Exponential Glow node, with options to recolor and adjust falloff."
knobChanged "\nk = nuke.thisKnob()\nif k.name()=='crop':\n    if k.value():\n        nuke.thisNode().knob('overscan').setEnabled(True)\n    else:\n        nuke.thisNode().knob('overscan').setEnabled(False)\n"
tile_color 0xc97200ff
selected true
xpos 42715
ypos -3195
addUserKnob {20 ge l Glow}
addUserKnob {26 glow_ctrls l "@b;Glow:"}
addUserKnob {7 size t "Size of the glow" R 0 100}
size 10
addUserKnob {7 intensity t "Brightness of the Glow" R 0 10}
intensity 1
addUserKnob {7 falloff t "Adjust the light falloff of the glow. Higher values will have a longer falloff, resulting in visually bigger glows."}
falloff 0.75
addUserKnob {26 glow_highlights l "@b;Highlights:"}
addUserKnob {41 range t "Luma key to define which parts of the image will glow." T Keyer1.range}
addUserKnob {26 glow_colors l "@b;Glow Colors:"}
addUserKnob {7 saturation l "color from img" t "By default the glow takes on the colors of the plate. By using this knob you can desaturate the color of the glow."}
saturation 1
addUserKnob {18 core_color l "core re-color" t "Re-color the core of the glow. Use the core threshold to define which parts of the glow are core or falloff."}
core_color {1 1 1}
addUserKnob {6 core_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 falloff_color l "falloff re-color" t "Re-color the falloff of the glow. Use the core threshold to define which parts of the glow are core or falloff."}
falloff_color {1 1 1}
addUserKnob {6 falloff_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {7 threshold l "core threshold" t "Define which parts of the glow are core or falloff."}
threshold 1
addUserKnob {26 glow_options l "@b;Options:"}
addUserKnob {14 aspect l "aspect ratio" t "Set the aspect ratio for your glow. Streaky results can be obtained by changing the ratio here." R 0 100}
aspect {1 1}
addUserKnob {6 glow_only l "Glow only" t "By default the glow is added onto the plate. Checking this box will output the glow only. " +STARTLINE}
addUserKnob {6 crop l "Crop to Format" t "This glow can expand the bounding box to massive values, checking this box can prevent your bbox from getting unmanageable." +STARTLINE}
crop true
addUserKnob {7 overscan l "overscan (%)" t "If you are cropping to format but originally had some values outside the format, you can add some overscan here to preserve these. The values are a percentage of the format size." R 0 100}
overscan 10
addUserKnob {7 mix t "Mix back with the original plate (or black, if glow only is enabled)"}
mix 1
addUserKnob {26 ""}
addUserKnob {26 spin_copyright l "" t "© <b>SPIN<span style=\"color:#b32026\">VFX</span></b>\nGlow_Exponential\nVersion 1.0\n2017" +STARTLINE T "<span style=\"color:#aaa;font-family:sans-serif;font-size:8pt\"><b>SPIN<span style=\"color:#b32026\">VFX</span></b> - Version 1.0 - 2017 - <a href=\"https://github.com/SpinVFX/spin_nuke_gizmos/\" style=\"color:#aaa\">Github Page</a></span>"}
}
Input {
inputs 0
name img
xpos 0
ypos -59
}
Dot {
name Dot1
tile_color 0xcccccc00
xpos 34
ypos 50
}
set N72716050 [stack 0]
Dot {
name Dot24
tile_color 0xcccccc00
xpos 34
ypos 1274
}
set N7271b480 [stack 0]
Input {
inputs 0
name mask
xpos 136
ypos 158
number 1
}
push $N72716050
NoOp {
name CTRL
xpos 304
ypos 46
addUserKnob {20 User}
addUserKnob {7 falloff R 0 2}
falloff {{"max(parent.falloff/2+0.5, 0.0001)"}}
addUserKnob {7 falloff_intensity}
falloff_intensity {{falloff+pow(falloff,2)+pow(falloff,3)+pow(falloff,4)+pow(falloff,5)+pow(falloff,6)+pow(falloff,7)+pow(falloff,8)+pow(falloff,9)+pow(falloff,10)}}
addUserKnob {14 size R 0 100}
size {{parent.size/20*parent.aspect.w} {parent.size/20*parent.aspect.h}}
addUserKnob {7 intensity}
intensity {{parent.intensity/falloff_intensity}}
addUserKnob {7 core R 0 2}
core {{threshold}}
addUserKnob {7 core_length}
core_length {{sqrt(pow(core_color.r,2)+pow(core_color.g,2)+pow(core_color.b,2))/sqrt(3)}}
addUserKnob {7 falloff_length}
falloff_length {{sqrt(pow(falloff_color.r,2)+pow(falloff_color.g,2)+pow(falloff_color.b,2))/sqrt(3)}}
}
Keyer {
operation "luminance key"
name Keyer1
xpos 304
ypos 98
}
ChannelMerge {
inputs 2
operation in
name ChannelMerge1
xpos 304
ypos 146
disable {{"!\[exists parent.input1] "}}
}
Premult {
name Premult1
xpos 304
ypos 202
}
Remove {
operation keep
channels rgb
name Remove1
xpos 304
ypos 228
}
Multiply {
value {{parent.CTRL.intensity}}
name Multiplyer
xpos 304
ypos 263
}
Saturation {
saturation {{parent.saturation}}
name Saturation1
xpos 304
ypos 325
}
Dot {
name Dot3
tile_color 0x7aa9ff00
xpos 338
ypos 372
}
set N72774b00 [stack 0]
Dot {
name Dot2
tile_color 0x7aa9ff00
xpos 604
ypos 372
}
set N7277a320 [stack 0]
Dot {
name Dot4
tile_color 0x7aa9ff00
xpos 870
ypos 372
}
set N7277fcb0 [stack 0]
Dot {
name Dot5
tile_color 0x7aa9ff00
xpos 1136
ypos 372
}
set N72785640 [stack 0]
Dot {
name Dot6
tile_color 0x7aa9ff00
xpos 1402
ypos 372
}
set N7278afd0 [stack 0]
Dot {
name Dot7
tile_color 0x7aa9ff00
xpos 1668
ypos 372
}
set N72790960 [stack 0]
Dot {
name Dot8
tile_color 0x7aa9ff00
xpos 1934
ypos 372
}
set N727962f0 [stack 0]
Dot {
name Dot9
tile_color 0x7aa9ff00
xpos 2200
ypos 372
}
set N7279bd90 [stack 0]
Dot {
name Dot10
tile_color 0x7aa9ff00
xpos 2466
ypos 372
}
set N727a1720 [stack 0]
Dot {
name Dot11
tile_color 0x7aa9ff00
xpos 2732
ypos 372
}
Blur {
size {{Blur9.size*2} {Blur9.size*2}}
crop false
name Blur10
xpos 2698
ypos 440
}
Multiply {
value {{pow(CTRL.falloff,10)}}
name Multiply10
xpos 2698
ypos 543
}
Dot {
name Dot20
tile_color 0x7aa9ff00
xpos 2732
ypos 796
}
push $N727a1720
Blur {
size {{Blur8.size*2} {Blur8.size*2}}
crop false
name Blur9
xpos 2432
ypos 440
}
Multiply {
value {{pow(CTRL.falloff,9)}}
name Multiply9
xpos 2432
ypos 542
}
Dot {
name Dot19
tile_color 0x7aa9ff00
xpos 2466
ypos 770
}
push $N7279bd90
Blur {
size {{Blur7.size*2} {Blur7.size*2}}
crop false
name Blur8
xpos 2166
ypos 440
}
Multiply {
value {{pow(CTRL.falloff,8)}}
name Multiply8
xpos 2166
ypos 536
}
Dot {
name Dot18
tile_color 0x7aa9ff00
xpos 2200
ypos 744
}
push $N727962f0
Blur {
size {{Blur6.size*2} {Blur6.size*2}}
crop false
name Blur7
xpos 1900
ypos 440
}
Multiply {
value {{pow(CTRL.falloff,7)}}
name Multiply7
xpos 1900
ypos 528
}
Dot {
name Dot17
tile_color 0x7aa9ff00
xpos 1934
ypos 718
}
push $N72790960
Blur {
size {{Blur5.size*2} {Blur5.size*2}}
crop false
name Blur6
xpos 1634
ypos 440
}
Multiply {
value {{pow(CTRL.falloff,6)}}
name Multiply6
xpos 1634
ypos 528
}
Dot {
name Dot16
tile_color 0x7aa9ff00
xpos 1668
ypos 692
}
push $N7278afd0
Blur {
size {{Blur4.size*2} {Blur4.size*2}}
crop false
name Blur5
xpos 1368
ypos 440
}
Multiply {
value {{pow(CTRL.falloff,5)}}
name Multiply5
xpos 1368
ypos 524
}
Dot {
name Dot15
tile_color 0x7aa9ff00
xpos 1402
ypos 666
}
push $N72785640
Blur {
size {{Blur3.size*2} {Blur3.size*2}}
crop false
name Blur4
xpos 1102
ypos 440
}
Multiply {
value {{pow(CTRL.falloff,4)}}
name Multiply4
xpos 1102
ypos 518
}
Dot {
name Dot14
tile_color 0x7aa9ff00
xpos 1136
ypos 640
}
push $N7277fcb0
Blur {
size {{Blur2.size*2} {Blur2.size*2}}
crop false
name Blur3
xpos 836
ypos 440
}
Multiply {
value {{pow(CTRL.falloff,3)}}
name Multiply3
xpos 836
ypos 509
}
Dot {
name Dot13
tile_color 0x7aa9ff00
xpos 870
ypos 614
}
push $N7277a320
Blur {
size {{Blur1.size*2} {Blur1.size*2}}
crop false
name Blur2
xpos 570
ypos 440
}
Multiply {
value {{pow(CTRL.falloff,2)}}
name Multiply2
xpos 570
ypos 508
}
Dot {
name Dot12
tile_color 0x7aa9ff00
xpos 604
ypos 588
}
push $N72774b00
Blur {
size {{CTRL.size*2} {CTRL.size*2}}
crop false
name Blur1
xpos 304
ypos 440
}
Multiply {
value {{CTRL.falloff}}
name Multiply1
xpos 304
ypos 512
}
Merge2 {
inputs 2
operation plus
name Merge1
xpos 304
ypos 584
}
Merge2 {
inputs 2
operation plus
name Merge2
xpos 304
ypos 610
}
Merge2 {
inputs 2
operation plus
name Merge3
xpos 304
ypos 636
}
Merge2 {
inputs 2
operation plus
name Merge4
xpos 304
ypos 662
}
Merge2 {
inputs 2
operation plus
name Merge5
xpos 304
ypos 688
}
Merge2 {
inputs 2
operation plus
name Merge6
xpos 304
ypos 714
}
Merge2 {
inputs 2
operation plus
name Merge7
xpos 304
ypos 740
}
Merge2 {
inputs 2
operation plus
name Merge8
xpos 304
ypos 766
}
Merge2 {
inputs 2
operation plus
name Merge9
xpos 304
ypos 792
}
Dot {
name Dot21
tile_color 0x4b5ec600
xpos 338
ypos 928
}
set N7259a900 [stack 0]
Dot {
name Dot22
tile_color 0x4b5ec600
xpos 498
ypos 928
}
Grade {
whitepoint {{CTRL.core}}
white_clamp true
name Grade2
xpos 464
ypos 977
}
Gamma {
channels rgb
value {{parent.falloff_color.r/CTRL.falloff_length} {parent.falloff_color.g/CTRL.falloff_length} {parent.falloff_color.b/CTRL.falloff_length} {curve}}
name Gamma1
xpos 464
ypos 1037
}
Grade {
whitepoint {{CTRL.core}}
reverse true
name Grade3
xpos 464
ypos 1082
}
push $N7259a900
Clamp {
minimum {{CTRL.core}}
maximum_enable false
name Clamp1
xpos 304
ypos 972
}
Grade {
add {{1-CTRL.core}}
name Grade4
xpos 304
ypos 1020
}
Gamma {
channels rgb
value {{1+(1-parent.core_color.r)/CTRL.core_length} {1+(1-parent.core_color.g)/CTRL.core_length} {1+(1-parent.core_color.b)/CTRL.core_length} {curve}}
name Gamma2
xpos 304
ypos 1061
}
Add {
channels rgb
value -1
name Add1
xpos 304
ypos 1087
}
Merge2 {
inputs 2
operation plus
name Merge10
xpos 304
ypos 1157
}
Remove {
operation keep
channels rgb
name Remove2
xpos 304
ypos 1183
}
Multiply {
value {{parent.mix}}
name mix
xpos 304
ypos 1217
}
Merge2 {
inputs 2
operation plus
name Merge11
xpos 304
ypos 1270
disable {{parent.glow_only}}
}
Dot {
name Dot23
tile_color 0x4b5ec600
xpos 338
ypos 1436
}
push $N7271b480
Copy {
inputs 2
from0 rgba.red
to0 rgba.red
from1 rgba.green
to1 rgba.green
from2 rgba.blue
to2 rgba.blue
name Copy1
xpos 0
ypos 1414
}
Crop {
box {{-width*(parent.overscan/100)/2} {-height*(parent.overscan/100)/2} {width+(width*(parent.overscan/100)/2)} {height+(height*(parent.overscan/100)/2)}}
crop false
name Crop2
xpos 0
ypos 1495
disable {{!parent.crop}}
}
Output {
name Output1
xpos 0
ypos 1543
}
end_group
push $cut_paste_input
Group {
name ExponGlow
onCreate "n = nuke.thisNode()\nn.knob('size').setRange(0, 5)\nn.knob('exp').setRange(0, 4)\nn.knob('adjustBBoxPixels').setRange(0, 400)\nn.knob('adjustBBoxPercent').setRange(1, 2)\nn.knob('safeBBoxPixels').setRange(0, 400)\nn.knob('safeBBoxPercent').setRange(1, 2)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\n\nif k.name() == \"includeOriginal\":\n    if n.knob('includeOriginal').getValue() == 1:\n        merge = nuke.toNode(\"Merge1\")\n        original = nuke.toNode('Original')\n        AvgMult = nuke.toNode(\"AverageMult\")\n        steps = int(n.knob('steps').getValue())\n        merge.setInput(steps+1, original)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n\n    else:\n        merge.setInput(steps+1, None)\n        AvgMult\['whitepoint'].setValue(2 if steps<2 else steps)\n\nelif k.name() == \"steps\":\n\n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        start = nuke.toNode(\"Start\")\n        end   = nuke.toNode(\"End\")\n        b1    = nuke.toNode(\"Blur1\")\n        m1    = nuke.toNode(\"Multiply1\")\n        merge = nuke.toNode(\"Merge1\")\n        AvgMult = nuke.toNode(\"AverageMult\")\n\n        b1x   = b1.xpos()\n        b1y   = b1.ypos()\n        b1n   = b1.name()\n\n        m1x   = m1.xpos()\n        m1y   = m1.ypos()\n        m1n   = m1.name()\n\n        steps = int(n.knob('steps').getValue())\n        size  = n.knob('size').getValue()\n        mult  = n.knob('exp').getValue()\n\n        #b1.setInput(0, start)\n        for i in range(1,merge.inputs()):\n            merge.setInput(i,None)\n        merge.setInput(0, m1)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>start.xpos()]\n        for i in range(1,steps):\n            # Blur\n            b = nuke.nodes.Blur()\n            m = nuke.nodes.Multiply()\n            b.setXYpos(b1x+i*100,b1y)\n            b.setInput(0,start)\n            b\[\"channels\"].setValue(\"all\")\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(0, 1)\n            b\[\"size\"].setExpression( \"(width/25*pow(parent.size*\{\}, parent.exp.w))*((aspectCalc.aspect.w/100))\".format(str(i+1)), 0 )\n            b\[\"size\"].setExpression( \"(height/25*pow(parent.size*\{\}, parent.exp.h))*((aspectCalc.aspect.h/100))\".format(str(i+1)), 1 )\n            b\[\"label\"].setValue('')\n            blurAbove = b.name()\n\n            m.setXYpos(m1x+i*100,m1y)\n            m.setInput(0, nuke.toNode(blurAbove))\n            m\[\"channels\"].setValue(\"all\")\n            m\[\"value\"].setValue(1,1,1,1)\n            j = 1-(i/steps)\n            m\[\"value\"].setExpression('falloffType == 0 ? \{\} :falloffType == 1 ? pow(\{\}, 3) : falloffType == 2 ? \{\}*\{\}*(3-2*\{\}) : falloffType == 3 ? \{\}*\{\}*(2 - \{\}) : falloffType == 4 ? \{\}*(1 + \{\}*(1 - \{\})) : 0'.format(j,j,j,j,j,j,j,j,j,j,j))\n            m\[\"mix\"].setExpression(\"falloff\")\n            m\[\"label\"].setValue('')\n\n            merge.setInput(i if i<2 else i+1, m)\n            AvgMult\['whitepoint'].setValue(i if i<2 else i+1)\n\n        if n.knob('includeOriginal').getValue() == 1:\n            merge = nuke.toNode(\"Merge1\")\n            original = nuke.toNode('Original')\n            AvgMult = nuke.toNode(\"AverageMult\")\n            steps = int(n.knob('steps').getValue())\n            merge.setInput(steps+1, original)\n            AvgMult\['whitepoint'].setValue(2 if steps<2 else steps+1)\n\nelif k.name() == \"output2\":\n    if n.knob(\"output2\").getValue() == 4:\n        n.knob('AvgMaxOriginal').setVisible(True)\n    else:\n        n.knob('AvgMaxOriginal').setVisible(False)\n\nelif k.name() == \"safeBBox\":\n    if n.knob(\"safeBBox\").getValue() == 0:\n        n.knob('safeBBoxText').setVisible(False)\n        n.knob('safetyBBoxMethod').setVisible(False)\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(False)\n\n    elif n.knob(\"safeBBox\").getValue() == 1:\n        n.knob('safetyBBoxMethod').setVisible(True)\n        n.knob('safeBBoxText').setVisible(True)\n        if n.knob('safetyBBoxMethod').value() == \"pixels\":\n            n.knob('safeBBoxPixels').setVisible(True)\n            n.knob('safeBBoxPercent').setVisible(False)\n        elif n.knob('safetyBBoxMethod').value() == \"percent\":\n            n.knob('safeBBoxPixels').setVisible(False)\n            n.knob('safeBBoxPercent').setVisible(True)\n\nelif k.name() == \"safetyBBoxMethod\":\n    if n.knob(\"safetyBBoxMethod\").value() == \"pixels\":\n        n.knob('safeBBoxPixels').setVisible(True)\n        n.knob('safeBBoxPercent').setVisible(False)\n    elif n.knob(\"safetyBBoxMethod\").value() == \"percent\":\n        n.knob('safeBBoxPixels').setVisible(False)\n        n.knob('safeBBoxPercent').setVisible(True)\n\nelif k.name() == \"adjustBBoxExtra\":\n    if n.knob(\"adjustBBoxExtra\").value() == \"pixels\":\n        n.knob('adjustBBoxPixels').setVisible(True)\n        n.knob('adjustBBoxPercent').setVisible(False)\n    elif n.knob(\"adjustBBoxExtra\").value() == \"percent\":\n        n.knob('adjustBBoxPixels').setVisible(False)\n        n.knob('adjustBBoxPercent').setVisible(True)\n"
tile_color 0xcc804eff
label "(\[value output2])"
note_font "Verdana Bold"
note_font_color 0xffffffff
selected true
xpos 42716
ypos -3270
addUserKnob {20 ExponGlow}
addUserKnob {41 channels T Remove1.channels}
addUserKnob {41 maskChannelMask_1 l area T MultiplyArea.maskChannelMask}
addUserKnob {41 inject_1 l inject -STARTLINE T MultiplyArea.inject}
addUserKnob {41 invert_mask_1 l invert -STARTLINE T MultiplyArea.invert_mask}
addUserKnob {41 fringe_1 l fringe -STARTLINE T MultiplyArea.fringe}
addUserKnob {26 ""}
addUserKnob {26 ToleranceTitle l Tolerance T " "}
addUserKnob {6 tolerance_2 l " " -STARTLINE}
tolerance_2 true
addUserKnob {7 tolerance l "" -STARTLINE R 0 4}
tolerance 0.9
addUserKnob {4 output2 l Operation M {Screen Plus Over Hypot Average Max Min ""}}
output2 Plus
addUserKnob {3 steps l "  Steps" -STARTLINE}
steps 10
addUserKnob {26 text l " " -STARTLINE T " "}
addUserKnob {6 includeOriginal l "Include Original?" -STARTLINE}
addUserKnob {19 intensity l Intensity R 0 4}
intensity 1.04
addUserKnob {6 intensity_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 intensity_panelDropped_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 intensity_panelDropped_1_1 l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {26 text_1 l " "}
addUserKnob {6 AvgMaxOriginal l "Use Max of Average and Original" +HIDDEN +STARTLINE}
addUserKnob {14 size l Size R 0 5}
size 5
addUserKnob {14 exp l Exponent R 0 4}
exp 1.22
addUserKnob {6 color_rgba_panelDropped l "panel dropped state" +HIDDEN +STARTLINE}
addUserKnob {4 falloffType l Falloff M {Linear pLinear smooth smooth0 smooth1 "" ""}}
addUserKnob {7 falloff l "" -STARTLINE}
falloff 1
addUserKnob {26 text_4 l " "}
addUserKnob {6 color_rgba_panelDropped_1 l "panel dropped state" +HIDDEN +STARTLINE}
addUserKnob {14 postBlur l "Post Blur" R 0 100}
addUserKnob {6 effectOnly l "<font color = dark gray>.<b><font color = skyblue>   Effect Only" +STARTLINE}
addUserKnob {26 ""}
addUserKnob {20 bboxControl l "BBox Control" n 1}
bboxControl 0
addUserKnob {26 text_2 l " " T " "}
addUserKnob {4 bbox l "BBox: " -STARTLINE M {union intersectionMask A B "input format" "" "" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {6 safeBBox l "Safe BBox" t "If the output BBox is larger than the input format and the input box combined. the result will be max of the input/format bbox plus a safety \"buffer\" in pixels or percent \n\nTurning off might make your BBox grow exponentially with high blur values" -STARTLINE}
safeBBox true
addUserKnob {26 safeBBoxText l "" +STARTLINE T " "}
addUserKnob {4 safetyBBoxMethod l "Safe BBox Buffer  " -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" "" "" ""}}
safetyBBoxMethod percent
addUserKnob {14 safeBBoxPixels l "" -STARTLINE +HIDDEN R 0 400}
safeBBoxPixels 100
addUserKnob {14 safeBBoxPercent l "" -STARTLINE R 1 2}
safeBBoxPercent 1.1
addUserKnob {26 text_3 l "" +STARTLINE T " "}
addUserKnob {4 adjustBBoxExtra l "Extra BBox Adjust" -STARTLINE M {pixels percent "" "" "" "" "" "" "" "" "" "" "" "" ""}}
addUserKnob {14 adjustBBoxPercent l "" -STARTLINE +HIDDEN R 1 2}
adjustBBoxPercent 1
addUserKnob {14 adjustBBoxPixels l "" -STARTLINE R 0 400}
addUserKnob {26 ""}
addUserKnob {20 endGroup n -1}
addUserKnob {41 maskChannelMask l mask T MergeKeymix.maskChannelMask}
addUserKnob {41 inject -STARTLINE T MergeKeymix.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T MergeKeymix.invert_mask}
addUserKnob {41 fringe -STARTLINE T MergeKeymix.fringe}
addUserKnob {41 mix T MergeKeymix.mix}
addUserKnob {20 info l Info}
addUserKnob {26 creator l Creator: T "Tony Lyons"}
addUserKnob {26 desc l Description: T ExponGlow}
addUserKnob {26 ver l Version: T v03}
}
BackdropNode {
inputs 0
name BackdropNode1
tile_color 0x535e5a00
label "BBox Management"
note_font_size 30
note_font_color 0xffffffff
xpos -529
ypos 636
bdwidth 341
bdheight 525
}
Input {
inputs 0
name Inputimg
xpos 0
ypos -1449
}
Dot {
name Dot16
note_font_size 41
xpos 34
ypos -1282
}
set N72ad0500 [stack 0]
Dot {
name Dot2
note_font_size 41
xpos -367
ypos -1282
}
Dot {
name Dot25
note_font_size 41
xpos -367
ypos 360
}
Dot {
name Dot18
label B
note_font_size 41
xpos -367
ypos 578
}
Dot {
name Dot11
note_font_size 41
xpos -367
ypos 767
}
set N72ae6900 [stack 0]
Dot {
name Dot3
note_font_size 41
xpos -367
ypos 819
}
set N72aec210 [stack 0]
Dot {
name Dot8
note_font_size 41
xpos -463
ypos 819
}
Dot {
name Dot15
note_font_size 41
xpos -463
ypos 975
}
Crop {
inputs 0
box {{"!\[exists parent.input0] ? 0 : input.format.x"} {"!\[exists parent.input0] ? 0 : input.format.y"} {"!\[exists parent.input0] ? 0 : input.format.r"} {"!\[exists parent.input0] ? 0 : input.format.t"}}
reformat true
crop false
name Crop1
xpos 210
ypos -1006
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
AddChannels {
channels rgba
name AddChannels2
xpos 210
ypos -980
}
push $N72ad0500
Merge2 {
inputs 2
name Merge3
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 83
ypos -927
}
NoOp {
name BBoxInput
xpos 83
ypos -884
addUserKnob {20 User}
addUserKnob {15 bbox}
bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
}
Dot {
name Dot23
note_font_size 41
xpos 117
ypos -146
}
Input {
inputs 0
name Inputarea
xpos 289
ypos -894
number 2
}
AddChannels {
channels alpha
color 1
name AddChannels1
xpos 289
ypos -836
}
Invert {
channels rgba
name Invert3
xpos 289
ypos -759
}
push $N72ad0500
Dot {
name Dot1
note_font_size 41
xpos 461
ypos -1282
}
Remove {
operation keep
channels rgba
name Remove1
xpos 427
ypos -1213
}
NoOp {
name aspectCalc
xpos 427
ypos -1155
addUserKnob {20 User}
addUserKnob {14 aspect R 0 100}
aspect {{parent.size.w} {(parent.size.h/format.pixel_aspect/height*width)*format.pixel_aspect}}
}
Dot {
name Dot21
note_font_size 41
xpos 461
ypos -1026
}
set N72b60950 [stack 0]
Invert {
name Invert1
xpos 864
ypos -1033
disable {{"parent.size < 0 ? 0 : 1"}}
}
set N72b66230 [stack 0]
Keyer {
operation "luminance key"
range {{parent.tolerance} {range.A+parent.tolerance+1} {range.B} {range.B}}
name Keyer1
xpos 774
ypos -967
disable {{!tolerance_2}}
}
Premult {
channels all
name Premult1
xpos 774
ypos -910
disable {{!tolerance_2}}
}
push $N72b66230
Dissolve {
inputs 2
channels rgba
which {{"parent.tolerance < 1 ? parent.tolerance : 1"}}
name Dissolve1
label "\[value which]"
xpos 864
ypos -857
}
Multiply {
inputs 1+1
value 0
name MultiplyArea
label "\[value value]"
xpos 864
ypos -768
}
set N72b94450 [stack 0]
NoOp {
name Start
xpos 864
ypos -706
}
set N72ba13f0 [stack 0]
Blur {
size {{"(width/25*pow(parent.size*10, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*10, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
crop false
name Blur10
xpos 1764
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.1 :falloffType == 1 ? pow(0.1, 3) : falloffType == 2 ? 0.1*0.1*(3-2*0.1) : falloffType == 3 ? 0.1*0.1*(2 - 0.1) : falloffType == 4 ? 0.1*(1 + 0.1*(1 - 0.1)) : 0"} {"falloffType == 0 ? 0.1 :falloffType == 1 ? pow(0.1, 3) : falloffType == 2 ? 0.1*0.1*(3-2*0.1) : falloffType == 3 ? 0.1*0.1*(2 - 0.1) : falloffType == 4 ? 0.1*(1 + 0.1*(1 - 0.1)) : 0"} {"falloffType == 0 ? 0.1 :falloffType == 1 ? pow(0.1, 3) : falloffType == 2 ? 0.1*0.1*(3-2*0.1) : falloffType == 3 ? 0.1*0.1*(2 - 0.1) : falloffType == 4 ? 0.1*(1 + 0.1*(1 - 0.1)) : 0"} {"falloffType == 0 ? 0.1 :falloffType == 1 ? pow(0.1, 3) : falloffType == 2 ? 0.1*0.1*(3-2*0.1) : falloffType == 3 ? 0.1*0.1*(2 - 0.1) : falloffType == 4 ? 0.1*(1 + 0.1*(1 - 0.1)) : 0"}}
mix {{falloff}}
name Multiply10
xpos 1764
ypos -477
}
push $N72ba13f0
Blur {
size {{"(width/25*pow(parent.size*9, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*9, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
crop false
name Blur9
xpos 1664
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.2 :falloffType == 1 ? pow(0.2, 3) : falloffType == 2 ? 0.2*0.2*(3-2*0.2) : falloffType == 3 ? 0.2*0.2*(2 - 0.2) : falloffType == 4 ? 0.2*(1 + 0.2*(1 - 0.2)) : 0"} {"falloffType == 0 ? 0.2 :falloffType == 1 ? pow(0.2, 3) : falloffType == 2 ? 0.2*0.2*(3-2*0.2) : falloffType == 3 ? 0.2*0.2*(2 - 0.2) : falloffType == 4 ? 0.2*(1 + 0.2*(1 - 0.2)) : 0"} {"falloffType == 0 ? 0.2 :falloffType == 1 ? pow(0.2, 3) : falloffType == 2 ? 0.2*0.2*(3-2*0.2) : falloffType == 3 ? 0.2*0.2*(2 - 0.2) : falloffType == 4 ? 0.2*(1 + 0.2*(1 - 0.2)) : 0"} {"falloffType == 0 ? 0.2 :falloffType == 1 ? pow(0.2, 3) : falloffType == 2 ? 0.2*0.2*(3-2*0.2) : falloffType == 3 ? 0.2*0.2*(2 - 0.2) : falloffType == 4 ? 0.2*(1 + 0.2*(1 - 0.2)) : 0"}}
mix {{falloff}}
name Multiply9
xpos 1664
ypos -477
}
push $N72ba13f0
Blur {
size {{"(width/25*pow(parent.size*8, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*8, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
crop false
name Blur8
xpos 1564
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.3 :falloffType == 1 ? pow(0.3, 3) : falloffType == 2 ? 0.3*0.3*(3-2*0.3) : falloffType == 3 ? 0.3*0.3*(2 - 0.3) : falloffType == 4 ? 0.3*(1 + 0.3*(1 - 0.3)) : 0"} {"falloffType == 0 ? 0.3 :falloffType == 1 ? pow(0.3, 3) : falloffType == 2 ? 0.3*0.3*(3-2*0.3) : falloffType == 3 ? 0.3*0.3*(2 - 0.3) : falloffType == 4 ? 0.3*(1 + 0.3*(1 - 0.3)) : 0"} {"falloffType == 0 ? 0.3 :falloffType == 1 ? pow(0.3, 3) : falloffType == 2 ? 0.3*0.3*(3-2*0.3) : falloffType == 3 ? 0.3*0.3*(2 - 0.3) : falloffType == 4 ? 0.3*(1 + 0.3*(1 - 0.3)) : 0"} {"falloffType == 0 ? 0.3 :falloffType == 1 ? pow(0.3, 3) : falloffType == 2 ? 0.3*0.3*(3-2*0.3) : falloffType == 3 ? 0.3*0.3*(2 - 0.3) : falloffType == 4 ? 0.3*(1 + 0.3*(1 - 0.3)) : 0"}}
mix {{falloff}}
name Multiply8
xpos 1564
ypos -477
}
push $N72ba13f0
Blur {
size {{"(width/25*pow(parent.size*7, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*7, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
crop false
name Blur7
xpos 1464
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"} {"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"} {"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"} {"falloffType == 0 ? 0.4 :falloffType == 1 ? pow(0.4, 3) : falloffType == 2 ? 0.4*0.4*(3-2*0.4) : falloffType == 3 ? 0.4*0.4*(2 - 0.4) : falloffType == 4 ? 0.4*(1 + 0.4*(1 - 0.4)) : 0"}}
mix {{falloff}}
name Multiply7
xpos 1464
ypos -477
}
push $N72ba13f0
Blur {
size {{"(width/25*pow(parent.size*6, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*6, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
crop false
name Blur6
xpos 1364
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"} {"falloffType == 0 ? 0.5 :falloffType == 1 ? pow(0.5, 3) : falloffType == 2 ? 0.5*0.5*(3-2*0.5) : falloffType == 3 ? 0.5*0.5*(2 - 0.5) : falloffType == 4 ? 0.5*(1 + 0.5*(1 - 0.5)) : 0"}}
mix {{falloff}}
name Multiply6
xpos 1364
ypos -477
}
push $N72ba13f0
Blur {
size {{"(width/25*pow(parent.size*5, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*5, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
crop false
name Blur5
xpos 1264
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"} {"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"} {"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"} {"falloffType == 0 ? 0.6 :falloffType == 1 ? pow(0.6, 3) : falloffType == 2 ? 0.6*0.6*(3-2*0.6) : falloffType == 3 ? 0.6*0.6*(2 - 0.6) : falloffType == 4 ? 0.6*(1 + 0.6*(1 - 0.6)) : 0"}}
mix {{falloff}}
name Multiply5
xpos 1264
ypos -477
}
push $N72ba13f0
Blur {
size {{"(width/25*pow(parent.size*4, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*4, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
crop false
name Blur4
xpos 1164
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"} {"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"} {"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"} {"falloffType == 0 ? 0.7 :falloffType == 1 ? pow(0.7, 3) : falloffType == 2 ? 0.7*0.7*(3-2*0.7) : falloffType == 3 ? 0.7*0.7*(2 - 0.7) : falloffType == 4 ? 0.7*(1 + 0.7*(1 - 0.7)) : 0"}}
mix {{falloff}}
name Multiply4
xpos 1164
ypos -477
}
push $N72ba13f0
Blur {
size {{"(width/25*pow(parent.size*3, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*3, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
crop false
name Blur3
xpos 1064
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"} {"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"} {"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"} {"falloffType == 0 ? 0.8 :falloffType == 1 ? pow(0.8, 3) : falloffType == 2 ? 0.8*0.8*(3-2*0.8) : falloffType == 3 ? 0.8*0.8*(2 - 0.8) : falloffType == 4 ? 0.8*(1 + 0.8*(1 - 0.8)) : 0"}}
mix {{falloff}}
name Multiply3
xpos 1064
ypos -477
}
push 0
push $N72ba13f0
Blur {
size {{"(width/25*pow(parent.size*2, parent.exp.w))*((aspectCalc.aspect.w/100))"} {"(height/25*pow(parent.size*2, parent.exp.h))*((aspectCalc.aspect.h/100))"}}
crop false
name Blur2
xpos 964
ypos -554
}
Multiply {
value {{"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"} {"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"} {"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"} {"falloffType == 0 ? 0.9 :falloffType == 1 ? pow(0.9, 3) : falloffType == 2 ? 0.9*0.9*(3-2*0.9) : falloffType == 3 ? 0.9*0.9*(2 - 0.9) : falloffType == 4 ? 0.9*(1 + 0.9*(1 - 0.9)) : 0"}}
mix {{falloff}}
name Multiply2
xpos 964
ypos -477
}
push $N72ba13f0
Blur {
size {{(width/10*parent.size*(aspectCalc.aspect.w/100))} {(height/10*parent.size*(aspectCalc.aspect.h/100))}}
crop false
name Blur1
xpos 864
ypos -555
}
Multiply {
value {1 1 1 1}
mix {{falloff}}
name Multiply1
xpos 864
ypos -477
}
Merge2 {
inputs 10+1
operation {{mergeNumber.mergeNumber}}
also_merge all
name Merge1
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 864
ypos -327
}
NoOp {
name End
xpos 864
ypos -279
}
set N72abc860 [stack 0]
CopyBBox {
inputs 2
name CopyBBox1
xpos 585
ypos -149
}
Group {
name BBoxToFormat
onCreate "n = nuke.thisNode()\ninputFormat = n.knob(\"inputFormat\")\ninputBBox = n.knob(\"inputBBox\")\ncrop = nuke.toNode(\"Crop6\")\ncropb = crop.knob('box')\noutputBBox = n.knob('outputBBox')\noutputBBoxCenter = n.knob(\"outputBBoxCenter\")\n\ninputFormat.setFlag(0x0000000000008000)\ninputBBox.setFlag(0x0000000000008000)\ncropb.setFlag(0x0000000000008000)\noutputBBox.setFlag(0x0000000000008000)\noutputBBoxCenter.setFlag(0x0000000000008000)\n\nn = nuke.thisNode()\nn.knob(\"overscan\").setRange(0,400)\nn.knob(\"overscanPercent\").setRange(1,4)"
tile_color 0xa57aaaff
note_font "Verdana Bold"
note_font_color 0xffffffff
xpos 585
ypos -106
addUserKnob {20 CropBBox}
addUserKnob {4 type l Type +INVISIBLE M {"To Format" "To BBox"}}
addUserKnob {41 intersect T Crop6.intersect}
addUserKnob {6 blackOutside l "Black Outside" -STARTLINE}
addUserKnob {4 overscanType l "Overscan Type:" M {Pixels Percentage}}
overscanType {{parent.safetyBBoxMethod}}
addUserKnob {14 overscan l Overscan R 0 400}
overscan {{parent.safeBBoxPixels} {parent.safeBBoxPixels}}
addUserKnob {14 overscanPercent l "Overscan Percent" R 1 4}
overscanPercent {{parent.safeBBoxPercent} {parent.safeBBoxPercent}}
addUserKnob {20 inputBbox l "BBox Data" n 1}
addUserKnob {15 inputFormat l "Input Format"}
inputFormat {0 0 {input.width} {input.height}}
addUserKnob {15 inputBBox l "Input BBox"}
inputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {12 outputBBoxCenter l OutputBBoxCenter}
outputBBoxCenter {{OutputBBox1.outputBBoxCenter.w} {OutputBBox1.outputBBoxCenter.h}}
addUserKnob {15 outputBBox l "Output BBox"}
outputBBox {{OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox} {OutputBBox1.OutputBBox}}
addUserKnob {20 endGroup n -1}
addUserKnob {20 info_1 l Info}
addUserKnob {26 creator l Creator: T "<b><big>Tony Lyons"}
addUserKnob {26 desc l Description: t "crop to inputformat\n\ndisplays values of input bbox" T CropBBox}
addUserKnob {26 ver l Version: T v02}
}
Input {
inputs 0
name Input
xpos 261
ypos 394
}
Dot {
name Dot2
note_font_size 41
xpos 295
ypos 462
}
set N728e1200 [stack 0]
Dot {
name Dot1
note_font_size 41
xpos -160
ypos 462
}
set N728e67f0 [stack 0]
push $N728e1200
Crop {
box {{parent.inputBBox} {parent.inputBBox} {parent.inputBBox} {parent.inputBBox}}
crop {{parent.blackOutside}}
name Crop6
xpos 261
ypos 510
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
set N728ec1e0 [stack 0]
Remove {
operation keep
channels none
name Remove1
xpos 120
ypos 504
}
set N728f8780 [stack 0]
Transform {
scale {{parent.overscanPercent} {parent.overscanPercent}}
center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
shutteroffset centred
name Transform1
selected true
xpos 120
ypos 553
}
push $N728f8780
AdjBBox {
numpixels {{parent.overscan} {parent.overscan}}
name AdjBBox1
xpos -5
ypos 510
}
Switch {
inputs 2
which {{overscanType}}
name Switch2
label "\[value which]"
xpos -5
ypos 549
}
Merge2 {
inputs 2
bbox intersection
Achannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {-rgba.red -rgba.green -rgba.blue rgba.alpha}
output {-rgba.red -rgba.green -rgba.blue rgba.alpha}
name Merge1
xpos -5
ypos 647
disable {{!parent.Crop6.intersect}}
}
push $N728e67f0
CopyBBox {
inputs 2
name CopyBBox1
xpos -194
ypos 653
}
BlackOutside {
name BlackOutside1
xpos -194
ypos 692
disable {{!parent.blackOutside}}
}
Dot {
name Dot4
note_font_size 41
xpos -160
ypos 769
}
push $N728ec1e0
Switch {
inputs 2
which {{"overscanType == 0 ? overscan.w != 0 || overscan.h != 0 : overscanPercent.w != 1 || overscanPercent.h != 1 ? 1 : 0"}}
name Switch1
label "\[value which]"
xpos 261
ypos 759
}
set N7294c850 [stack 0]
Output {
name Output1
xpos 261
ypos 921
}
push $N7294c850
NoOp {
name OutputBBox1
xpos 378
ypos 821
addUserKnob {20 User}
addUserKnob {15 OutputBBox l "Output BBox"}
OutputBBox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
addUserKnob {14 outputBBoxCenter l "Output BBox Center" R 0 100}
outputBBoxCenter {{OutputBBox.x+(OutputBBox.r-OutputBBox.x)/2} {OutputBBox.y+(OutputBBox.t-OutputBBox.y)/2}}
}
end_group
push $N72abc860
Merge2 {
inputs 2
bbox intersection
name Merge4
xpos 585
ypos -66
}
push $N72abc860
CopyBBox {
inputs 2
name CopyBBox2
xpos 585
ypos -21
}
set N72974280 [stack 0]
push $N72b94450
Dot {
name Dot4
note_font_size 41
xpos 540
ypos -678
}
NoOp {
name Original
xpos 506
ypos -327
}
Dot {
name Dot5
note_font_size 41
xpos 540
ypos 78
}
push $N72974280
push $N72abc860
Switch {
inputs 2
which {{"parent.safeBBox && ((BBoxResult.bbox.x < BBoxInput.bbox.x || BBoxResult.bbox.y < BBoxInput.bbox.y || BBoxResult.bbox.r > BBoxInput.bbox.r || BBoxResult.bbox.t > BBoxInput.bbox.t))"}}
name Switch2
label "\[value which]"
xpos 864
ypos -25
}
Grade {
channels all
whitepoint 10
black_clamp false
name AverageMult
xpos 864
ypos 27
disable {{"output2 == 4 ? 0 : 1"}}
}
Merge2 {
inputs 2
operation max
also_merge all
name Merge2
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 864
ypos 74
disable {{"output2 == 4 && includeOriginal == 1 && AvgMaxOriginal == 1 ? 0 : 1"}}
}
Multiply {
value {{parent.intensity/steps}}
name Multiply12
xpos 864
ypos 98
}
Blur {
size {{postBlur} {postBlur}}
name BlurOriginal
xpos 864
ypos 155
}
CopyBBox {
inputs 2
name CopyBBox3
xpos 864
ypos 224
}
Invert {
name Invert2
xpos 864
ypos 283
disable {{"parent.size < 0 ? 0 : 1"}}
}
push $N72b60950
Switch {
inputs 2
which {{"parent.size == 0 ? 0 : 1"}}
name Switch1
label "\[value which]"
xpos 427
ypos 283
}
push $N72ad0500
Dot {
name Dot22
note_font_size 41
xpos 34
ypos 157
}
Multiply {
channels {{{parent.Remove1.channels}}}
value 0
name Multiply11
xpos 0
ypos 227
disable {{!effectOnly}}
}
Merge2 {
inputs 2
operation {{mergeNumber.mergeNumber}}
also_merge all
name Merge7
label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
xpos 0
ypos 287
}
Dot {
name Dot17
label A
note_font_size 41
xpos 34
ypos 599
}
Dot {
name Dot7
note_font_size 41
xpos 34
ypos 729
}
set N7281f980 [stack 0]
Dot {
name Dot12
note_font_size 41
xpos -260
ypos 729
}
Dot {
name Dot13
note_font_size 41
xpos -260
ypos 943
}
push $N72ae6900
Input {
inputs 0
name Inputmask
xpos 346
ypos 516
number 1
}
Dot {
name Dot19
label Mask
note_font_size 41
xpos 380
ypos 582
}
set N72835f00 [stack 0]
Dot {
name Dot20
note_font_size 41
xpos 270
ypos 582
}
push $N7281f980
Merge2 {
inputs 2
bbox intersection
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
name MergeIntersection
xpos 236
ypos 719
disable {{"!\[exists parent.input1]"}}
}
Merge2 {
inputs 2
Achannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
Bchannels {rgba.red -rgba.green -rgba.blue rgba.alpha}
output {rgba.red -rgba.green -rgba.blue rgba.alpha}
name MergeUnion
xpos 236
ypos 757
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot6
label "intersection\nof (Mask and A) + B"
note_font_size 14
note_font_color 0xffffffff
xpos 270
ypos 917
}
push $N72835f00
Dot {
name Dot10
note_font_size 41
xpos 380
ypos 819
}
push $N7281f980
push $N72aec210
Merge2 {
inputs 2+1
operation copy
Achannels none
Bchannels none
output none
also_merge {{{parent.Remove1.channels}}}
maskChannelMask -rgba.alpha
name MergeKeymix
xpos 0
ypos 809
}
Dot {
name Dot14
note_font_size 41
xpos 34
ypos 891
}
set N72881770 [stack 0]
push $N72aec210
CopyBBox {
inputs 2
name CopyBBoxUnion
xpos -401
ypos 887
disable {{parent.bbox==0?0:1}}
}
CopyBBox {
inputs 2
name CopyBBoxIntersection
xpos -401
ypos 913
disable {{"parent.bbox==1 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBoxA
xpos -401
ypos 939
disable {{"parent.bbox==2 ? 0 : 1"}}
}
CopyBBox {
inputs 2
name CopyBBoxB
xpos -401
ypos 971
disable {{"parent.bbox==3 ? 0 : 1"}}
}
Crop {
box {0 0 {parent.width} {parent.height}}
crop false
name CopyBBoxFormat
xpos -401
ypos 997
disable {{"parent.bbox==4 ? 0 : 1"}}
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
set N728a9f40 [stack 0]
Transform {
scale {{parent.adjustBBoxPercent} {parent.adjustBBoxPercent}}
center {{((input.bbox.r-input.bbox.x)/2)+input.bbox.x} {((input.bbox.t-input.bbox.y)/2)+input.bbox.y}}
black_outside false
shutteroffset centred
name TransformBBoxAdjustPercent
xpos -516
ypos 1042
}
push $N728a9f40
AdjBBox {
numpixels {{parent.adjustBBoxPixels} {parent.adjustBBoxPixels}}
name AdjBBoxPixels
xpos -401
ypos 1045
}
Switch {
inputs 2
which {{adjustBBoxExtra}}
name Switch3
xpos -401
ypos 1084
}
Dot {
name Dot9
note_font_size 41
xpos -367
ypos 1137
}
push $N72881770
CopyBBox {
inputs 2
name CopyBBox
xpos 0
ypos 1133
}
BlackOutside {
name BlackOutside1
xpos 0
ypos 1159
disable {{!parent.blackOutside}}
}
Output {
name Output1
xpos 0
ypos 1299
}
push $N72abc860
NoOp {
name BBoxResult
xpos 714
ypos -279
addUserKnob {20 User}
addUserKnob {15 bbox}
bbox {{input.bbox.x} {input.bbox.y} {input.bbox.r} {input.bbox.t}}
}
NoOp {
inputs 0
name mergeNumber
xpos 202
ypos -1339
addUserKnob {20 User}
addUserKnob {3 mergeNumber}
mergeNumber {{"output2 == 0 ? 25 : output2 == 1 ? 24 : output2 == 2 ? 22 : output2 == 3 ? 13 : output2 == 4 ? 24 : output2 == 5 ? 17 : 18"}}
}
end_group
push $cut_paste_input
Group {
name apGlow1
help "apeGlow v1.0 - apEssentials by Adrian Pueyo\n\nExponential glow with advanced controls, using the traditional multi-blur approach.\n\nWith the \"area\" input (optional) you can set only a part of the image to emit glow.\nNaN's will be turned black, on rgba only.\n\nadrianpueyo.com, 2015-2019."
onCreate "n = nuke.thisNode()\nfor i in \['intensity','response','max_size','src_black','src_white','response']:\n    n\[i].setFlag(0x00000004)\nn\['max_size'].setRange(0,10000)\nn\['overscan'].setRange(0,1000)"
knobChanged "n = nuke.thisNode()\nk = nuke.thisKnob()\nif k.name() in \[\"crop\",\"enableOverscan\"]:\n    kcv = n\[\"crop\"].value()\n    kov = n\[\"enableOverscan\"].value()\n    n\[\"enableOverscan\"].setEnabled(not kcv)\n    n\['overscan'].setEnabled(not kcv and kov)\nelif k.name() == \"s\":\n    s = int(k.value())\n    if s<1:\n        k.setValue(1)\n    else:\n        nd = nuke.toNode(\"DP\")\n        nm = nuke.toNode(\"MergeBlurs\")\n        b0 = nuke.toNode(\"Blur0\")\n        b0x = b0.xpos()\n        b0y = b0.ypos()\n        b0n = b0.name()\n        for i in range(1,nm.inputs()):\n            nm.setInput(i,None)\n        \[nuke.delete(i) for i in nuke.allNodes() if i.xpos()>nd.xpos()]\n        for i in range(1,s):\n            # Blur\n            b = nuke.nodes.Blur()\n            b.setXYpos(b0x+i*100,b0y)\n            b.setInput(0,nd)\n            b\[\"channels\"].setValue(\"all\")\n            for bk in \[\"filter\",\"quality\"]:\n                b\[bk].setExpression(b0n+\".\"+bk)\n            b\[\"crop\"].setValue(0)\n            b\[\"size\"].setValue(\[0,0])\n            b\[\"size\"].setExpression(\"DP.j((1/parent.s)*%s)/ parent.f\"%(i+1))\n            # Multiply\n            m = nuke.nodes.Multiply()\n            m.setXYpos(b0x+i*100,b0y+38)\n            m.setInput(0,b)\n            m\[\"channels\"].setValue(\"all\")\n            m\[\"value\"].setValue(\[0,0,0,0])\n            m\[\"value\"].setExpression( \"parent.p*%s+%s\"%((i+1)/(s),1-(i+1)/(s)))\n            # Merge\n            nm.setInput(i if i<2 else i+1, m)"
tile_color 0xe88543ff
selected true
xpos 42713
ypos -3339
addUserKnob {20 apeGlow}
addUserKnob {41 channels T KeepWhat.channels}
addUserKnob {7 intensity t "Intensity multiplier for the resulting glow." R 0 10}
intensity 1
addUserKnob {18 p l persistance t "Color gain of the largest step. Affects the other steps progressively, with the least effect on the smallest one.\n\nUse as an inverse falloff or as a progressive color tint." R 0 10}
p 1
addUserKnob {6 p_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {18 tint t "Overall color multiplier for the intensity."}
tint 1
addUserKnob {6 tint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
addUserKnob {6 effect_only l "effect only" +STARTLINE}
effect_only true
addUserKnob {26 ""}
addUserKnob {7 src_black l "src black" t "Black point of the source image's luminance.\nClip the effect below this luminance value." R 0 4}
addUserKnob {7 src_white l "src white" t "White point of the source image's luminance." R 0 4}
src_white 1
addUserKnob {41 white_clamp l clamp -STARTLINE T Grade1.white_clamp}
addUserKnob {7 response t "Gamma on the source image's luminance, to change the response curve falloff." R 0 4}
response 1
addUserKnob {26 ""}
addUserKnob {14 max_size l "max size" t "Maximum pixel size of the exponential glow." R 0 10000}
max_size 2000
addUserKnob {14 f l "size falloff" t "Falloff adjustment on the exponential distribution of the blur sizes.\n\nReduce this to have the glow more diffuse (starting with larger blurs).\nIncrease to have the glow tighter and more defined (start with smaller blurs)." R 0 10}
f 1
addUserKnob {3 s l steps t "Number of blur iterations to combine together."}
s 10
addUserKnob {41 filter T Blur0.filter}
addUserKnob {41 quality l "" -STARTLINE T Blur0.quality}
addUserKnob {6 crop l "crop to format" -STARTLINE}
addUserKnob {14 overscan R 0 1000}
overscan 100
addUserKnob {6 enableOverscan l enable -STARTLINE}
enableOverscan true
addUserKnob {26 ""}
addUserKnob {41 maskChannelArea l area -STARTLINE T ExpressionArea.maskChannelMask}
addUserKnob {41 inject_area l inject -STARTLINE T ExpressionArea.inject}
addUserKnob {41 invert_area l invert -STARTLINE T ExpressionArea.invert_mask}
addUserKnob {41 fringe_area l fringe -STARTLINE T ExpressionArea.fringe}
addUserKnob {41 maskChannelMask l mask T Merge.maskChannelMask}
addUserKnob {41 inject -STARTLINE T Merge.inject}
addUserKnob {41 invert_mask l invert -STARTLINE T Merge.invert_mask}
addUserKnob {41 fringe -STARTLINE T Merge.fringe}
addUserKnob {41 mix T Merge.mix}
addUserKnob {26 version_author l "" t "apeGlow v1.0\n2019" +STARTLINE T "<span style=\"color:#666\"><br/><b>apeGlow v1.0</b> - <a href=\"http://www.adrianpueyo.com\" style=\"color:#666;text-decoration: none;\">adrianpueyo.com</a>, 2015-2019</span>"}
}
Input {
inputs 0
name Inputmask
xpos -883
ypos 975
number 2
}
Input {
inputs 0
name Inputarea
xpos -638
ypos 383
number 1
}
Input {
inputs 0
name Inputimg
xpos -773
ypos 220
}
Dot {
name Dot6
xpos -739
ypos 308
}
set N72e2f4a0 [stack 0]
Dot {
name Dot8
xpos -494
ypos 308
}
set N72e34ce0 [stack 0]
Remove {
name RemoveAll
xpos -528
ypos 345
}
Expression {
inputs 1+1
channel0 rgba
expr0 1
name ExpressionArea
xpos -528
ypos 383
disable {{"!\[exists parent.input1]"}}
}
Shuffle {
red white
green white
blue white
alpha white
name ShuffleWhite
xpos -528
ypos 409
disable {{"\[exists parent.input1]"}}
}
push $N72e34ce0
Dot {
name Dot7
xpos -384
ypos 308
}
Remove {
operation keep
channels rgba
name KeepWhat
xpos -418
ypos 377
}
Copy {
inputs 2
from0 rgba.alpha
to0 apGlowArea.red
name Copy1
xpos -418
ypos 403
disable {{"!\[exists parent.input1]"}}
}
Premult {
channels all
alpha apGlowArea.red
name Premult1
xpos -418
ypos 441
disable {{"!\[exists parent.input1]"}}
}
Remove {
channels apGlowArea
name RemoveArea
xpos -418
ypos 479
disable {{"!\[exists parent.input1]"}}
}
Dot {
name Dot5
xpos -384
ypos 538
}
set N72e94c90 [stack 0]
Dot {
name Dot1
xpos -494
ypos 538
}
Saturation {
channels all
saturation 0
name Saturation1
xpos -528
ypos 556
}
set N72e9fda0 [stack 0]
Grade {
channels all
blackpoint {{parent.src_black}}
whitepoint {{parent.src_white}}
gamma {{parent.response}}
name Grade1
xpos -528
ypos 594
}
push $N72e94c90
push $N72e9fda0
Merge2 {
inputs 2
operation divide
also_merge all
name Merge4
xpos -418
ypos 562
}
Merge2 {
inputs 2
operation multiply
also_merge all
name Merge3
xpos -418
ypos 600
}
Dot {
name DP
xpos -384
ypos 671
addUserKnob {20 User}
addUserKnob {14 j R 0 100}
j {{"pow(2, t*(log(parent.max_size*parent.f)/log(2)) )"} {"pow(2, t*(log(parent.max_size*parent.f)/log(2)) )"}}
}
set N72ee32f0 [stack 0]
Blur {
size {{"DP.j((1/parent.s)*10)/ parent.f"} {"DP.j((1/parent.s)*10)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur9
xpos 482
ypos 729
}
Multiply {
value {{parent.p*1.0+0.0} {parent.p*1.0+0.0} {parent.p*1.0+0.0} {parent.p*1.0+0.0}}
name Multiply9
xpos 482
ypos 767
}
push $N72ee32f0cted true
xpos 4
Blur {
size {{"DP.j((1/parent.s)*9)/ parent.f"} {"DP.j((1/parent.s)*9)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur8
xpos 382
ypos 729
}
Multiply {
value {{parent.p*0.9+0.1} {parent.p*0.9+0.1} {parent.p*0.9+0.1} {parent.p*0.9+0.1}}
name Multiply8
xpos 382
ypos 767
}
push $N72ee32f0
Blur {
size {{"DP.j((1/parent.s)*8)/ parent.f"} {"DP.j((1/parent.s)*8)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur7
xpos 282
ypos 729
}
Multiply {
value {{parent.p*0.8+0.2} {parent.p*0.8+0.2} {parent.p*0.8+0.2} {parent.p*0.8+0.2}}
name Multiply7
xpos 282
ypos 767
}
push $N72ee32f0
Blur {
size {{"DP.j((1/parent.s)*7)/ parent.f"} {"DP.j((1/parent.s)*7)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur6
xpos 182
ypos 729
}
Multiply {
value {{parent.p*0.7+0.3} {parent.p*0.7+0.3} {parent.p*0.7+0.3} {parent.p*0.7+0.3}}
name Multiply6
xpos 182
ypos 767
}
push $N72ee32f0
Blur {
size {{"DP.j((1/parent.s)*6)/ parent.f"} {"DP.j((1/parent.s)*6)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur5
xpos 82
ypos 729
}
Multiply {
value {{parent.p*0.6+0.4} {parent.p*0.6+0.4} {parent.p*0.6+0.4} {parent.p*0.6+0.4}}
name Multiply5
xpos 82
ypos 767
}
push $N72ee32f0
Blur {
size {{"DP.j((1/parent.s)*5)/ parent.f"} {"DP.j((1/parent.s)*5)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur4
xpos -18
ypos 729
}
Multiply {
value {{parent.p*0.5+0.5} {parent.p*0.5+0.5} {parent.p*0.5+0.5} {parent.p*0.5+0.5}}
name Multiply4
xpos -18
ypos 767
}
push $N72ee32f0
Blur {
size {{"DP.j((1/parent.s)*4)/ parent.f"} {"DP.j((1/parent.s)*4)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur3
xpos -118
ypos 729
}
Multiply {
value {{parent.p*0.4+0.6} {parent.p*0.4+0.6} {parent.p*0.4+0.6} {parent.p*0.4+0.6}}
name Multiply3
xpos -118
ypos 767
}
push $N72ee32f0
Blur {
size {{"DP.j((1/parent.s)*3)/ parent.f"} {"DP.j((1/parent.s)*3)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur2
xpos -218
ypos 729
}
Multiply {
value {{parent.p*0.3+0.7} {parent.p*0.3+0.7} {parent.p*0.3+0.7} {parent.p*0.3+0.7}}
name Multiply2
xpos -218
ypos 767
}
push 0
push $N72ee32f0
Blur {
size {{"DP.j((1/parent.s)*2)/ parent.f"} {"DP.j((1/parent.s)*2)/ parent.f"}}
filter {{Blur0.filter}}
quality {{Blur0.quality}}
crop false
name Blur1
xpos -318
ypos 729
}
Multiply {
value {{parent.p*0.2+0.8} {parent.p*0.2+0.8} {parent.p*0.2+0.8} {parent.p*0.2+0.8}}
name Multiply1
xpos -318
ypos 767
}
push $N72ee32f0
Blur {
size {{"DP.j(1/parent.s + 0) / parent.f"} {"DP.j(1/parent.s + 0) / parent.f"}}
crop false
name Blur0
xpos -418
ypos 729
}
Multiply {
value {{"parent.p * 1/parent.s + (1-1/parent.s)"}}
name Multiply0
xpos -418
ypos 767
}
Merge2 {
inputs 10+1
operation plus
name MergeBlurs
xpos -418
ypos 864
}
Multiply {
value {{parent.intensity*parent.tint/parent.s} {parent.intensity*parent.tint/parent.s} {parent.intensity*parent.tint/parent.s} {parent.intensity*parent.tint/parent.s}}
name MultiplyR
xpos -418
ypos 890
}
Expression {
expr0 isnan(r)?0:r
expr1 isnan(g)?0:g
expr2 isnan(b)?0:b
expr3 isnan(a)?0:a
name NanToBlack
xpos -418
ypos 928
}
push $N72e2f4a0
Dot {
name Dot4
xpos -739
ypos 769
}
set N72bfb6a0 [stack 0]
Dot {
name Dot2
xpos -629
ypos 769
}
Shuffle {
red black
green black
blue black
name Shuffle
xpos -663
ypos 847
disable {{!parent.effect_only}}
}
Remove {
operation keep
channels rgb
name Remove1
xpos -663
ypos 873
disable {{!parent.effect_only}}
}
Merge2 {
inputs 2
operation plus
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
name Merge1
xpos -663
ypos 928
}
Dot {
name Dot3
xpos -629
ypos 978
}
push $N72bfb6a0
Merge2 {
inputs 2+1
operation copy
output {rgba.red rgba.green rgba.blue -rgba.alpha}
also_merge all
name Merge
xpos -773
ypos 974
}
Crop {
box {{parent.crop?0:-parent.overscan} {parent.crop?0:-parent.overscan} {parent.crop?width:width+parent.overscan.w} {parent.crop?height:height+parent.overscan.h}}
intersect true
name CropOverscan
selected true
xpos -773
ypos 1000
disable {{"!parent.enableOverscan && !parent.crop"}}
addUserKnob {20 User}
addUserKnob {22 cropToBbox l "Crop to Bounding Box" -STARTLINE T codeBBox()}
}
Output {
name Output
xpos -773
ypos 1026
}
end_group
